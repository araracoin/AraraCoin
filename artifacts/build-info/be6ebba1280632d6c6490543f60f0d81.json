{"id":"be6ebba1280632d6c6490543f60f0d81","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/finance/VestingWallet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (finance/VestingWallet.sol)\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"../token/ERC20/utils/SafeERC20.sol\";\nimport {Address} from \"../utils/Address.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {Ownable} from \"../access/Ownable.sol\";\n\n/**\n * @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n * assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n *\n * Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n *\n * By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n * a beneficiary until a specified time.\n *\n * NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n * Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n * counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n * near future.\n *\n * NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n * sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n */\ncontract VestingWallet is Context, Ownable {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address token => uint256) private _erc20Released;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n     * vesting duration of the vesting wallet.\n     */\n    constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Getter for the end timestamp.\n     */\n    function end() public view virtual returns (uint256) {\n        return start() + duration();\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() public view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable eth.\n     */\n    function releasable() public view virtual returns (uint256) {\n        return vestedAmount(uint64(block.timestamp)) - released();\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {EtherReleased} event.\n     */\n    function release() public virtual {\n        uint256 amount = releasable();\n        _released += amount;\n        emit EtherReleased(amount);\n        Address.sendValue(payable(owner()), amount);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), owner(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp >= end()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/abstract/VestingWalletCliff.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport {VestingWallet} from \"@openzeppelin/contracts/finance/VestingWallet.sol\";\n\n/**\n * @dev Extension of {VestingWallet} that adds a cliff to the vesting schedule.\n */\nabstract contract VestingWalletCliff is VestingWallet {\n    using SafeCast for *;\n\n    uint64 private immutable _cliff;\n\n    /// @dev The specified cliff duration is larger than the vesting duration.\n    error InvalidCliffDuration(uint64 cliffSeconds, uint64 durationSeconds);\n\n    /**\n     * @dev Set the start timestamp of the vesting wallet cliff.\n     */\n    constructor(uint64 cliffSeconds) {\n        if (cliffSeconds > duration()) {\n            revert InvalidCliffDuration(cliffSeconds, duration().toUint64());\n        }\n        _cliff = start().toUint64() + cliffSeconds;\n    }\n\n    /**\n     * @dev Getter for the cliff timestamp.\n     */\n    function cliff() public view virtual returns (uint256) {\n        return _cliff;\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation. Returns 0 if the {cliff} timestamp is not met.\n     *\n     * IMPORTANT: The cliff not only makes the schedule return 0, but it also ignores every possible side\n     * effect from calling the inherited implementation (i.e. `super._vestingSchedule`). Carefully consider\n     * this caveat if the overridden implementation of this function has any (e.g. writing to memory or reverting).\n     */\n    function _vestingSchedule(\n        uint256 totalAllocation,\n        uint64 timestamp\n    ) internal view virtual override returns (uint256) {\n        return timestamp < cliff() ? 0 : super._vestingSchedule(totalAllocation, timestamp);\n    }\n}"},"contracts/AraraCoin.sol":{"content":"// SPDX-License-Identifier: MIT\n// This contract is compatible with OpenZeppelin Contracts version ^5.0.0\npragma solidity ^0.8.20;\n\n// Importing OpenZeppelin libraries for ERC20, ERC20Permit, and Ownable functionality\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n// The main contract for the AraraCoin token\ncontract AraraCoin is ERC20, ERC20Permit, AccessControl {\n    // Defining a role for managers who will have special permissions      \n    bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\");\n\n    // Denominator for tax calculations for more precise percentages\n    uint256 private constant FEE_DENOMINATOR = 10_000; // For 0.0001% precision\n\n    // Addresses used for initial token distribution\n    address private constant marketingWallet = 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f;\n    address private constant consultingWallet = 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720;\n    address private constant auditWallet = 0x70997970C51812dc3A010C7d01b50e0d17dc79C8;\n    address private constant preSaleWallet = 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC;\n    address private constant launchWallet = 0x90F79bf6EB2c4f870365E785982E1f101E93b906;\n    address private constant investorsWallet = 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65;\n    address private constant investorsYearOneVestingWallet = 0x71bE63f3384f5fb98995898A86B02Fb2426c5788;\n    address private constant investorsYearTwoVestingWallet = 0xFABB0ac9d68B0B445fB7357272Ff202C5651694a;\n    address private constant teamVestingWallet = 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc;\n    address private constant foundersVestingWallet = 0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec;\n    address private constant companyVestingWallet = 0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097;\n    address private constant preservationProjectsVestingWallet = 0x976EA74026E726554dB657fA54763abd0C3a0aa9;\n\n    // Manager wallet addresses for management roles\n    address private managerWallet1;\n    address private constant managerWallet2 = 0xBcd4042DE499D14e55001CcbB24a551F3b954096;\n    address private constant managerWallet3 = 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955;\n    \n    // Total supply of the token, set at 100 billion tokens, with 18 decimals\n    uint256 private constant TOTAL_SUPPLY = 100_000_000_000 * 10 ** 18;\n    \n    // Address where tax funds will be sent\n    address public taxWallet = 0xbDA5747bFD65F08deb54cb465eB87D40e51B197E;\n\n    // A boolean that indicates whether trading has been enabled\n    bool public tradingEnabled;\n    \n    // A set of addresses that are allowed to trade before trading is officially enabled\n    using EnumerableSet for EnumerableSet.AddressSet;\n    EnumerableSet.AddressSet private _canTrade;\n\n    // A set of addresses that are exempted from paying tax\n    EnumerableSet.AddressSet private _exempted;\n    uint256 public taxPercentage;\n\n    // Event emitted when trading is enabled\n    event TradingEnabled();\n    // Emitted when the tax is updated.\n    event TaxPercentageUpdated(uint256 oldTaxPercentage, uint256 newTaxPercentage);\n    // Emitted when an address is added to or removed from the exempted addresses set.\n    event TaxExemptionUpdated(address indexed wallet, bool exempted);\n    // Event emitted when the tax wallet is updated\n    event TaxWalletChanged(address oldAddress, address newAddress);\n\n    // Track approvals, expiration times, and which addresses have approved\n    struct ApprovalInfo {\n        uint256 count;\n        uint256 expiration;\n        mapping(address => bool) approvedBy; // Track which addresses have approved\n    }    \n    mapping(bytes32 => ApprovalInfo) private _approvals;\n\n    // Required number of approvals and approval expiration time in seconds\n    uint256 private constant _requiredApprovals = 3;\n    uint256 private constant _approvalExpirationTime = 3600;\n\n    // Constructor initializes the token with name, symbol, and owner\n    // Also handles token distribution and minting\n    constructor(address defaultAdmin, address preservationProjectsVestingContract)\n        ERC20(\"Araracoin\", \"ARARA\") // Initialize the ERC20 token with a name and symbol\n        ERC20Permit(\"Araracoin\") // Enable ERC20 Permit functionality for approvals        \n    {\n        // Setup admin role and approvers\n        managerWallet1 = defaultAdmin;\n        _grantRole(MANAGER_ROLE, managerWallet1);\n        _grantRole(MANAGER_ROLE, managerWallet2);\n        _grantRole(MANAGER_ROLE, managerWallet3);\n\n        taxPercentage = 0; // Set initial tax percentage to 0\n\n        // Add address(0) and the initial owner to the whitelist of addresses that can trade before trading is enabled\n        _canTrade.add(address(0)); \n        _canTrade.add(defaultAdmin);\n\n        // Mint the total supply to the deployer of the contract\n        _mint(msg.sender, TOTAL_SUPPLY);\n\n        // Distribute the total supply according to the pre-defined percentages\n        _transfer(msg.sender, marketingWallet, 3_000_000_000 * 10 ** 18);  // 3% to marketing services\n        _transfer(msg.sender, consultingWallet, 1_250_000_000 * 10 ** 18);  // 1.25% to consulting services\n        _transfer(msg.sender, auditWallet, 750_000_000 * 10 ** 18);  // 0.75% to audit service\n        _transfer(msg.sender, preSaleWallet, TOTAL_SUPPLY * 10 / 100); // 10% to pre-sale\n        _transfer(msg.sender, launchWallet, TOTAL_SUPPLY * 20 / 100); // 20% to launch\n        _transfer(msg.sender, investorsWallet, 6_250_000_000 * 10 ** 18);  // 6.25% tokens for investors\n        _transfer(msg.sender, investorsYearOneVestingWallet, 6_250_000_000 * 10 ** 18);  // 6.25% tokens for investors' year-one vesting\n        _transfer(msg.sender, investorsYearTwoVestingWallet, 12_500_000_000 * 10 ** 18);  // 12.5% tokens for investors' year-two vesting\n        _transfer(msg.sender, companyVestingWallet, 9_600_000_000 * 10 ** 18);  // 9.6% to comapny vesting\n        _transfer(msg.sender, foundersVestingWallet, 5_600_000_000 * 10 ** 18); // 5.6% to founders vesting\n        _transfer(msg.sender, teamVestingWallet, 4_800_000_000 * 10 ** 18);  // 4.8% to team vesting\n        _transfer(msg.sender, preservationProjectsVestingContract, TOTAL_SUPPLY * 20 / 100); // 20% to preservation projects\n    }\n    // Private function to reset approvals if expired\n    function _resetApprovalIfExpired(bytes32 txHash) private {\n        ApprovalInfo storage approval = _approvals[txHash];\n        if (approval.expiration > 0 && block.timestamp > approval.expiration) {\n            approval.count = 0;\n            approval.expiration = 0;\n            delete approval.approvedBy[managerWallet1];\n            delete approval.approvedBy[managerWallet2];\n            delete approval.approvedBy[managerWallet3];\n        }\n    }\n    // Private function to process a new approval\n    function _processApproval(bytes32 txHash) private {\n        _resetApprovalIfExpired(txHash);\n        require(!_approvals[txHash].approvedBy[msg.sender], \"AraraCoin: You have already approved this transaction.\");\n        ApprovalInfo storage approval = _approvals[txHash];\n        approval.approvedBy[msg.sender] = true;\n        approval.count += 1;\n        approval.expiration = block.timestamp + _approvalExpirationTime;\n    }\n\n    // Function to enable trading, requires approval from multiple managers\n    function enableTrading() public onlyRole(MANAGER_ROLE) {\n        require(!tradingEnabled, \"AraraCoin: trading already enabled\"); // Ensure trading hasn't been enabled yet\n\n        bytes32 txHash = keccak256(abi.encodePacked(\"EnableTrading\"));\n        // Check if previous approvals have expired\n        _processApproval(txHash);\n        \n        if (_approvals[txHash].count >= _requiredApprovals) {\n            tradingEnabled = true; // Set trading to enabled\n            emit TradingEnabled(); // Emit event that trading has been enabled\n        } \n    }\n\n    // Function to set the tax percentage, requires approval from multiple managers\n    function setTaxPercentage(uint256 newTaxPercentage) public onlyRole(MANAGER_ROLE) {\n        //  Max 1% = 100 basis points, 0.01% = 1 basis points\n        require(newTaxPercentage >= 0 && newTaxPercentage <= 100, \"AraraCoin: Tax percentage must be between 0 and 100 basis points (max 1%).\");\n        require(taxPercentage != newTaxPercentage, \"AraraCoin: New tax percentage must be different from the current value.\");\n        \n        bytes32 txHash = keccak256(abi.encodePacked(\"NewTax\", newTaxPercentage));\n        _processApproval(txHash);\n\n        if (_approvals[txHash].count >= _requiredApprovals) {\n            uint256 oldTaxPercentage = taxPercentage;\n            taxPercentage = newTaxPercentage;\n\n            emit TaxPercentageUpdated(oldTaxPercentage, newTaxPercentage);\n        }\n    }\n\n    // Function to update the tax wallet address, requires approval from multiple managers\n    function setTaxWallet(address taxWalletAddress) public onlyRole(MANAGER_ROLE) {\n        bytes32 txHash = keccak256(abi.encodePacked(\"TaxWallet\", taxWalletAddress));\n        // Check if previous approvals have expired\n        _processApproval(txHash);\n\n        if (_approvals[txHash].count >= _requiredApprovals) {\n            address oldTaxWalletAddress = taxWallet; // Store the current tax wallet address\n            taxWallet = taxWalletAddress; // Set the new tax wallet address\n\n            emit TaxWalletChanged(oldTaxWalletAddress, taxWallet); // Emit event with old and new tax wallet addresses\n        }\n    }\n    // Add an address to the exempted set, preventing it from paying taxes\n    function addExemption(address exemption) public onlyRole(MANAGER_ROLE) {\n        require(_exempted.add(exemption), \"AraraCoin: Address already exists in the exemptions\");\n\n        emit TaxExemptionUpdated(exemption, true);        \n    }\n    // Remove an address from the exempted set, making it taxable\n    function removeExemption(address exemption) public onlyRole(MANAGER_ROLE) {\n        require(_exempted.remove(exemption), \"AraraCoin: Address not found in the exemptions\");\n\n        emit TaxExemptionUpdated(exemption, false);\n    }\n\n    // Function to add addresses that are allowed to trade before trading is enabled, only callable by the managers\n    function addCanTrade(\n        address[] calldata allowedAddresses\n    ) public onlyRole(MANAGER_ROLE) {\n        require(!tradingEnabled, \"AraraCoin: Trading already enabled\"); // Ensure trading isn't enabled yet\n        require(allowedAddresses.length != 0, \"AraraCoin: List of allowed addresses cannot be empty.\"); // Ensure there are addresses to add\n\n        // Add each address in the provided list to the set of addresses allowed to trade\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\n            _canTrade.add(allowedAddresses[i]);\n        }\n    }\n    \n    // Function to remove addresses from the list of allowed traders before trading is enabled, only callable by the managers\n    function removeCanTrade(\n        address[] calldata allowedAddresses\n    ) public onlyRole(MANAGER_ROLE) {\n        require(!tradingEnabled, \"AraraCoin: Trading already enabled\"); // Ensure trading isn't enabled yet\n        require(allowedAddresses.length != 0, \"AraraCoin: List of allowed addresses cannot be empty.\"); // Ensure there are addresses to add\n\n        // Add each address in the provided list to the set of addresses allowed to trade\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\n            _canTrade.remove(allowedAddresses[i]);\n        }\n    }\n\n    // Internal function to handle transfers, with tax calculations\n    function _update(address from, address to, uint256 value) \n        internal virtual override(ERC20) \n    {\n        // If trading is not yet enabled, ensure the sender is allowed to trade\n        if (!tradingEnabled) {\n            require(_canTrade.contains(from), \"AraraCoin: Trade is disabled\");\n        }\n\n        // Calculate the tax based on the sender, receiver, and amount\n        uint256 tax = _getTax(from, to, value);\n        uint256 taxedAmount = value - tax;\n\n        // If there is a tax, transfer the tax amount to the tax wallet\n        if (tax > 0) {\n            super._update(from, taxWallet, tax);\n        }\n\n        // Transfer the remaining amount to the receiver\n        super._update(from, to, taxedAmount);\n    }\n\n    // Private function to get the tax amount based on exemption rules and tax percentage\n    function _getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) private view returns (uint256) {\n        // If the sender or receiver is exempted, return zero tax\n        if (_exempted.contains(benefactor) || _exempted.contains(beneficiary)) {\n            return 0;\n        }\n        \n        // Otherwise, calculate the tax as a percentage of the amount\n        return amount * taxPercentage / FEE_DENOMINATOR;\n    }\n}\n"},"contracts/MyVestingWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/finance/VestingWallet.sol\";\nimport {VestingWalletCliff} from \"./abstract/VestingWalletCliff.sol\";\n\ncontract MyVestingWallet is VestingWalletCliff {\n    constructor(\n        address beneficiary,\n        uint64 startTimestamp,\n        uint64 durationSeconds,\n        uint64 cliffSeconds\n    )\n        VestingWallet(beneficiary, startTimestamp, durationSeconds)\n        VestingWalletCliff(cliffSeconds)\n    {\n        require(beneficiary != address(0), \"Beneficiary address cannot be zero\");\n        require(startTimestamp > block.timestamp, \"Start timestamp must be in the future\");\n        require(durationSeconds > 0, \"Vesting duration must be greater than zero\");\n        require(cliffSeconds <= durationSeconds, \"Cliff duration must be less than or equal to vesting duration\");\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2381],"ERC165":[3704],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2382,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3705,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3704,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3704,3716,378,2381],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3703],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3703,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2381],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":2382,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,2381],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/finance/VestingWallet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","exportedSymbols":{"Address":[2351],"Context":[2381],"IERC20":[1592],"Ownable":[526],"SafeERC20":[2098],"VestingWallet":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":1593,"src":"134:49:3","symbolAliases":[{"foreign":{"id":529,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"142:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"../token/ERC20/utils/SafeERC20.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":2099,"src":"184:61:3","symbolAliases":[{"foreign":{"id":531,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"192:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":2352,"src":"246:45:3","symbolAliases":[{"foreign":{"id":533,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"254:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":2382,"src":"292:45:3","symbolAliases":[{"foreign":{"id":535,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"300:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../access/Ownable.sol","id":538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":838,"sourceUnit":527,"src":"338:46:3","symbolAliases":[{"foreign":{"id":537,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"346:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":540,"name":"Context","nameLocations":["1664:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"1664:7:3"},"id":541,"nodeType":"InheritanceSpecifier","src":"1664:7:3"},{"baseName":{"id":542,"name":"Ownable","nameLocations":["1673:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"1673:7:3"},"id":543,"nodeType":"InheritanceSpecifier","src":"1673:7:3"}],"canonicalName":"VestingWallet","contractDependencies":[],"contractKind":"contract","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"386:1251:3","text":" @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable.\n By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n a beneficiary until a specified time.\n NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n near future.\n NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended."},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837,526,2381],"name":"VestingWallet","nameLocation":"1647:13:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"da9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b","id":547,"name":"EtherReleased","nameLocation":"1693:13:3","nodeType":"EventDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1715:6:3","nodeType":"VariableDeclaration","scope":547,"src":"1707:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1706:16:3"},"src":"1687:36:3"},{"anonymous":false,"eventSelector":"c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b","id":553,"name":"ERC20Released","nameLocation":"1734:13:3","nodeType":"EventDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1764:5:3","nodeType":"VariableDeclaration","scope":553,"src":"1748:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1779:6:3","nodeType":"VariableDeclaration","scope":553,"src":"1771:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1747:39:3"},"src":"1728:59:3"},{"constant":false,"id":555,"mutability":"mutable","name":"_released","nameLocation":"1809:9:3","nodeType":"VariableDeclaration","scope":837,"src":"1793:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":559,"mutability":"mutable","name":"_erc20Released","nameLocation":"1866:14:3","nodeType":"VariableDeclaration","scope":837,"src":"1824:56:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":558,"keyName":"token","keyNameLocation":"1840:5:3","keyType":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1824:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":561,"mutability":"immutable","name":"_start","nameLocation":"1911:6:3","nodeType":"VariableDeclaration","scope":837,"src":"1886:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":560,"name":"uint64","nodeType":"ElementaryTypeName","src":"1886:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":563,"mutability":"immutable","name":"_duration","nameLocation":"1948:9:3","nodeType":"VariableDeclaration","scope":837,"src":"1923:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":562,"name":"uint64","nodeType":"ElementaryTypeName","src":"1923:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"body":{"id":584,"nodeType":"Block","src":"2252:77:3","statements":[{"expression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":576,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2262:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":577,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2271:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2262:23:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":579,"nodeType":"ExpressionStatement","src":"2262:23:3"},{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":580,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"2295:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":581,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2307:15:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2295:27:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":583,"nodeType":"ExpressionStatement","src":"2295:27:3"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"1964:174:3","text":" @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n vesting duration of the vesting wallet."},"id":585,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":573,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2239:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":574,"kind":"baseConstructorSpecifier","modifierName":{"id":572,"name":"Ownable","nameLocations":["2231:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"2231:7:3"},"nodeType":"ModifierInvocation","src":"2231:20:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"beneficiary","nameLocation":"2163:11:3","nodeType":"VariableDeclaration","scope":585,"src":"2155:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"startTimestamp","nameLocation":"2183:14:3","nodeType":"VariableDeclaration","scope":585,"src":"2176:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"2176:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"durationSeconds","nameLocation":"2206:15:3","nodeType":"VariableDeclaration","scope":585,"src":"2199:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"2199:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2154:68:3"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"2252:0:3"},"scope":837,"src":"2143:186:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"2442:2:3","statements":[]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"2335:67:3","text":" @dev The contract should be able to receive Eth."},"id":590,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2414:2:3"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"2442:0:3"},"scope":837,"src":"2407:37:3","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":598,"nodeType":"Block","src":"2565:30:3","statements":[{"expression":{"id":596,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2582:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":595,"id":597,"nodeType":"Return","src":"2575:13:3"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"2450:55:3","text":" @dev Getter for the start timestamp."},"functionSelector":"be9a6555","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"start","nameLocation":"2519:5:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"2524:2:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"2556:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2555:9:3"},"scope":837,"src":"2510:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":607,"nodeType":"Block","src":"2720:33:3","statements":[{"expression":{"id":605,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"2737:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":604,"id":606,"nodeType":"Return","src":"2730:16:3"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2601:56:3","text":" @dev Getter for the vesting duration."},"functionSelector":"0fb5a6b4","id":608,"implemented":true,"kind":"function","modifiers":[],"name":"duration","nameLocation":"2671:8:3","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"2679:2:3"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"2711:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:9:3"},"scope":837,"src":"2662:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":620,"nodeType":"Block","src":"2870:44:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":614,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"2887:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":616,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2897:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2897:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2887:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":613,"id":619,"nodeType":"Return","src":"2880:27:3"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"2759:53:3","text":" @dev Getter for the end timestamp."},"functionSelector":"efbe1c1c","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"end","nameLocation":"2826:3:3","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"2829:2:3"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"2861:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2860:9:3"},"scope":837,"src":"2817:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"3037:33:3","statements":[{"expression":{"id":627,"name":"_released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"3054:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":626,"id":628,"nodeType":"Return","src":"3047:16:3"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"2920:54:3","text":" @dev Amount of eth already released"},"functionSelector":"96132521","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"2988:8:3","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"2996:2:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"3028:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3027:9:3"},"scope":837,"src":"2979:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"3208:45:3","statements":[{"expression":{"baseExpression":{"id":638,"name":"_erc20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3225:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":640,"indexExpression":{"id":639,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"3240:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3225:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":637,"id":641,"nodeType":"Return","src":"3218:28:3"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"3076:56:3","text":" @dev Amount of token already released"},"functionSelector":"9852595c","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"3146:8:3","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"token","nameLocation":"3163:5:3","nodeType":"VariableDeclaration","scope":643,"src":"3155:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3154:15:3"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"3199:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3199:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:9:3"},"scope":837,"src":"3137:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":660,"nodeType":"Block","src":"3388:74:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":652,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3425:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3425:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":650,"name":"uint64","nodeType":"ElementaryTypeName","src":"3418:6:3","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":649,"name":"vestedAmount","nodeType":"Identifier","overloadedDeclarations":[768,796],"referencedDeclaration":768,"src":"3405:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint64) view returns (uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3405:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":656,"name":"released","nodeType":"Identifier","overloadedDeclarations":[630,643],"referencedDeclaration":630,"src":"3445:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3405:50:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":648,"id":659,"nodeType":"Return","src":"3398:57:3"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"3259:64:3","text":" @dev Getter for the amount of releasable eth."},"functionSelector":"fbccedae","id":661,"implemented":true,"kind":"function","modifiers":[],"name":"releasable","nameLocation":"3337:10:3","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"3347:2:3"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"3379:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3378:9:3"},"scope":837,"src":"3328:134:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":682,"nodeType":"Block","src":"3681:86:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":670,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3711:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":673,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3725:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3731:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3725:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3718:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":671,"name":"uint64","nodeType":"ElementaryTypeName","src":"3718:6:3","typeDescriptions":{}}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":669,"name":"vestedAmount","nodeType":"Identifier","overloadedDeclarations":[768,796],"referencedDeclaration":796,"src":"3698:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3698:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":677,"name":"released","nodeType":"Identifier","overloadedDeclarations":[630,643],"referencedDeclaration":643,"src":"3745:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3698:62:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":668,"id":681,"nodeType":"Return","src":"3691:69:3"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"3468:135:3","text":" @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n IERC20 contract."},"functionSelector":"a3f8eace","id":683,"implemented":true,"kind":"function","modifiers":[],"name":"releasable","nameLocation":"3617:10:3","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"token","nameLocation":"3636:5:3","nodeType":"VariableDeclaration","scope":683,"src":"3628:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3627:15:3"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"3672:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3671:9:3"},"scope":837,"src":"3608:159:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":711,"nodeType":"Block","src":"3939:164:3","statements":[{"assignments":[688],"declarations":[{"constant":false,"id":688,"mutability":"mutable","name":"amount","nameLocation":"3957:6:3","nodeType":"VariableDeclaration","scope":711,"src":"3949:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3949:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":691,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":689,"name":"releasable","nodeType":"Identifier","overloadedDeclarations":[661,683],"referencedDeclaration":661,"src":"3966:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3949:29:3"},{"expression":{"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":692,"name":"_released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"3988:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4001:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":695,"nodeType":"ExpressionStatement","src":"3988:19:3"},{"eventCall":{"arguments":[{"id":697,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4036:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"EtherReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4022:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"EmitStatement","src":"4017:26:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":705,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4079:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4079:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4071:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"4071:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4071:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4089:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":700,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"4053:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2351_$","typeString":"type(library Address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:9:3","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"4053:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"4053:43:3"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"3773:127:3","text":" @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."},"functionSelector":"86d1a69f","id":712,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"3914:7:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"3921:2:3"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"3939:0:3"},"scope":837,"src":"3905:198:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":746,"nodeType":"Block","src":"4274:199:3","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"amount","nameLocation":"4292:6:3","nodeType":"VariableDeclaration","scope":746,"src":"4284:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4284:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":723,"initialValue":{"arguments":[{"id":721,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4312:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":720,"name":"releasable","nodeType":"Identifier","overloadedDeclarations":[661,683],"referencedDeclaration":683,"src":"4301:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4284:34:3"},{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":724,"name":"_erc20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4328:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":726,"indexExpression":{"id":725,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4343:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4328:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":727,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4353:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4328:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"4328:31:3"},{"eventCall":{"arguments":[{"id":731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4388:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4395:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"ERC20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4374:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"EmitStatement","src":"4369:33:3"},{"expression":{"arguments":[{"arguments":[{"id":739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4442:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":738,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4435:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1592_$","typeString":"type(contract IERC20)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"arguments":[],"expression":{"argumentTypes":[],"id":741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4450:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4450:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4459:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":735,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"4412:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2098_$","typeString":"type(library SafeERC20)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4422:12:3","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1858,"src":"4412:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4412:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"4412:54:3"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"4109:113:3","text":" @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."},"functionSelector":"19165587","id":747,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"4236:7:3","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"token","nameLocation":"4252:5:3","nodeType":"VariableDeclaration","scope":747,"src":"4244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"4244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4243:15:3"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"4274:0:3"},"scope":837,"src":"4227:246:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":767,"nodeType":"Block","src":"4691:87:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":758,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4733:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_VestingWallet_$837","typeString":"contract VestingWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestingWallet_$837","typeString":"contract VestingWallet"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4725:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"4725:7:3","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4725:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4739:7:3","memberName":"balance","nodeType":"MemberAccess","src":"4725:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":761,"name":"released","nodeType":"Identifier","overloadedDeclarations":[630,643],"referencedDeclaration":630,"src":"4749:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4725:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":764,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4761:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":755,"name":"_vestingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"4708:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":754,"id":766,"nodeType":"Return","src":"4701:70:3"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"4479:129:3","text":" @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."},"functionSelector":"0a17b06b","id":768,"implemented":true,"kind":"function","modifiers":[],"name":"vestedAmount","nameLocation":"4622:12:3","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"timestamp","nameLocation":"4642:9:3","nodeType":"VariableDeclaration","scope":768,"src":"4635:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":749,"name":"uint64","nodeType":"ElementaryTypeName","src":"4635:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4634:18:3"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"4682:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4681:9:3"},"scope":837,"src":"4613:165:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":795,"nodeType":"Block","src":"5012:109:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5078:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_VestingWallet_$837","typeString":"contract VestingWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestingWallet_$837","typeString":"contract VestingWallet"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"5070:7:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5053:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":779,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"5046:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1592_$","typeString":"type(contract IERC20)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5060:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"5046:23:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":789,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"5096:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":788,"name":"released","nodeType":"Identifier","overloadedDeclarations":[630,643],"referencedDeclaration":643,"src":"5087:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5087:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5046:56:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5104:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":778,"name":"_vestingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5029:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":777,"id":794,"nodeType":"Return","src":"5022:92:3"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"4784:130:3","text":" @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."},"functionSelector":"810ec23b","id":796,"implemented":true,"kind":"function","modifiers":[],"name":"vestedAmount","nameLocation":"4928:12:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"token","nameLocation":"4949:5:3","nodeType":"VariableDeclaration","scope":796,"src":"4941:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"timestamp","nameLocation":"4963:9:3","nodeType":"VariableDeclaration","scope":796,"src":"4956:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":772,"name":"uint64","nodeType":"ElementaryTypeName","src":"4956:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4940:33:3"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"5003:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5002:9:3"},"scope":837,"src":"4919:202:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":835,"nodeType":"Block","src":"5425:243:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5439:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":807,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"5451:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5439:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5503:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":814,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5516:3:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5516:5:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5503:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":832,"nodeType":"Block","src":"5576:86:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5598:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5617:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":822,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"5629:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5629:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5617:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5616:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5598:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5597:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":828,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5641:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:54:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":805,"id":831,"nodeType":"Return","src":"5590:61:3"}]},"id":833,"nodeType":"IfStatement","src":"5499:163:3","trueBody":{"id":819,"nodeType":"Block","src":"5523:47:3","statements":[{"expression":{"id":817,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5544:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":805,"id":818,"nodeType":"Return","src":"5537:22:3"}]}},"id":834,"nodeType":"IfStatement","src":"5435:227:3","trueBody":{"id":812,"nodeType":"Block","src":"5460:33:3","statements":[{"expression":{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5481:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":805,"id":811,"nodeType":"Return","src":"5474:8:3"}]}}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"5127:184:3","text":" @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"_vestingSchedule","nameLocation":"5325:16:3","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"totalAllocation","nameLocation":"5350:15:3","nodeType":"VariableDeclaration","scope":836,"src":"5342:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"timestamp","nameLocation":"5374:9:3","nodeType":"VariableDeclaration","scope":836,"src":"5367:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":800,"name":"uint64","nodeType":"ElementaryTypeName","src":"5367:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5341:43:3"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"5416:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5415:9:3"},"scope":837,"src":"5316:352:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":838,"src":"1638:4032:3","usedErrors":[392,397,1825,2106,2111,2114],"usedEvents":[403,547,553]}],"src":"108:5563:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[862]},"id":863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":862,"linearizedBaseContracts":[862],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":842,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":861,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":861,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":845,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":861,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":861,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":849,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":861,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":861,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":861,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":861,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":862,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":863,"src":"133:605:4","usedErrors":[],"usedEvents":[842]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[999],"IERC20Errors":[904],"IERC721Errors":[952]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":864,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":904,"linearizedBaseContracts":[904],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":874,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":874,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":874,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":874,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":879,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":879,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":884,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":884,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":893,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":893,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":893,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":893,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":898,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":898,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":903,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":903,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":1000,"src":"278:1764:5","usedErrors":[874,879,884,893,898,903],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":952,"linearizedBaseContracts":[952],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":910,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":910,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":915,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":915,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":924,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":924,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":924,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":924,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":929,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":929,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":934,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":934,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":941,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":941,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":941,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":946,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":946,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":951,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":951,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":1000,"src":"2186:2092:5","usedErrors":[910,915,924,929,934,941,946,951],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":999,"linearizedBaseContracts":[999],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":964,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":964,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":964,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":964,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":964,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":969,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":969,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":974,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":974,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":981,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":981,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":981,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":986,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":986,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":991,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":991,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":998,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":998,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":998,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":1000,"src":"4424:2107:5","usedErrors":[964,969,974,981,986,991,998],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2381],"ERC20":[1514],"IERC20":[1592],"IERC20Errors":[904],"IERC20Metadata":[1772]},"id":1515,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1515,"sourceUnit":1593,"src":"131:36:6","symbolAliases":[{"foreign":{"id":1002,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1515,"sourceUnit":1773,"src":"168:63:6","symbolAliases":[{"foreign":{"id":1004,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1515,"sourceUnit":2382,"src":"232:48:6","symbolAliases":[{"foreign":{"id":1006,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1515,"sourceUnit":1000,"src":"281:65:6","symbolAliases":[{"foreign":{"id":1008,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1011,"name":"Context","nameLocations":["1428:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"1428:7:6"},"id":1012,"nodeType":"InheritanceSpecifier","src":"1428:7:6"},{"baseName":{"id":1013,"name":"IERC20","nameLocations":["1437:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"1437:6:6"},"id":1014,"nodeType":"InheritanceSpecifier","src":"1437:6:6"},{"baseName":{"id":1015,"name":"IERC20Metadata","nameLocations":["1445:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"1445:14:6"},"id":1016,"nodeType":"InheritanceSpecifier","src":"1445:14:6"},{"baseName":{"id":1017,"name":"IERC20Errors","nameLocations":["1461:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"1461:12:6"},"id":1018,"nodeType":"InheritanceSpecifier","src":"1461:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"348:1052:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1514,"linearizedBaseContracts":[1514,904,1772,1592,2381],"name":"ERC20","nameLocation":"1419:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1022,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:6","nodeType":"VariableDeclaration","scope":1514,"src":"1480:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1021,"keyName":"account","keyNameLocation":"1496:7:6","keyType":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:6","nodeType":"VariableDeclaration","scope":1514,"src":"1540:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1027,"keyName":"account","keyNameLocation":"1556:7:6","keyType":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1026,"keyName":"spender","keyNameLocation":"1583:7:6","keyType":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1030,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:6","nodeType":"VariableDeclaration","scope":1514,"src":"1630:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1032,"mutability":"mutable","name":"_name","nameLocation":"1680:5:6","nodeType":"VariableDeclaration","scope":1514,"src":"1665:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1031,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1034,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:6","nodeType":"VariableDeclaration","scope":1514,"src":"1691:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1033,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1050,"nodeType":"Block","src":"1952:57:6","statements":[{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1042,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1962:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1043,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1970:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1045,"nodeType":"ExpressionStatement","src":"1962:13:6"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1046,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1985:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1047,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1995:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1049,"nodeType":"ExpressionStatement","src":"1985:17:6"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"1720:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1051,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"name_","nameLocation":"1922:5:6","nodeType":"VariableDeclaration","scope":1051,"src":"1908:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1036,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:6","nodeType":"VariableDeclaration","scope":1051,"src":"1929:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1038,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:6"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"1952:0:6"},"scope":1514,"src":"1896:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1759],"body":{"id":1059,"nodeType":"Block","src":"2134:29:6","statements":[{"expression":{"id":1057,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2151:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1056,"id":1058,"nodeType":"Return","src":"2144:12:6"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"2015:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:6","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"2087:2:6"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1060,"src":"2119:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1054,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:6"},"scope":1514,"src":"2074:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1765],"body":{"id":1068,"nodeType":"Block","src":"2338:31:6","statements":[{"expression":{"id":1066,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2355:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1065,"id":1067,"nodeType":"Return","src":"2348:14:6"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"2169:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:6","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"2291:2:6"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"2323:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1063,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:6"},"scope":1514,"src":"2276:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1771],"body":{"id":1077,"nodeType":"Block","src":"3058:26:6","statements":[{"expression":{"hexValue":"3138","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1074,"id":1076,"nodeType":"Return","src":"3068:9:6"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"2375:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"3019:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"3051:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1072,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:6"},"scope":1514,"src":"3002:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1541],"body":{"id":1086,"nodeType":"Block","src":"3205:36:6","statements":[{"expression":{"id":1084,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3222:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1083,"id":1085,"nodeType":"Return","src":"3215:19:6"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"3090:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:6","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"3164:2:6"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"3196:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:6"},"scope":1514,"src":"3144:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1549],"body":{"id":1099,"nodeType":"Block","src":"3373:42:6","statements":[{"expression":{"baseExpression":{"id":1095,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"3390:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1097,"indexExpression":{"id":1096,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3400:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1094,"id":1098,"nodeType":"Return","src":"3383:25:6"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"3247:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:6","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"account","nameLocation":"3326:7:6","nodeType":"VariableDeclaration","scope":1100,"src":"3318:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:6"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"3364:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:6"},"scope":1514,"src":"3299:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1559],"body":{"id":1123,"nodeType":"Block","src":"3685:103:6","statements":[{"assignments":[1111],"declarations":[{"constant":false,"id":1111,"mutability":"mutable","name":"owner","nameLocation":"3703:5:6","nodeType":"VariableDeclaration","scope":1123,"src":"3695:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1114,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1112,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3711:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:6"},{"expression":{"arguments":[{"id":1116,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3743:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3750:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3754:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1115,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"3733:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"3733:27:6"},{"expression":{"hexValue":"74727565","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1109,"id":1122,"nodeType":"Return","src":"3770:11:6"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"3421:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:6","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"to","nameLocation":"3636:2:6","nodeType":"VariableDeclaration","scope":1124,"src":"3628:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"3648:5:6","nodeType":"VariableDeclaration","scope":1124,"src":"3640:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:6"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1124,"src":"3679:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:6"},"scope":1514,"src":"3610:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1569],"body":{"id":1140,"nodeType":"Block","src":"3935:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3952:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1136,"indexExpression":{"id":1135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3964:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1138,"indexExpression":{"id":1137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"3971:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1133,"id":1139,"nodeType":"Return","src":"3945:34:6"}]},"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"3794:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:6","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"owner","nameLocation":"3873:5:6","nodeType":"VariableDeclaration","scope":1141,"src":"3865:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"spender","nameLocation":"3888:7:6","nodeType":"VariableDeclaration","scope":1141,"src":"3880:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:6"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1141,"src":"3926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:6"},"scope":1514,"src":"3846:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1579],"body":{"id":1164,"nodeType":"Block","src":"4372:107:6","statements":[{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"4390:5:6","nodeType":"VariableDeclaration","scope":1164,"src":"4382:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1155,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1153,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4398:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:6"},{"expression":{"arguments":[{"id":1157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"4429:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"4436:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4445:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1156,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1405,1465],"referencedDeclaration":1405,"src":"4420:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"ExpressionStatement","src":"4420:31:6"},{"expression":{"hexValue":"74727565","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1150,"id":1163,"nodeType":"Return","src":"4461:11:6"}]},"documentation":{"id":1142,"nodeType":"StructuredDocumentation","src":"3992:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:6","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"spender","nameLocation":"4318:7:6","nodeType":"VariableDeclaration","scope":1165,"src":"4310:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"value","nameLocation":"4335:5:6","nodeType":"VariableDeclaration","scope":1165,"src":"4327:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:6"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"4366:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:6"},"scope":1514,"src":"4293:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1591],"body":{"id":1196,"nodeType":"Block","src":"5132:151:6","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"spender","nameLocation":"5150:7:6","nodeType":"VariableDeclaration","scope":1196,"src":"5142:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1181,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1179,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"5160:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:6"},{"expression":{"arguments":[{"id":1183,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5198:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5204:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"5213:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"5182:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"5182:37:6"},{"expression":{"arguments":[{"id":1189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5239:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5245:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"5249:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5229:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"5229:26:6"},{"expression":{"hexValue":"74727565","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1176,"id":1195,"nodeType":"Return","src":"5265:11:6"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"4485:549:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:6","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"from","nameLocation":"5069:4:6","nodeType":"VariableDeclaration","scope":1197,"src":"5061:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"to","nameLocation":"5083:2:6","nodeType":"VariableDeclaration","scope":1197,"src":"5075:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"5095:5:6","nodeType":"VariableDeclaration","scope":1197,"src":"5087:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"5126:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1174,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:6"},"scope":1514,"src":"5039:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1243,"nodeType":"Block","src":"5725:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5739:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:6","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"5735:86:6","trueBody":{"id":1220,"nodeType":"Block","src":"5759:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:6","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1213,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"5780:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"RevertStatement","src":"5773:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5834:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:6","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"5830:86:6","trueBody":{"id":1235,"nodeType":"Block","src":"5852:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:6","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1228,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"5873:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"5866:39:6"}]}},{"expression":{"arguments":[{"id":1238,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5933:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5939:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"5943:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"5925:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"5925:24:6"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"5289:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:6","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"from","nameLocation":"5683:4:6","nodeType":"VariableDeclaration","scope":1244,"src":"5675:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"to","nameLocation":"5697:2:6","nodeType":"VariableDeclaration","scope":1244,"src":"5689:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"value","nameLocation":"5709:5:6","nodeType":"VariableDeclaration","scope":1244,"src":"5701:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:6"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"5725:0:6"},"scope":1514,"src":"5656:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"6346:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6360:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:6","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1291,"nodeType":"Block","src":"6534:362:6","statements":[{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:6","nodeType":"VariableDeclaration","scope":1291,"src":"6548:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1270,"initialValue":{"baseExpression":{"id":1267,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6570:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1269,"indexExpression":{"id":1268,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6580:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6603:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6617:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6599:115:6","trueBody":{"id":1280,"nodeType":"Block","src":"6624:90:6","statements":[{"errorCall":{"arguments":[{"id":1275,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6674:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6680:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6693:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1274,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6649:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1279,"nodeType":"RevertStatement","src":"6642:57:6"}]}},{"id":1290,"nodeType":"UncheckedBlock","src":"6727:159:6","statements":[{"expression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1282,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6834:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1284,"indexExpression":{"id":1283,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6844:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6852:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6866:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1289,"nodeType":"ExpressionStatement","src":"6834:37:6"}]}]},"id":1292,"nodeType":"IfStatement","src":"6356:540:6","trueBody":{"id":1264,"nodeType":"Block","src":"6380:148:6","statements":[{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1260,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6496:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6512:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1263,"nodeType":"ExpressionStatement","src":"6496:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1293,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6910:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:6","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1312,"nodeType":"Block","src":"7125:206:6","statements":[{"id":1311,"nodeType":"UncheckedBlock","src":"7139:182:6","statements":[{"expression":{"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1305,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7284:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1307,"indexExpression":{"id":1306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7294:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7301:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1310,"nodeType":"ExpressionStatement","src":"7284:22:6"}]}]},"id":1313,"nodeType":"IfStatement","src":"6906:425:6","trueBody":{"id":1304,"nodeType":"Block","src":"6928:191:6","statements":[{"id":1303,"nodeType":"UncheckedBlock","src":"6942:167:6","statements":[{"expression":{"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1299,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"7073:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7089:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1302,"nodeType":"ExpressionStatement","src":"7073:21:6"}]}]}},{"eventCall":{"arguments":[{"id":1315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"7355:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"7361:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7365:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1314,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"7346:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"EmitStatement","src":"7341:30:6"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"5962:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:6","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"from","nameLocation":"6296:4:6","nodeType":"VariableDeclaration","scope":1321,"src":"6288:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"to","nameLocation":"6310:2:6","nodeType":"VariableDeclaration","scope":1321,"src":"6302:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"6322:5:6","nodeType":"VariableDeclaration","scope":1321,"src":"6314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:6"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"6346:0:6"},"scope":1514,"src":"6271:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"7777:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1329,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"7791:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:6","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"7787:91:6","trueBody":{"id":1342,"nodeType":"Block","src":"7814:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:6","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1335,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"7835:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"RevertStatement","src":"7828:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:6","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"7907:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7916:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1344,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7887:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"7887:35:6"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"7384:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:6","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"account","nameLocation":"7744:7:6","nodeType":"VariableDeclaration","scope":1354,"src":"7736:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"value","nameLocation":"7761:5:6","nodeType":"VariableDeclaration","scope":1354,"src":"7753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:6"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"7777:0:6"},"scope":1514,"src":"7721:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"8303:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8317:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:6","typeDescriptions":{}}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1376,"nodeType":"IfStatement","src":"8313:89:6","trueBody":{"id":1375,"nodeType":"Block","src":"8340:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:6","typeDescriptions":{}}},"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1368,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"8361:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"RevertStatement","src":"8354:37:6"}]}},{"expression":{"arguments":[{"id":1378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8419:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:6","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"8440:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1377,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8411:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"8411:35:6"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"7935:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:6","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"account","nameLocation":"8270:7:6","nodeType":"VariableDeclaration","scope":1387,"src":"8262:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"value","nameLocation":"8287:5:6","nodeType":"VariableDeclaration","scope":1387,"src":"8279:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:6"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"8303:0:6"},"scope":1514,"src":"8247:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"9063:54:6","statements":[{"expression":{"arguments":[{"id":1398,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"9082:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"9089:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"9098:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1397,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1405,1465],"referencedDeclaration":1465,"src":"9073:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"9073:37:6"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"8459:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:6","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"owner","nameLocation":"9015:5:6","nodeType":"VariableDeclaration","scope":1405,"src":"9007:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"spender","nameLocation":"9030:7:6","nodeType":"VariableDeclaration","scope":1405,"src":"9022:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"value","nameLocation":"9047:5:6","nodeType":"VariableDeclaration","scope":1405,"src":"9039:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:6"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[],"src":"9063:0:6"},"scope":1514,"src":"8989:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"10047:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10061:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:6","typeDescriptions":{}}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"10057:89:6","trueBody":{"id":1430,"nodeType":"Block","src":"10082:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:6","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1423,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"10103:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1429,"nodeType":"RevertStatement","src":"10096:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10159:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:6","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"10155:90:6","trueBody":{"id":1445,"nodeType":"Block","src":"10182:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:6","typeDescriptions":{}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1438,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"10203:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"RevertStatement","src":"10196:38:6"}]}},{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1447,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"10254:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1450,"indexExpression":{"id":1448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1451,"indexExpression":{"id":1449,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10273:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"10284:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ExpressionStatement","src":"10254:35:6"},{"condition":{"id":1455,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"10303:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"nodeType":"IfStatement","src":"10299:76:6","trueBody":{"id":1462,"nodeType":"Block","src":"10314:61:6","statements":[{"eventCall":{"arguments":[{"id":1457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10342:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10349:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"10358:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1456,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"10333:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"EmitStatement","src":"10328:36:6"}]}}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"9123:821:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:6","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"owner","nameLocation":"9975:5:6","nodeType":"VariableDeclaration","scope":1465,"src":"9967:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"spender","nameLocation":"9990:7:6","nodeType":"VariableDeclaration","scope":1465,"src":"9982:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"value","nameLocation":"10007:5:6","nodeType":"VariableDeclaration","scope":1465,"src":"9999:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:6","nodeType":"VariableDeclaration","scope":1465,"src":"10014:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:6"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"10047:0:6"},"scope":1514,"src":"9949:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"10752:388:6","statements":[{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:6","nodeType":"VariableDeclaration","scope":1512,"src":"10762:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[{"id":1478,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10799:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"10806:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1477,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"10789:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10828:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:6","memberName":"max","nodeType":"MemberAccess","src":"10848:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"10824:310:6","trueBody":{"id":1510,"nodeType":"Block","src":"10867:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10885:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"10904:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1499,"nodeType":"IfStatement","src":"10881:130:6","trueBody":{"id":1498,"nodeType":"Block","src":"10911:100:6","statements":[{"errorCall":{"arguments":[{"id":1493,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1494,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10972:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"10990:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1492,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10936:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"RevertStatement","src":"10929:67:6"}]}},{"id":1509,"nodeType":"UncheckedBlock","src":"11024:100:6","statements":[{"expression":{"arguments":[{"id":1501,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"11061:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"11068:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"11077:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"11096:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1500,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1405,1465],"referencedDeclaration":1465,"src":"11052:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"11052:57:6"}]}]}}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"10387:271:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:6","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"owner","nameLocation":"10696:5:6","nodeType":"VariableDeclaration","scope":1513,"src":"10688:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"spender","nameLocation":"10711:7:6","nodeType":"VariableDeclaration","scope":1513,"src":"10703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"10728:5:6","nodeType":"VariableDeclaration","scope":1513,"src":"10720:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:6"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"10752:0:6"},"scope":1514,"src":"10663:477:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1515,"src":"1401:9741:6","usedErrors":[874,879,884,893,898,903],"usedEvents":[1526,1535]}],"src":"105:11038:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1592]},"id":1593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1516,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1592,"linearizedBaseContracts":[1592],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1526,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":1526,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":1526,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1524,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":1526,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1535,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":1535,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":1535,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":1535,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1541,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1592,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1549,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":1549,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":1592,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":1559,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":1559,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1556,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":1592,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1569,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":1569,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":1569,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":1592,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1579,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":1579,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":1579,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1576,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":1592,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1591,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":1591,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":1591,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1588,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":1592,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1593,"src":"203:2575:7","usedErrors":[],"usedEvents":[1526,1535]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3379],"EIP712":[3606],"ERC20":[1514],"ERC20Permit":[1746],"IERC20Permit":[1808],"Nonces":[2449]},"id":1747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":1809,"src":"148:48:8","symbolAliases":[{"foreign":{"id":1595,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":1515,"src":"197:35:8","symbolAliases":[{"foreign":{"id":1597,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":3380,"src":"233:60:8","symbolAliases":[{"foreign":{"id":1599,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":3607,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1601,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":2450,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1603,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1606,"name":"ERC20","nameLocations":["929:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1514,"src":"929:5:8"},"id":1607,"nodeType":"InheritanceSpecifier","src":"929:5:8"},{"baseName":{"id":1608,"name":"IERC20Permit","nameLocations":["936:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"936:12:8"},"id":1609,"nodeType":"InheritanceSpecifier","src":"936:12:8"},{"baseName":{"id":1610,"name":"EIP712","nameLocations":["950:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3606,"src":"950:6:8"},"id":1611,"nodeType":"InheritanceSpecifier","src":"950:6:8"},{"baseName":{"id":1612,"name":"Nonces","nameLocations":["958:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2449,"src":"958:6:8"},"id":1613,"nodeType":"InheritanceSpecifier","src":"958:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"408:487:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1746,"linearizedBaseContracts":[1746,2449,3606,862,1808,1514,904,1772,1592,2381],"name":"ERC20Permit","nameLocation":"914:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1618,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:8","nodeType":"VariableDeclaration","scope":1746,"src":"971:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1615,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"1124:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1623,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:8","nodeType":"ErrorDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:8","nodeType":"VariableDeclaration","scope":1623,"src":"1211:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:8"},"src":"1181:48:8"},{"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"1235:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1630,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:8","nodeType":"ErrorDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"signer","nameLocation":"1320:6:8","nodeType":"VariableDeclaration","scope":1630,"src":"1312:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"owner","nameLocation":"1336:5:8","nodeType":"VariableDeclaration","scope":1630,"src":"1328:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:8"},"src":"1285:58:8"},{"body":{"id":1640,"nodeType":"Block","src":"1624:2:8","statements":[]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1349:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1641,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1636,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1613:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1638,"kind":"baseConstructorSpecifier","modifierName":{"id":1635,"name":"EIP712","nameLocations":["1606:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3606,"src":"1606:6:8"},"nodeType":"ModifierInvocation","src":"1606:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"name","nameLocation":"1600:4:8","nodeType":"VariableDeclaration","scope":1641,"src":"1586:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1632,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:8"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[],"src":"1624:0:8"},"scope":1746,"src":"1574:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1793],"body":{"id":1717,"nodeType":"Block","src":"1869:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1659,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1661,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1901:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"1879:97:8","trueBody":{"id":1667,"nodeType":"Block","src":"1911:65:8","statements":[{"errorCall":{"arguments":[{"id":1664,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1956:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1663,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1932:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"RevertStatement","src":"1925:40:8"}]}},{"assignments":[1670],"declarations":[{"constant":false,"id":1670,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:8","nodeType":"VariableDeclaration","scope":1717,"src":"1986:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1684,"initialValue":{"arguments":[{"arguments":[{"id":1674,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2028:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1675,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2045:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2052:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2061:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2078:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1678,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2068:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1681,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2086:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1672,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1671,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:8"},{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"hash","nameLocation":"2115:4:8","nodeType":"VariableDeclaration","scope":1717,"src":"2107:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1690,"initialValue":{"arguments":[{"id":1688,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2139:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1687,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"2122:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:8"},{"assignments":[1692],"declarations":[{"constant":false,"id":1692,"mutability":"mutable","name":"signer","nameLocation":"2169:6:8","nodeType":"VariableDeclaration","scope":1717,"src":"2161:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1700,"initialValue":{"arguments":[{"id":1695,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2192:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1696,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2198:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1697,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2201:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1698,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2204:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1693,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2178:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3379_$","typeString":"type(library ECDSA)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3329,"src":"2178:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2220:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2230:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"2216:88:8","trueBody":{"id":1709,"nodeType":"Block","src":"2237:67:8","statements":[{"errorCall":{"arguments":[{"id":1705,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2279:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2287:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1704,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2258:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"RevertStatement","src":"2251:42:8"}]}},{"expression":{"arguments":[{"id":1712,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"2323:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1713,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2330:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2339:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1405,1465],"referencedDeclaration":1405,"src":"2314:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"2314:31:8"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"1632:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:8","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"owner","nameLocation":"1713:5:8","nodeType":"VariableDeclaration","scope":1718,"src":"1705:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"spender","nameLocation":"1736:7:8","nodeType":"VariableDeclaration","scope":1718,"src":"1728:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"value","nameLocation":"1761:5:8","nodeType":"VariableDeclaration","scope":1718,"src":"1753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:8","nodeType":"VariableDeclaration","scope":1718,"src":"1776:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"v","nameLocation":"1808:1:8","nodeType":"VariableDeclaration","scope":1718,"src":"1802:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1651,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"r","nameLocation":"1827:1:8","nodeType":"VariableDeclaration","scope":1718,"src":"1819:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"s","nameLocation":"1846:1:8","nodeType":"VariableDeclaration","scope":1718,"src":"1838:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:8"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"1869:0:8"},"scope":1746,"src":"1680:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1801,2408],"body":{"id":1734,"nodeType":"Block","src":"2506:43:8","statements":[{"expression":{"arguments":[{"id":1731,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2536:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1729,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1746_$","typeString":"type(contract super ERC20Permit)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"2523:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1728,"id":1733,"nodeType":"Return","src":"2516:26:8"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"2358:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:8","nodeType":"FunctionDefinition","overrides":{"id":1725,"nodeType":"OverrideSpecifier","overrides":[{"id":1723,"name":"IERC20Permit","nameLocations":["2466:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2466:12:8"},{"id":1724,"name":"Nonces","nameLocations":["2480:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2449,"src":"2480:6:8"}],"src":"2457:30:8"},"parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"owner","nameLocation":"2430:5:8","nodeType":"VariableDeclaration","scope":1735,"src":"2422:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:8"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"2497:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:8"},"scope":1746,"src":"2406:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1807],"body":{"id":1744,"nodeType":"Block","src":"2724:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1741,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"2741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1740,"id":1743,"nodeType":"Return","src":"2734:27:8"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"2555:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:8","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"2681:2:8"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"2715:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:8"},"scope":1746,"src":"2656:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1747,"src":"896:1874:8","usedErrors":[874,879,884,893,898,903,1623,1630,2391,2463,2465,3042,3047,3052],"usedEvents":[842,1526,1535]}],"src":"122:2649:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1592],"IERC20Metadata":[1772]},"id":1773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1773,"sourceUnit":1593,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1749,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1752,"name":"IERC20","nameLocations":["305:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"305:6:9"},"id":1753,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"190:86:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1772,"linearizedBaseContracts":[1772,1592],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1759,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1756,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":1772,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1765,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":1772,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1771,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1768,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":1772,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1773,"src":"277:405:9","usedErrors":[],"usedEvents":[1526,1535]}],"src":"125:558:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1808]},"id":1809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"149:1963:10","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1808,"linearizedBaseContracts":[1808],"name":"IERC20Permit","nameLocation":"2123:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"2142:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1793,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:10","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"owner","nameLocation":"3030:5:10","nodeType":"VariableDeclaration","scope":1793,"src":"3022:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"spender","nameLocation":"3053:7:10","nodeType":"VariableDeclaration","scope":1793,"src":"3045:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"value","nameLocation":"3078:5:10","nodeType":"VariableDeclaration","scope":1793,"src":"3070:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:10","nodeType":"VariableDeclaration","scope":1793,"src":"3093:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"v","nameLocation":"3125:1:10","nodeType":"VariableDeclaration","scope":1793,"src":"3119:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1785,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"r","nameLocation":"3144:1:10","nodeType":"VariableDeclaration","scope":1793,"src":"3136:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"s","nameLocation":"3163:1:10","nodeType":"VariableDeclaration","scope":1793,"src":"3155:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:10"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[],"src":"3179:0:10"},"scope":1808,"src":"2997:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"3186:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1801,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:10","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"owner","nameLocation":"3509:5:10","nodeType":"VariableDeclaration","scope":1801,"src":"3501:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:10"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"3539:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:10"},"scope":1808,"src":"3485:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"3554:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1807,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:10","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"3765:2:10"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1807,"src":"3791:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:10"},"scope":1808,"src":"3740:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1809,"src":"2113:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3680:10"},"id":10},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2351],"IERC20":[1592],"IERC20Permit":[1808],"SafeERC20":[2098]},"id":2099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1810,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2099,"sourceUnit":1593,"src":"141:37:11","symbolAliases":[{"foreign":{"id":1811,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"149:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2099,"sourceUnit":1809,"src":"179:60:11","symbolAliases":[{"foreign":{"id":1813,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"187:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2099,"sourceUnit":2352,"src":"240:51:11","symbolAliases":[{"foreign":{"id":1815,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"248:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"293:457:11","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2098,"linearizedBaseContracts":[2098],"name":"SafeERC20","nameLocation":"759:9:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1820,"libraryName":{"id":1818,"name":"Address","nameLocations":["781:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2351,"src":"781:7:11"},"nodeType":"UsingForDirective","src":"775:26:11","typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"807:64:11","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1825,"name":"SafeERC20FailedOperation","nameLocation":"882:24:11","nodeType":"ErrorDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"token","nameLocation":"915:5:11","nodeType":"VariableDeclaration","scope":1825,"src":"907:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:11"},"src":"876:46:11"},{"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"928:71:11","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1834,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:11","nodeType":"ErrorDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"spender","nameLocation":"1051:7:11","nodeType":"VariableDeclaration","scope":1834,"src":"1043:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:11","nodeType":"VariableDeclaration","scope":1834,"src":"1060:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:11","nodeType":"VariableDeclaration","scope":1834,"src":"1086:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:11"},"src":"1004:109:11"},{"body":{"id":1857,"nodeType":"Block","src":"1375:88:11","statements":[{"expression":{"arguments":[{"id":1846,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1405:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1427:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1559,"src":"1427:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1444:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1448:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1847,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1845,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"1385:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"ExpressionStatement","src":"1385:71:11"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"1119:179:11","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:11","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"token","nameLocation":"1332:5:11","nodeType":"VariableDeclaration","scope":1858,"src":"1325:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":1837,"nodeType":"UserDefinedTypeName","pathNode":{"id":1836,"name":"IERC20","nameLocations":["1325:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"1325:6:11"},"referencedDeclaration":1592,"src":"1325:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"to","nameLocation":"1347:2:11","nodeType":"VariableDeclaration","scope":1858,"src":"1339:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"value","nameLocation":"1359:5:11","nodeType":"VariableDeclaration","scope":1858,"src":"1351:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:11"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"1375:0:11"},"scope":2098,"src":"1303:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"1792:98:11","statements":[{"expression":{"arguments":[{"id":1872,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1822:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1844:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1591,"src":"1844:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1865:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1871:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1875:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1873,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1871,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"1802:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1883,"nodeType":"ExpressionStatement","src":"1802:81:11"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"1469:228:11","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:11","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"token","nameLocation":"1735:5:11","nodeType":"VariableDeclaration","scope":1885,"src":"1728:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":1861,"nodeType":"UserDefinedTypeName","pathNode":{"id":1860,"name":"IERC20","nameLocations":["1728:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"1728:6:11"},"referencedDeclaration":1592,"src":"1728:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"from","nameLocation":"1750:4:11","nodeType":"VariableDeclaration","scope":1885,"src":"1742:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"to","nameLocation":"1764:2:11","nodeType":"VariableDeclaration","scope":1885,"src":"1756:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"value","nameLocation":"1776:5:11","nodeType":"VariableDeclaration","scope":1885,"src":"1768:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:11"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[],"src":"1792:0:11"},"scope":2098,"src":"1702:188:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1915,"nodeType":"Block","src":"2167:139:11","statements":[{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:11","nodeType":"VariableDeclaration","scope":1915,"src":"2177:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1906,"initialValue":{"arguments":[{"arguments":[{"id":1902,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2098","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2098","typeString":"library SafeERC20"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:11","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1898,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2200:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1569,"src":"2200:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:11"},{"expression":{"arguments":[{"id":1908,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2262:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"id":1909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"2278:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2293:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2249:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"ExpressionStatement","src":"2249:50:11"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"1896:180:11","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:11","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"token","nameLocation":"2119:5:11","nodeType":"VariableDeclaration","scope":1916,"src":"2112:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":1888,"nodeType":"UserDefinedTypeName","pathNode":{"id":1887,"name":"IERC20","nameLocations":["2112:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"2112:6:11"},"referencedDeclaration":1592,"src":"2112:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"spender","nameLocation":"2134:7:11","nodeType":"VariableDeclaration","scope":1916,"src":"2126:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"value","nameLocation":"2151:5:11","nodeType":"VariableDeclaration","scope":1916,"src":"2143:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:11"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"2167:0:11"},"scope":2098,"src":"2081:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"2607:370:11","statements":[{"id":1957,"nodeType":"UncheckedBlock","src":"2617:354:11","statements":[{"assignments":[1928],"declarations":[{"constant":false,"id":1928,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:11","nodeType":"VariableDeclaration","scope":1957,"src":"2641:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1937,"initialValue":{"arguments":[{"arguments":[{"id":1933,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2098","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2098","typeString":"library SafeERC20"}],"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:11","typeDescriptions":{}}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1935,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"2699:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1929,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2668:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1569,"src":"2668:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1938,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2725:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1939,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2744:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1948,"nodeType":"IfStatement","src":"2721:160:11","trueBody":{"id":1947,"nodeType":"Block","src":"2763:118:11","statements":[{"errorCall":{"arguments":[{"id":1942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"2821:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2830:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1944,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2848:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1941,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2788:32:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"RevertStatement","src":"2781:85:11"}]}},{"expression":{"arguments":[{"id":1950,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2907:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"id":1951,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"2914:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2923:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1953,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2942:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2894:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"2894:66:11"}]}]},"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"2312:192:11","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:11","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"token","nameLocation":"2547:5:11","nodeType":"VariableDeclaration","scope":1959,"src":"2540:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":1919,"nodeType":"UserDefinedTypeName","pathNode":{"id":1918,"name":"IERC20","nameLocations":["2540:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"2540:6:11"},"referencedDeclaration":1592,"src":"2540:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"spender","nameLocation":"2562:7:11","nodeType":"VariableDeclaration","scope":1959,"src":"2554:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:11","nodeType":"VariableDeclaration","scope":1959,"src":"2571:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:11"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[],"src":"2607:0:11"},"scope":2098,"src":"2509:468:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2005,"nodeType":"Block","src":"3373:303:11","statements":[{"assignments":[1971],"declarations":[{"constant":false,"id":1971,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:11","nodeType":"VariableDeclaration","scope":2005,"src":"3383:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1970,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1980,"initialValue":{"arguments":[{"expression":{"id":1974,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3426:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"3426:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1976,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3442:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1972,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:11"},{"condition":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:11","subExpression":{"arguments":[{"id":1982,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3498:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"id":1983,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3505:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1981,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3474:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2004,"nodeType":"IfStatement","src":"3469:201:11","trueBody":{"id":2003,"nodeType":"Block","src":"3520:150:11","statements":[{"expression":{"arguments":[{"id":1987,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3554:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3576:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"3576:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1992,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3592:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1988,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1986,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3534:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"3534:71:11"},{"expression":{"arguments":[{"id":1999,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3639:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},{"id":2000,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3646:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1998,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3619:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1592_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"3619:40:11"}]}}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"2983:308:11","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:11","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"token","nameLocation":"3325:5:11","nodeType":"VariableDeclaration","scope":2006,"src":"3318:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":1962,"nodeType":"UserDefinedTypeName","pathNode":{"id":1961,"name":"IERC20","nameLocations":["3318:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"3318:6:11"},"referencedDeclaration":1592,"src":"3318:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"spender","nameLocation":"3340:7:11","nodeType":"VariableDeclaration","scope":2006,"src":"3332:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"value","nameLocation":"3357:5:11","nodeType":"VariableDeclaration","scope":2006,"src":"3349:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:11"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"3373:0:11"},"scope":2098,"src":"3296:380:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"4129:559:11","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:11","nodeType":"VariableDeclaration","scope":2047,"src":"4478:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2024,"initialValue":{"arguments":[{"id":2022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4532:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4512:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:11","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:11","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"4504:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2025,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4551:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:11","memberName":"length","nodeType":"MemberAccess","src":"4551:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:11","subExpression":{"arguments":[{"id":2031,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4589:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2032,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:11","typeDescriptions":{}}}],"id":2034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2029,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:11","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"4547:135:11","trueBody":{"id":2045,"nodeType":"Block","src":"4610:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2041,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"4664:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}],"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:11","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2038,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"4631:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"RevertStatement","src":"4624:47:11"}]}}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"3682:372:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:11","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"token","nameLocation":"4095:5:11","nodeType":"VariableDeclaration","scope":2048,"src":"4088:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"IERC20","nameLocations":["4088:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"4088:6:11"},"referencedDeclaration":1592,"src":"4088:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"data","nameLocation":"4115:4:11","nodeType":"VariableDeclaration","scope":2048,"src":"4102:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2011,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:11"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"4129:0:11"},"scope":2098,"src":"4059:629:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2096,"nodeType":"Block","src":"5278:489:11","statements":[{"assignments":[2060,2062],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"success","nameLocation":"5579:7:11","nodeType":"VariableDeclaration","scope":2096,"src":"5574:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:11","nodeType":"VariableDeclaration","scope":2096,"src":"5588:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2061,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2070,"initialValue":{"arguments":[{"id":2068,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5635:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2065,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5623:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}],"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:11","typeDescriptions":{}}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:11","memberName":"call","nodeType":"MemberAccess","src":"5615:19:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"5657:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2072,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"5669:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:11","memberName":"length","nodeType":"MemberAccess","src":"5669:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"5706:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:11","typeDescriptions":{}}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2076,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:11","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2088,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5738:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:11","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:11","memberName":"code","nodeType":"MemberAccess","src":"5730:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:11","memberName":"length","nodeType":"MemberAccess","src":"5730:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2058,"id":2095,"nodeType":"Return","src":"5650:110:11"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"4694:490:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:11","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"token","nameLocation":"5229:5:11","nodeType":"VariableDeclaration","scope":2097,"src":"5222:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"},"typeName":{"id":2051,"nodeType":"UserDefinedTypeName","pathNode":{"id":2050,"name":"IERC20","nameLocations":["5222:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"5222:6:11"},"referencedDeclaration":1592,"src":"5222:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1592","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"data","nameLocation":"5249:4:11","nodeType":"VariableDeclaration","scope":2097,"src":"5236:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:11"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2097,"src":"5272:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2056,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:11"},"scope":2098,"src":"5189:578:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2099,"src":"751:5018:11","usedErrors":[1825,1834],"usedEvents":[]}],"src":"115:5655:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2351]},"id":2352,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2100,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"127:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2351,"linearizedBaseContracts":[2351],"name":"Address","nameLocation":"203:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"217:94:12","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2106,"name":"AddressInsufficientBalance","nameLocation":"322:26:12","nodeType":"ErrorDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"account","nameLocation":"357:7:12","nodeType":"VariableDeclaration","scope":2106,"src":"349:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:12"},"src":"316:50:12"},{"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"372:75:12","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2111,"name":"AddressEmptyCode","nameLocation":"458:16:12","nodeType":"ErrorDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"target","nameLocation":"483:6:12","nodeType":"VariableDeclaration","scope":2111,"src":"475:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:12"},"src":"452:39:12"},{"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"497:89:12","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2114,"name":"FailedInnerCall","nameLocation":"597:15:12","nodeType":"ErrorDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"612:2:12"},"src":"591:24:12"},{"body":{"id":2154,"nodeType":"Block","src":"1602:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2124,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}],"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:12","typeDescriptions":{}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2127,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"1640:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"1612:109:12","trueBody":{"id":2136,"nodeType":"Block","src":"1648:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2132,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:12","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2129,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1669:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"RevertStatement","src":"1662:48:12"}]}},{"assignments":[2139,null],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"success","nameLocation":"1737:7:12","nodeType":"VariableDeclaration","scope":2154,"src":"1732:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2146,"initialValue":{"arguments":[{"hexValue":"","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2140,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"1750:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:12","memberName":"call","nodeType":"MemberAccess","src":"1750:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"1772:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:12"},{"condition":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:12","subExpression":{"id":2147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"1793:63:12","trueBody":{"id":2152,"nodeType":"Block","src":"1807:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"1828:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"1821:24:12"}]}}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"621:905:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:12","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:12","nodeType":"VariableDeclaration","scope":2155,"src":"1550:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"amount","nameLocation":"1585:6:12","nodeType":"VariableDeclaration","scope":2155,"src":"1577:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:12"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"1602:0:12"},"scope":2351,"src":"1531:331:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2794:62:12","statements":[{"expression":{"arguments":[{"id":2166,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2833:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2841:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2165,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2811:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2164,"id":2170,"nodeType":"Return","src":"2804:45:12"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"1868:832:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:12","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"target","nameLocation":"2735:6:12","nodeType":"VariableDeclaration","scope":2172,"src":"2727:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"data","nameLocation":"2756:4:12","nodeType":"VariableDeclaration","scope":2172,"src":"2743:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:12"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"2780:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:12"},"scope":2351,"src":"2705:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2217,"nodeType":"Block","src":"3293:279:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}],"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:12","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"3331:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"3303:108:12","trueBody":{"id":2198,"nodeType":"Block","src":"3338:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2194,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2351","typeString":"library Address"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:12","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2191,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3359:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"RevertStatement","src":"3352:48:12"}]}},{"assignments":[2201,2203],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"success","nameLocation":"3426:7:12","nodeType":"VariableDeclaration","scope":2217,"src":"3421:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:12","nodeType":"VariableDeclaration","scope":2217,"src":"3435:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[{"id":2208,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"3488:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2204,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3462:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:12","memberName":"call","nodeType":"MemberAccess","src":"3462:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"3481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:12"},{"expression":{"arguments":[{"id":2212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3537:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3545:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2214,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"3554:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2211,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3510:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2183,"id":2216,"nodeType":"Return","src":"3503:62:12"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2862:313:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2218,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:12","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"target","nameLocation":"3219:6:12","nodeType":"VariableDeclaration","scope":2218,"src":"3211:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"data","nameLocation":"3240:4:12","nodeType":"VariableDeclaration","scope":2218,"src":"3227:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2176,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"value","nameLocation":"3254:5:12","nodeType":"VariableDeclaration","scope":2218,"src":"3246:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:12"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2218,"src":"3279:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:12"},"scope":2351,"src":"3180:392:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"3811:154:12","statements":[{"assignments":[2229,2231],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"success","nameLocation":"3827:7:12","nodeType":"VariableDeclaration","scope":2243,"src":"3822:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:12","nodeType":"VariableDeclaration","scope":2243,"src":"3836:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2236,"initialValue":{"arguments":[{"id":2234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"3881:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2232,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3863:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:12"},{"expression":{"arguments":[{"id":2238,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3930:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3938:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2240,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3947:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2237,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3903:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2227,"id":2242,"nodeType":"Return","src":"3896:62:12"}]},"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"3578:128:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:12","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"target","nameLocation":"3747:6:12","nodeType":"VariableDeclaration","scope":2244,"src":"3739:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"data","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":2244,"src":"3755:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:12"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"3797:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2225,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:12"},"scope":2351,"src":"3711:254:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"4203:156:12","statements":[{"assignments":[2255,2257],"declarations":[{"constant":false,"id":2255,"mutability":"mutable","name":"success","nameLocation":"4219:7:12","nodeType":"VariableDeclaration","scope":2269,"src":"4214:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2254,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:12","nodeType":"VariableDeclaration","scope":2269,"src":"4228:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2256,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2262,"initialValue":{"arguments":[{"id":2260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"4275:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2258,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4255:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:12"},{"expression":{"arguments":[{"id":2264,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4324:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4332:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"4341:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2263,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4297:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2253,"id":2268,"nodeType":"Return","src":"4290:62:12"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"3971:130:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:12","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"target","nameLocation":"4144:6:12","nodeType":"VariableDeclaration","scope":2270,"src":"4136:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"data","nameLocation":"4165:4:12","nodeType":"VariableDeclaration","scope":2270,"src":"4152:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2248,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:12"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"4189:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2251,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:12"},"scope":2351,"src":"4106:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"4783:424:12","statements":[{"condition":{"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:12","subExpression":{"id":2282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"4798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2307,"nodeType":"Block","src":"4857:344:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2289,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5045:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:12","memberName":"length","nodeType":"MemberAccess","src":"5045:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"5071:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:12","memberName":"code","nodeType":"MemberAccess","src":"5071:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:12","memberName":"length","nodeType":"MemberAccess","src":"5071:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"IfStatement","src":"5041:119:12","trueBody":{"id":2303,"nodeType":"Block","src":"5096:64:12","statements":[{"errorCall":{"arguments":[{"id":2300,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"5138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2299,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"5121:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"RevertStatement","src":"5114:31:12"}]}},{"expression":{"id":2305,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5180:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2281,"id":2306,"nodeType":"Return","src":"5173:17:12"}]},"id":2308,"nodeType":"IfStatement","src":"4793:408:12","trueBody":{"id":2288,"nodeType":"Block","src":"4807:44:12","statements":[{"expression":{"arguments":[{"id":2285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"4829:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"4821:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"ExpressionStatement","src":"4821:19:12"}]}}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"4365:255:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:12","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"target","nameLocation":"4678:6:12","nodeType":"VariableDeclaration","scope":2310,"src":"4670:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"success","nameLocation":"4699:7:12","nodeType":"VariableDeclaration","scope":2310,"src":"4694:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:12","nodeType":"VariableDeclaration","scope":2310,"src":"4716:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:12"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"4769:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:12"},"scope":2351,"src":"4625:582:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"5509:122:12","statements":[{"condition":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:12","subExpression":{"id":2320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"5524:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2329,"nodeType":"Block","src":"5583:42:12","statements":[{"expression":{"id":2327,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5604:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2319,"id":2328,"nodeType":"Return","src":"5597:17:12"}]},"id":2330,"nodeType":"IfStatement","src":"5519:106:12","trueBody":{"id":2326,"nodeType":"Block","src":"5533:44:12","statements":[{"expression":{"arguments":[{"id":2323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5555:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2322,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5547:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"5547:19:12"}]}}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"5213:189:12","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:12","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"success","nameLocation":"5438:7:12","nodeType":"VariableDeclaration","scope":2332,"src":"5433:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2312,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:12","nodeType":"VariableDeclaration","scope":2332,"src":"5447:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:12"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"5495:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2317,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:12"},"scope":2351,"src":"5407:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"5798:461:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2338,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"5874:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:12","memberName":"length","nodeType":"MemberAccess","src":"5874:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2347,"nodeType":"Block","src":"6204:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2344,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"6225:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2346,"nodeType":"RevertStatement","src":"6218:24:12"}]},"id":2348,"nodeType":"IfStatement","src":"5870:383:12","trueBody":{"id":2343,"nodeType":"Block","src":"5897:301:12","statements":[{"AST":{"nativeSrc":"6055:133:12","nodeType":"YulBlock","src":"6055:133:12","statements":[{"nativeSrc":"6073:40:12","nodeType":"YulVariableDeclaration","src":"6073:40:12","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:12","nodeType":"YulIdentifier","src":"6102:10:12"}],"functionName":{"name":"mload","nativeSrc":"6096:5:12","nodeType":"YulIdentifier","src":"6096:5:12"},"nativeSrc":"6096:17:12","nodeType":"YulFunctionCall","src":"6096:17:12"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:12","nodeType":"YulTypedName","src":"6077:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:12","nodeType":"YulLiteral","src":"6141:2:12","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:12","nodeType":"YulIdentifier","src":"6145:10:12"}],"functionName":{"name":"add","nativeSrc":"6137:3:12","nodeType":"YulIdentifier","src":"6137:3:12"},"nativeSrc":"6137:19:12","nodeType":"YulFunctionCall","src":"6137:19:12"},{"name":"returndata_size","nativeSrc":"6158:15:12","nodeType":"YulIdentifier","src":"6158:15:12"}],"functionName":{"name":"revert","nativeSrc":"6130:6:12","nodeType":"YulIdentifier","src":"6130:6:12"},"nativeSrc":"6130:44:12","nodeType":"YulFunctionCall","src":"6130:44:12"},"nativeSrc":"6130:44:12","nodeType":"YulExpressionStatement","src":"6130:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2335,"isOffset":false,"isSlot":false,"src":"6102:10:12","valueSize":1},{"declaration":2335,"isOffset":false,"isSlot":false,"src":"6145:10:12","valueSize":1}],"id":2342,"nodeType":"InlineAssembly","src":"6046:142:12"}]}}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"5637:101:12","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:12","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:12","nodeType":"VariableDeclaration","scope":2350,"src":"5760:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2334,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:12"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"5798:0:12"},"scope":2351,"src":"5743:516:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2352,"src":"195:6066:12","usedErrors":[2106,2111,2114],"usedEvents":[]}],"src":"101:6161:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2381]},"id":2382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2353,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2381,"linearizedBaseContracts":[2381],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2362,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":2359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2358,"id":2361,"nodeType":"Return","src":"728:17:13"}]},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2356,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":2381,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":2368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2367,"id":2370,"nodeType":"Return","src":"835:15:13"}]},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2365,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":2381,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2376,"id":2378,"nodeType":"Return","src":"945:8:13"}]},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":2381,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2382,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2449]},"id":2450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2383,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"125:83:14","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2449,"linearizedBaseContracts":[2449],"name":"Nonces","nameLocation":"227:6:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"240:90:14","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2391,"name":"InvalidAccountNonce","nameLocation":"341:19:14","nodeType":"ErrorDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"account","nameLocation":"369:7:14","nodeType":"VariableDeclaration","scope":2391,"src":"361:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:14","nodeType":"VariableDeclaration","scope":2391,"src":"378:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:14"},"src":"335:65:14"},{"constant":false,"id":2395,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:14","nodeType":"VariableDeclaration","scope":2449,"src":"406:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2394,"keyName":"account","keyNameLocation":"422:7:14","keyType":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2407,"nodeType":"Block","src":"607:38:14","statements":[{"expression":{"baseExpression":{"id":2403,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"624:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2405,"indexExpression":{"id":2404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"632:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2402,"id":2406,"nodeType":"Return","src":"617:21:14"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"464:69:14","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:14","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"owner","nameLocation":"562:5:14","nodeType":"VariableDeclaration","scope":2408,"src":"554:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:14"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"598:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:14"},"scope":2449,"src":"538:107:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2422,"nodeType":"Block","src":"828:326:14","statements":[{"id":2421,"nodeType":"UncheckedBlock","src":"1031:117:14","statements":[{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:14","subExpression":{"baseExpression":{"id":2416,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1121:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2418,"indexExpression":{"id":2417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"1129:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2415,"id":2420,"nodeType":"Return","src":"1114:23:14"}]}]},"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"651:103:14","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:14","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"owner","nameLocation":"786:5:14","nodeType":"VariableDeclaration","scope":2423,"src":"778:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:14"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"819:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:14"},"scope":2449,"src":"759:395:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2447,"nodeType":"Block","src":"1338:149:14","statements":[{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"current","nameLocation":"1356:7:14","nodeType":"VariableDeclaration","scope":2447,"src":"1348:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2436,"initialValue":{"arguments":[{"id":2434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"1376:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2433,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1366:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"1396:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2438,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"IfStatement","src":"1392:89:14","trueBody":{"id":2445,"nodeType":"Block","src":"1414:67:14","statements":[{"errorCall":{"arguments":[{"id":2441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2442,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2440,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"1435:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2444,"nodeType":"RevertStatement","src":"1428:42:14"}]}}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"1160:100:14","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:14","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"owner","nameLocation":"1299:5:14","nodeType":"VariableDeclaration","scope":2448,"src":"1291:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:14","nodeType":"VariableDeclaration","scope":2448,"src":"1306:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:14"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"1338:0:14"},"scope":2449,"src":"1265:222:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2450,"src":"209:1280:14","usedErrors":[2391],"usedEvents":[]}],"src":"99:1391:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2455],"ShortStrings":[2666],"StorageSlot":[2776]},"id":2667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2451,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2667,"sourceUnit":2777,"src":"132:46:15","symbolAliases":[{"foreign":{"id":2452,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"140:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2455,"name":"ShortString","nameLocation":"353:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:15","underlyingType":{"id":2454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"378:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2666,"linearizedBaseContracts":[2666],"name":"ShortStrings","nameLocation":"1263:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2459,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:15","nodeType":"VariableDeclaration","scope":2666,"src":"1345:111:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2463,"name":"StringTooLong","nameLocation":"1469:13:15","nodeType":"ErrorDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"str","nameLocation":"1490:3:15","nodeType":"VariableDeclaration","scope":2463,"src":"1483:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:15"},"src":"1463:32:15"},{"errorSelector":"b3512b0c","id":2465,"name":"InvalidShortString","nameLocation":"1506:18:15","nodeType":"ErrorDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[],"src":"1524:2:15"},"src":"1500:27:15"},{"body":{"id":2508,"nodeType":"Block","src":"1786:208:15","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:15","nodeType":"VariableDeclaration","scope":2508,"src":"1796:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2474,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2480,"initialValue":{"arguments":[{"id":2478,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1822:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:15","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2481,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"1840:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:15","memberName":"length","nodeType":"MemberAccess","src":"1840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"IfStatement","src":"1836:72:15","trueBody":{"id":2489,"nodeType":"Block","src":"1858:50:15","statements":[{"errorCall":{"arguments":[{"id":2486,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1893:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2485,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1879:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2488,"nodeType":"RevertStatement","src":"1872:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2499,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"1965:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:15","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2502,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"1974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:15","memberName":"length","nodeType":"MemberAccess","src":"1974:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:15","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2491,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1924:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"type(ShortString)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"functionReturnParameters":2473,"id":2507,"nodeType":"Return","src":"1917:70:15"}]},"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"1533:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:15","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"str","nameLocation":"1745:3:15","nodeType":"VariableDeclaration","scope":2509,"src":"1731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:15"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"1773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2471,"nodeType":"UserDefinedTypeName","pathNode":{"id":2470,"name":"ShortString","nameLocations":["1773:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1773:11:15"},"referencedDeclaration":2455,"src":"1773:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:15"},"scope":2666,"src":"1708:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"2152:331:15","statements":[{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"len","nameLocation":"2170:3:15","nodeType":"VariableDeclaration","scope":2534,"src":"2162:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2523,"initialValue":{"arguments":[{"id":2521,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"2187:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"id":2520,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:15"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"str","nameLocation":"2294:3:15","nodeType":"VariableDeclaration","scope":2534,"src":"2280:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"hexValue":"3332","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:15"},{"AST":{"nativeSrc":"2376:81:15","nodeType":"YulBlock","src":"2376:81:15","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:15","nodeType":"YulIdentifier","src":"2397:3:15"},{"name":"len","nativeSrc":"2402:3:15","nodeType":"YulIdentifier","src":"2402:3:15"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:15","nodeType":"YulIdentifier","src":"2390:6:15"},"nativeSrc":"2390:16:15","nodeType":"YulFunctionCall","src":"2390:16:15"},"nativeSrc":"2390:16:15","nodeType":"YulExpressionStatement","src":"2390:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:15","nodeType":"YulIdentifier","src":"2430:3:15"},{"kind":"number","nativeSrc":"2435:4:15","nodeType":"YulLiteral","src":"2435:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:15","nodeType":"YulIdentifier","src":"2426:3:15"},"nativeSrc":"2426:14:15","nodeType":"YulFunctionCall","src":"2426:14:15"},{"name":"sstr","nativeSrc":"2442:4:15","nodeType":"YulIdentifier","src":"2442:4:15"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:15","nodeType":"YulIdentifier","src":"2419:6:15"},"nativeSrc":"2419:28:15","nodeType":"YulFunctionCall","src":"2419:28:15"},"nativeSrc":"2419:28:15","nodeType":"YulExpressionStatement","src":"2419:28:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2519,"isOffset":false,"isSlot":false,"src":"2402:3:15","valueSize":1},{"declaration":2513,"isOffset":false,"isSlot":false,"src":"2442:4:15","valueSize":1},{"declaration":2525,"isOffset":false,"isSlot":false,"src":"2397:3:15","valueSize":1},{"declaration":2525,"isOffset":false,"isSlot":false,"src":"2430:3:15","valueSize":1}],"id":2531,"nodeType":"InlineAssembly","src":"2367:90:15"},{"expression":{"id":2532,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2473:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2517,"id":2533,"nodeType":"Return","src":"2466:10:15"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"2000:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:15","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:15","nodeType":"VariableDeclaration","scope":2535,"src":"2096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2512,"nodeType":"UserDefinedTypeName","pathNode":{"id":2511,"name":"ShortString","nameLocations":["2096:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"2096:11:15"},"referencedDeclaration":2455,"src":"2096:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:15"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"2137:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2515,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:15"},"scope":2666,"src":"2078:405:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"2625:175:15","statements":[{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"result","nameLocation":"2643:6:15","nodeType":"VariableDeclaration","scope":2566,"src":"2635:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2550,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2679:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"expression":{"id":2548,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"2660:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"type(ShortString)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:15","typeDescriptions":{}}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2706:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"IfStatement","src":"2702:69:15","trueBody":{"id":2562,"nodeType":"Block","src":"2719:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2559,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2740:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"RevertStatement","src":"2733:27:15"}]}},{"expression":{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2787:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2543,"id":2565,"nodeType":"Return","src":"2780:13:15"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"2489:61:15","text":" @dev Return the length of a `ShortString`."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:15","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:15","nodeType":"VariableDeclaration","scope":2567,"src":"2575:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2538,"nodeType":"UserDefinedTypeName","pathNode":{"id":2537,"name":"ShortString","nameLocations":["2575:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"2575:11:15"},"referencedDeclaration":2455,"src":"2575:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:15"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"2616:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:15"},"scope":2666,"src":"2555:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2606,"nodeType":"Block","src":"3023:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3043:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2578,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:15","typeDescriptions":{}}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:15","memberName":"length","nodeType":"MemberAccess","src":"3037:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2604,"nodeType":"Block","src":"3121:127:15","statements":[{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2593,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3161:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2590,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"3135:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2776_$","typeString":"type(library StorageSlot)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2753,"src":"3135:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2684_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2684_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"3135:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3176:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2598,"nodeType":"ExpressionStatement","src":"3135:46:15"},{"expression":{"arguments":[{"id":2601,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"3219:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2599,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3202:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"type(ShortString)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"functionReturnParameters":2577,"id":2603,"nodeType":"Return","src":"3195:42:15"}]},"id":2605,"nodeType":"IfStatement","src":"3033:215:15","trueBody":{"id":2589,"nodeType":"Block","src":"3063:52:15","statements":[{"expression":{"arguments":[{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3098:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2585,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3084:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"functionReturnParameters":2577,"id":2588,"nodeType":"Return","src":"3077:27:15"}]}}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"2806:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2607,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:15","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"2963:5:15","nodeType":"VariableDeclaration","scope":2607,"src":"2949:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2569,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"store","nameLocation":"2985:5:15","nodeType":"VariableDeclaration","scope":2607,"src":"2970:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:15"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2607,"src":"3010:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2575,"nodeType":"UserDefinedTypeName","pathNode":{"id":2574,"name":"ShortString","nameLocations":["3010:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"3010:11:15"},"referencedDeclaration":2455,"src":"3010:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:15"},"scope":2666,"src":"2914:340:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"3494:158:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"3527:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"expression":{"id":2618,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3508:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"type(ShortString)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2622,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"3537:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2631,"nodeType":"Block","src":"3609:37:15","statements":[{"expression":{"id":2629,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3630:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2617,"id":2630,"nodeType":"Return","src":"3623:12:15"}]},"id":2632,"nodeType":"IfStatement","src":"3504:142:15","trueBody":{"id":2628,"nodeType":"Block","src":"3556:47:15","statements":[{"expression":{"arguments":[{"id":2625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"3586:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"id":2624,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"3577:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2617,"id":2627,"nodeType":"Return","src":"3570:22:15"}]}}]},"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"3260:120:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:15","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"value","nameLocation":"3427:5:15","nodeType":"VariableDeclaration","scope":2634,"src":"3415:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2610,"nodeType":"UserDefinedTypeName","pathNode":{"id":2609,"name":"ShortString","nameLocations":["3415:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"3415:11:15"},"referencedDeclaration":2455,"src":"3415:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"store","nameLocation":"3449:5:15","nodeType":"VariableDeclaration","scope":2634,"src":"3434:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2612,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:15"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"3479:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2615,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:15"},"scope":2666,"src":"3385:267:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"4132:174:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"4165:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"expression":{"id":2645,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4146:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"type(ShortString)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2649,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"4175:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2662,"nodeType":"Block","src":"4249:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":2658,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4276:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:15","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:15","memberName":"length","nodeType":"MemberAccess","src":"4270:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2644,"id":2661,"nodeType":"Return","src":"4263:26:15"}]},"id":2663,"nodeType":"IfStatement","src":"4142:158:15","trueBody":{"id":2655,"nodeType":"Block","src":"4194:49:15","statements":[{"expression":{"arguments":[{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"4226:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}],"id":2651,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4215:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2455_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2644,"id":2654,"nodeType":"Return","src":"4208:24:15"}]}}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"3658:364:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:15","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"value","nameLocation":"4071:5:15","nodeType":"VariableDeclaration","scope":2665,"src":"4059:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":2637,"nodeType":"UserDefinedTypeName","pathNode":{"id":2636,"name":"ShortString","nameLocations":["4059:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"4059:11:15"},"referencedDeclaration":2455,"src":"4059:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"store","nameLocation":"4093:5:15","nodeType":"VariableDeclaration","scope":2665,"src":"4078:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2639,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:15"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"4123:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:15"},"scope":2666,"src":"4027:279:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2667,"src":"1255:3053:15","usedErrors":[2463,2465],"usedEvents":[]}],"src":"106:4203:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2776]},"id":2777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2668,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"219:1025:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2776,"linearizedBaseContracts":[2776],"name":"StorageSlot","nameLocation":"1253:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2672,"members":[{"constant":false,"id":2671,"mutability":"mutable","name":"value","nameLocation":"1308:5:16","nodeType":"VariableDeclaration","scope":2672,"src":"1300:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:16","nodeType":"StructDefinition","scope":2776,"src":"1271:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2675,"members":[{"constant":false,"id":2674,"mutability":"mutable","name":"value","nameLocation":"1360:5:16","nodeType":"VariableDeclaration","scope":2675,"src":"1355:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2673,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:16","nodeType":"StructDefinition","scope":2776,"src":"1326:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2678,"members":[{"constant":false,"id":2677,"mutability":"mutable","name":"value","nameLocation":"1415:5:16","nodeType":"VariableDeclaration","scope":2678,"src":"1407:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:16","nodeType":"StructDefinition","scope":2776,"src":"1378:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2681,"members":[{"constant":false,"id":2680,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":2681,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":2776,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2684,"members":[{"constant":false,"id":2683,"mutability":"mutable","name":"value","nameLocation":"1523:5:16","nodeType":"VariableDeclaration","scope":2684,"src":"1516:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2682,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:16","nodeType":"StructDefinition","scope":2776,"src":"1488:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2687,"members":[{"constant":false,"id":2686,"mutability":"mutable","name":"value","nameLocation":"1574:5:16","nodeType":"VariableDeclaration","scope":2687,"src":"1568:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2685,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:16","nodeType":"StructDefinition","scope":2776,"src":"1541:45:16","visibility":"public"},{"body":{"id":2697,"nodeType":"Block","src":"1768:106:16","statements":[{"AST":{"nativeSrc":"1830:38:16","nodeType":"YulBlock","src":"1830:38:16","statements":[{"nativeSrc":"1844:14:16","nodeType":"YulAssignment","src":"1844:14:16","value":{"name":"slot","nativeSrc":"1854:4:16","nodeType":"YulIdentifier","src":"1854:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:16","nodeType":"YulIdentifier","src":"1844:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2694,"isOffset":false,"isSlot":true,"src":"1844:6:16","suffix":"slot","valueSize":1},{"declaration":2690,"isOffset":false,"isSlot":false,"src":"1854:4:16","valueSize":1}],"id":2696,"nodeType":"InlineAssembly","src":"1821:47:16"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"1592:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:16","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"slot","nameLocation":"1716:4:16","nodeType":"VariableDeclaration","scope":2698,"src":"1708:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:16"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"r","nameLocation":"1765:1:16","nodeType":"VariableDeclaration","scope":2698,"src":"1745:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2672_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2693,"nodeType":"UserDefinedTypeName","pathNode":{"id":2692,"name":"AddressSlot","nameLocations":["1745:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2672,"src":"1745:11:16"},"referencedDeclaration":2672,"src":"1745:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2672_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:16"},"scope":2776,"src":"1684:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"2056:106:16","statements":[{"AST":{"nativeSrc":"2118:38:16","nodeType":"YulBlock","src":"2118:38:16","statements":[{"nativeSrc":"2132:14:16","nodeType":"YulAssignment","src":"2132:14:16","value":{"name":"slot","nativeSrc":"2142:4:16","nodeType":"YulIdentifier","src":"2142:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:16","nodeType":"YulIdentifier","src":"2132:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2705,"isOffset":false,"isSlot":true,"src":"2132:6:16","suffix":"slot","valueSize":1},{"declaration":2701,"isOffset":false,"isSlot":false,"src":"2142:4:16","valueSize":1}],"id":2707,"nodeType":"InlineAssembly","src":"2109:47:16"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"1880:87:16","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:16","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"slot","nameLocation":"2004:4:16","nodeType":"VariableDeclaration","scope":2709,"src":"1996:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:16"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"r","nameLocation":"2053:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"2033:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2675_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2704,"nodeType":"UserDefinedTypeName","pathNode":{"id":2703,"name":"BooleanSlot","nameLocations":["2033:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2675,"src":"2033:11:16"},"referencedDeclaration":2675,"src":"2033:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2675_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:16"},"scope":2776,"src":"1972:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"2344:106:16","statements":[{"AST":{"nativeSrc":"2406:38:16","nodeType":"YulBlock","src":"2406:38:16","statements":[{"nativeSrc":"2420:14:16","nodeType":"YulAssignment","src":"2420:14:16","value":{"name":"slot","nativeSrc":"2430:4:16","nodeType":"YulIdentifier","src":"2430:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:16","nodeType":"YulIdentifier","src":"2420:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":true,"src":"2420:6:16","suffix":"slot","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"2430:4:16","valueSize":1}],"id":2718,"nodeType":"InlineAssembly","src":"2397:47:16"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"2168:87:16","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:16","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"slot","nameLocation":"2292:4:16","nodeType":"VariableDeclaration","scope":2720,"src":"2284:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:16"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"r","nameLocation":"2341:1:16","nodeType":"VariableDeclaration","scope":2720,"src":"2321:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2678_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2715,"nodeType":"UserDefinedTypeName","pathNode":{"id":2714,"name":"Bytes32Slot","nameLocations":["2321:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"2321:11:16"},"referencedDeclaration":2678,"src":"2321:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2678_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:16"},"scope":2776,"src":"2260:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"2632:106:16","statements":[{"AST":{"nativeSrc":"2694:38:16","nodeType":"YulBlock","src":"2694:38:16","statements":[{"nativeSrc":"2708:14:16","nodeType":"YulAssignment","src":"2708:14:16","value":{"name":"slot","nativeSrc":"2718:4:16","nodeType":"YulIdentifier","src":"2718:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:16","nodeType":"YulIdentifier","src":"2708:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2727,"isOffset":false,"isSlot":true,"src":"2708:6:16","suffix":"slot","valueSize":1},{"declaration":2723,"isOffset":false,"isSlot":false,"src":"2718:4:16","valueSize":1}],"id":2729,"nodeType":"InlineAssembly","src":"2685:47:16"}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"2456:87:16","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:16","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"slot","nameLocation":"2580:4:16","nodeType":"VariableDeclaration","scope":2731,"src":"2572:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:16"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"r","nameLocation":"2629:1:16","nodeType":"VariableDeclaration","scope":2731,"src":"2609:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2681_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Uint256Slot","nameLocations":["2609:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2681,"src":"2609:11:16"},"referencedDeclaration":2681,"src":"2609:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2681_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:16"},"scope":2776,"src":"2548:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"2917:106:16","statements":[{"AST":{"nativeSrc":"2979:38:16","nodeType":"YulBlock","src":"2979:38:16","statements":[{"nativeSrc":"2993:14:16","nodeType":"YulAssignment","src":"2993:14:16","value":{"name":"slot","nativeSrc":"3003:4:16","nodeType":"YulIdentifier","src":"3003:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:16","nodeType":"YulIdentifier","src":"2993:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2738,"isOffset":false,"isSlot":true,"src":"2993:6:16","suffix":"slot","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"3003:4:16","valueSize":1}],"id":2740,"nodeType":"InlineAssembly","src":"2970:47:16"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"2744:86:16","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:16","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"slot","nameLocation":"2866:4:16","nodeType":"VariableDeclaration","scope":2742,"src":"2858:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:16"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"r","nameLocation":"2914:1:16","nodeType":"VariableDeclaration","scope":2742,"src":"2895:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2684_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2737,"nodeType":"UserDefinedTypeName","pathNode":{"id":2736,"name":"StringSlot","nameLocations":["2895:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"2895:10:16"},"referencedDeclaration":2684,"src":"2895:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2684_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:16"},"scope":2776,"src":"2835:188:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"3225:112:16","statements":[{"AST":{"nativeSrc":"3287:44:16","nodeType":"YulBlock","src":"3287:44:16","statements":[{"nativeSrc":"3301:20:16","nodeType":"YulAssignment","src":"3301:20:16","value":{"name":"store.slot","nativeSrc":"3311:10:16","nodeType":"YulIdentifier","src":"3311:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:16","nodeType":"YulIdentifier","src":"3301:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2749,"isOffset":false,"isSlot":true,"src":"3301:6:16","suffix":"slot","valueSize":1},{"declaration":2745,"isOffset":false,"isSlot":true,"src":"3311:10:16","suffix":"slot","valueSize":1}],"id":2751,"nodeType":"InlineAssembly","src":"3278:53:16"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"3029:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:16","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"store","nameLocation":"3173:5:16","nodeType":"VariableDeclaration","scope":2753,"src":"3158:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2744,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:16"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"r","nameLocation":"3222:1:16","nodeType":"VariableDeclaration","scope":2753,"src":"3203:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2684_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2748,"nodeType":"UserDefinedTypeName","pathNode":{"id":2747,"name":"StringSlot","nameLocations":["3203:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"3203:10:16"},"referencedDeclaration":2684,"src":"3203:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2684_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:16"},"scope":2776,"src":"3135:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"3513:106:16","statements":[{"AST":{"nativeSrc":"3575:38:16","nodeType":"YulBlock","src":"3575:38:16","statements":[{"nativeSrc":"3589:14:16","nodeType":"YulAssignment","src":"3589:14:16","value":{"name":"slot","nativeSrc":"3599:4:16","nodeType":"YulIdentifier","src":"3599:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:16","nodeType":"YulIdentifier","src":"3589:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2760,"isOffset":false,"isSlot":true,"src":"3589:6:16","suffix":"slot","valueSize":1},{"declaration":2756,"isOffset":false,"isSlot":false,"src":"3599:4:16","valueSize":1}],"id":2762,"nodeType":"InlineAssembly","src":"3566:47:16"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"3343:85:16","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:16","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"slot","nameLocation":"3463:4:16","nodeType":"VariableDeclaration","scope":2764,"src":"3455:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:16"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"r","nameLocation":"3510:1:16","nodeType":"VariableDeclaration","scope":2764,"src":"3492:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2687_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2759,"nodeType":"UserDefinedTypeName","pathNode":{"id":2758,"name":"BytesSlot","nameLocations":["3492:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"3492:9:16"},"referencedDeclaration":2687,"src":"3492:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2687_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:16"},"scope":2776,"src":"3433:186:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"3816:112:16","statements":[{"AST":{"nativeSrc":"3878:44:16","nodeType":"YulBlock","src":"3878:44:16","statements":[{"nativeSrc":"3892:20:16","nodeType":"YulAssignment","src":"3892:20:16","value":{"name":"store.slot","nativeSrc":"3902:10:16","nodeType":"YulIdentifier","src":"3902:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:16","nodeType":"YulIdentifier","src":"3892:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2771,"isOffset":false,"isSlot":true,"src":"3892:6:16","suffix":"slot","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":true,"src":"3902:10:16","suffix":"slot","valueSize":1}],"id":2773,"nodeType":"InlineAssembly","src":"3869:53:16"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"3625:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:16","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"store","nameLocation":"3765:5:16","nodeType":"VariableDeclaration","scope":2775,"src":"3751:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2766,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:16"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"r","nameLocation":"3813:1:16","nodeType":"VariableDeclaration","scope":2775,"src":"3795:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2687_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"BytesSlot","nameLocations":["3795:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"3795:9:16"},"referencedDeclaration":2687,"src":"3795:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2687_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:16"},"scope":2776,"src":"3729:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2777,"src":"1245:2685:16","usedErrors":[],"usedEvents":[]}],"src":"193:3738:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4770],"SignedMath":[6630],"Strings":[3031]},"id":3032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2778,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3032,"sourceUnit":4771,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2779,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3032,"sourceUnit":6631,"src":"165:49:17","symbolAliases":[{"foreign":{"id":2781,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"173:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"216:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3031,"linearizedBaseContracts":[3031],"name":"Strings","nameLocation":"259:7:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2786,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:17","nodeType":"VariableDeclaration","scope":3031,"src":"273:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2784,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2789,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:17","nodeType":"VariableDeclaration","scope":3031,"src":"335:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2787,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"384:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2796,"name":"StringsInsufficientHexLength","nameLocation":"476:28:17","nodeType":"ErrorDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"value","nameLocation":"513:5:17","nodeType":"VariableDeclaration","scope":2796,"src":"505:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"length","nameLocation":"528:6:17","nodeType":"VariableDeclaration","scope":2796,"src":"520:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:17"},"src":"470:66:17"},{"body":{"id":2843,"nodeType":"Block","src":"708:627:17","statements":[{"id":2842,"nodeType":"UncheckedBlock","src":"718:611:17","statements":[{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"length","nameLocation":"750:6:17","nodeType":"VariableDeclaration","scope":2842,"src":"742:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2806,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"759:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4770_$","typeString":"type(library Math)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"759:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:17"},{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"buffer","nameLocation":"808:6:17","nodeType":"VariableDeclaration","scope":2842,"src":"794:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2813,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2819,"initialValue":{"arguments":[{"id":2817,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"828:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2815,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:17"},{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"ptr","nameLocation":"857:3:17","nodeType":"VariableDeclaration","scope":2842,"src":"849:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"nodeType":"VariableDeclarationStatement","src":"849:11:17"},{"AST":{"nativeSrc":"930:67:17","nodeType":"YulBlock","src":"930:67:17","statements":[{"nativeSrc":"948:35:17","nodeType":"YulAssignment","src":"948:35:17","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:17","nodeType":"YulIdentifier","src":"959:6:17"},{"arguments":[{"kind":"number","nativeSrc":"971:2:17","nodeType":"YulLiteral","src":"971:2:17","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:17","nodeType":"YulIdentifier","src":"975:6:17"}],"functionName":{"name":"add","nativeSrc":"967:3:17","nodeType":"YulIdentifier","src":"967:3:17"},"nativeSrc":"967:15:17","nodeType":"YulFunctionCall","src":"967:15:17"}],"functionName":{"name":"add","nativeSrc":"955:3:17","nodeType":"YulIdentifier","src":"955:3:17"},"nativeSrc":"955:28:17","nodeType":"YulFunctionCall","src":"955:28:17"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:17","nodeType":"YulIdentifier","src":"948:3:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2814,"isOffset":false,"isSlot":false,"src":"959:6:17","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"975:6:17","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"948:3:17","valueSize":1}],"id":2823,"nodeType":"InlineAssembly","src":"921:76:17"},{"body":{"id":2838,"nodeType":"Block","src":"1023:269:17","statements":[{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:17","subExpression":{"id":2825,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1041:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2827,"nodeType":"ExpressionStatement","src":"1041:5:17"},{"AST":{"nativeSrc":"1124:86:17","nodeType":"YulBlock","src":"1124:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:17","nodeType":"YulIdentifier","src":"1154:3:17"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:17","nodeType":"YulIdentifier","src":"1168:5:17"},{"kind":"number","nativeSrc":"1175:2:17","nodeType":"YulLiteral","src":"1175:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:17","nodeType":"YulIdentifier","src":"1164:3:17"},"nativeSrc":"1164:14:17","nodeType":"YulFunctionCall","src":"1164:14:17"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:17","nodeType":"YulIdentifier","src":"1180:10:17"}],"functionName":{"name":"byte","nativeSrc":"1159:4:17","nodeType":"YulIdentifier","src":"1159:4:17"},"nativeSrc":"1159:32:17","nodeType":"YulFunctionCall","src":"1159:32:17"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:17","nodeType":"YulIdentifier","src":"1146:7:17"},"nativeSrc":"1146:46:17","nodeType":"YulFunctionCall","src":"1146:46:17"},"nativeSrc":"1146:46:17","nodeType":"YulExpressionStatement","src":"1146:46:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2786,"isOffset":false,"isSlot":false,"src":"1180:10:17","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"1154:3:17","valueSize":1},{"declaration":2799,"isOffset":false,"isSlot":false,"src":"1168:5:17","valueSize":1}],"id":2828,"nodeType":"InlineAssembly","src":"1115:95:17"},{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"1227:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ExpressionStatement","src":"1227:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"1260:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"1256:21:17","trueBody":{"id":2836,"nodeType":"Break","src":"1272:5:17"}}]},"condition":{"hexValue":"74727565","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2839,"nodeType":"WhileStatement","src":"1010:282:17"},{"expression":{"id":2840,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1312:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2803,"id":2841,"nodeType":"Return","src":"1305:13:17"}]}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"542:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:17","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"value","nameLocation":"663:5:17","nodeType":"VariableDeclaration","scope":2844,"src":"655:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:17"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"693:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2801,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:17"},"scope":3031,"src":"637:698:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"1511:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"1542:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:17","trueExpression":{"hexValue":"2d","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"1588:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2862,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"1573:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6630_$","typeString":"type(library SignedMath)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"1573:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1564:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2852,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:17","typeDescriptions":{}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:17","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2851,"id":2868,"nodeType":"Return","src":"1521:75:17"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"1341:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:17","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"value","nameLocation":"1466:5:17","nodeType":"VariableDeclaration","scope":2870,"src":"1459:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2846,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:17"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"1496:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2849,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:17"},"scope":3031,"src":"1435:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"1782:100:17","statements":[{"id":2888,"nodeType":"UncheckedBlock","src":"1792:84:17","statements":[{"expression":{"arguments":[{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1854:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2880,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"1842:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4770_$","typeString":"type(library Math)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"1842:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2890,2973,2993],"referencedDeclaration":2973,"src":"1823:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2877,"id":2887,"nodeType":"Return","src":"1816:49:17"}]}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"1609:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:17","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"value","nameLocation":"1737:5:17","nodeType":"VariableDeclaration","scope":2890,"src":"1729:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:17"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"1767:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2875,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:17"},"scope":3031,"src":"1708:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2972,"nodeType":"Block","src":"2095:435:17","statements":[{"assignments":[2901],"declarations":[{"constant":false,"id":2901,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:17","nodeType":"VariableDeclaration","scope":2972,"src":"2105:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2126:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:17"},{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:17","nodeType":"VariableDeclaration","scope":2972,"src":"2141:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2904,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2914,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2909,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2177:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2906,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:17"},{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2915,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2198:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2917,"indexExpression":{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2920,"nodeType":"ExpressionStatement","src":"2198:15:17"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2921,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2223:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2923,"indexExpression":{"hexValue":"31","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2926,"nodeType":"ExpressionStatement","src":"2223:15:17"},{"body":{"id":2955,"nodeType":"Block","src":"2293:95:17","statements":[{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2307:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2943,"indexExpression":{"id":2942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2314:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2944,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2319:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2948,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2330:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2950,"nodeType":"ExpressionStatement","src":"2307:40:17"},{"expression":{"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2951,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2361:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2954,"nodeType":"ExpressionStatement","src":"2361:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2281:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"initializationExpression":{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"i","nameLocation":"2261:1:17","nodeType":"VariableDeclaration","scope":2956,"src":"2253:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2934,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2930,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2269:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:17","subExpression":{"id":2938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2290:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"2288:3:17"},"nodeType":"ForStatement","src":"2248:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2401:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2966,"nodeType":"IfStatement","src":"2397:96:17","trueBody":{"id":2965,"nodeType":"Block","src":"2418:75:17","statements":[{"errorCall":{"arguments":[{"id":2961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2468:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2962,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2475:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2960,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2439:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2964,"nodeType":"RevertStatement","src":"2432:50:17"}]}},{"expression":{"arguments":[{"id":2969,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2516:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2967,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:17","typeDescriptions":{}}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2899,"id":2971,"nodeType":"Return","src":"2502:21:17"}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"1888:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:17","nodeType":"FunctionDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"value","nameLocation":"2034:5:17","nodeType":"VariableDeclaration","scope":2973,"src":"2026:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"length","nameLocation":"2049:6:17","nodeType":"VariableDeclaration","scope":2973,"src":"2041:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:17"},"returnParameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"2080:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2897,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:17"},"scope":3031,"src":"2005:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"2762:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2986,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2807:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2984,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:17","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:17","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2989,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"2815:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2981,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2890,2973,2993],"referencedDeclaration":2973,"src":"2779:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2980,"id":2991,"nodeType":"Return","src":"2772:58:17"}]},"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"2536:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:17","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"addr","nameLocation":"2718:4:17","nodeType":"VariableDeclaration","scope":2993,"src":"2710:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:17"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"2747:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2978,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:17"},"scope":3031,"src":"2689:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"2992:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3015:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:17","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:17","memberName":"length","nodeType":"MemberAccess","src":"3009:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3034:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3008,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:17","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:17","memberName":"length","nodeType":"MemberAccess","src":"3028:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3063:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3015,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:17","typeDescriptions":{}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3014,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3086:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:17","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3020,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3002,"id":3028,"nodeType":"Return","src":"3002:87:17"}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"2843:66:17","text":" @dev Returns true if the two strings are equal."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:17","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"a","nameLocation":"2943:1:17","nodeType":"VariableDeclaration","scope":3030,"src":"2929:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"b","nameLocation":"2960:1:17","nodeType":"VariableDeclaration","scope":3030,"src":"2946:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2997,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:17"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"2986:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:17"},"scope":3031,"src":"2914:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3032,"src":"251:2847:17","usedErrors":[2796],"usedEvents":[]}],"src":"101:2998:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3379]},"id":3380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3033,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"138:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3379,"linearizedBaseContracts":[3379],"name":"ECDSA","nameLocation":"352:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3039,"members":[{"id":3035,"name":"NoError","nameLocation":"392:7:18","nodeType":"EnumValue","src":"392:7:18"},{"id":3036,"name":"InvalidSignature","nameLocation":"409:16:18","nodeType":"EnumValue","src":"409:16:18"},{"id":3037,"name":"InvalidSignatureLength","nameLocation":"435:22:18","nodeType":"EnumValue","src":"435:22:18"},{"id":3038,"name":"InvalidSignatureS","nameLocation":"467:17:18","nodeType":"EnumValue","src":"467:17:18"}],"name":"RecoverError","nameLocation":"369:12:18","nodeType":"EnumDefinition","src":"364:126:18"},{"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"496:63:18","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3042,"name":"ECDSAInvalidSignature","nameLocation":"570:21:18","nodeType":"ErrorDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[],"src":"591:2:18"},"src":"564:30:18"},{"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"600:60:18","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3047,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:18","nodeType":"ErrorDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"length","nameLocation":"707:6:18","nodeType":"VariableDeclaration","scope":3047,"src":"699:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:18"},"src":"665:50:18"},{"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"721:85:18","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3052,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:18","nodeType":"ErrorDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"s","nameLocation":"848:1:18","nodeType":"VariableDeclaration","scope":3052,"src":"840:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:18"},"src":"811:40:18"},{"body":{"id":3104,"nodeType":"Block","src":"2242:653:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3067,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"2256:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:18","memberName":"length","nodeType":"MemberAccess","src":"2256:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3102,"nodeType":"Block","src":"2781:108:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:18","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3093,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2815:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3037,"src":"2815:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3097,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"2860:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:18","memberName":"length","nodeType":"MemberAccess","src":"2860:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:18","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3066,"id":3101,"nodeType":"Return","src":"2795:83:18"}]},"id":3103,"nodeType":"IfStatement","src":"2252:637:18","trueBody":{"id":3088,"nodeType":"Block","src":"2280:495:18","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"r","nameLocation":"2302:1:18","nodeType":"VariableDeclaration","scope":3088,"src":"2294:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3073,"nodeType":"VariableDeclarationStatement","src":"2294:9:18"},{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"s","nameLocation":"2325:1:18","nodeType":"VariableDeclaration","scope":3088,"src":"2317:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3076,"nodeType":"VariableDeclarationStatement","src":"2317:9:18"},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"v","nameLocation":"2346:1:18","nodeType":"VariableDeclaration","scope":3088,"src":"2340:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3077,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3079,"nodeType":"VariableDeclarationStatement","src":"2340:7:18"},{"AST":{"nativeSrc":"2548:171:18","nodeType":"YulBlock","src":"2548:171:18","statements":[{"nativeSrc":"2566:32:18","nodeType":"YulAssignment","src":"2566:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:18","nodeType":"YulIdentifier","src":"2581:9:18"},{"kind":"number","nativeSrc":"2592:4:18","nodeType":"YulLiteral","src":"2592:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:18","nodeType":"YulIdentifier","src":"2577:3:18"},"nativeSrc":"2577:20:18","nodeType":"YulFunctionCall","src":"2577:20:18"}],"functionName":{"name":"mload","nativeSrc":"2571:5:18","nodeType":"YulIdentifier","src":"2571:5:18"},"nativeSrc":"2571:27:18","nodeType":"YulFunctionCall","src":"2571:27:18"},"variableNames":[{"name":"r","nativeSrc":"2566:1:18","nodeType":"YulIdentifier","src":"2566:1:18"}]},{"nativeSrc":"2615:32:18","nodeType":"YulAssignment","src":"2615:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:18","nodeType":"YulIdentifier","src":"2630:9:18"},{"kind":"number","nativeSrc":"2641:4:18","nodeType":"YulLiteral","src":"2641:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:18","nodeType":"YulIdentifier","src":"2626:3:18"},"nativeSrc":"2626:20:18","nodeType":"YulFunctionCall","src":"2626:20:18"}],"functionName":{"name":"mload","nativeSrc":"2620:5:18","nodeType":"YulIdentifier","src":"2620:5:18"},"nativeSrc":"2620:27:18","nodeType":"YulFunctionCall","src":"2620:27:18"},"variableNames":[{"name":"s","nativeSrc":"2615:1:18","nodeType":"YulIdentifier","src":"2615:1:18"}]},{"nativeSrc":"2664:41:18","nodeType":"YulAssignment","src":"2664:41:18","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:18","nodeType":"YulLiteral","src":"2674:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:18","nodeType":"YulIdentifier","src":"2687:9:18"},{"kind":"number","nativeSrc":"2698:4:18","nodeType":"YulLiteral","src":"2698:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:18","nodeType":"YulIdentifier","src":"2683:3:18"},"nativeSrc":"2683:20:18","nodeType":"YulFunctionCall","src":"2683:20:18"}],"functionName":{"name":"mload","nativeSrc":"2677:5:18","nodeType":"YulIdentifier","src":"2677:5:18"},"nativeSrc":"2677:27:18","nodeType":"YulFunctionCall","src":"2677:27:18"}],"functionName":{"name":"byte","nativeSrc":"2669:4:18","nodeType":"YulIdentifier","src":"2669:4:18"},"nativeSrc":"2669:36:18","nodeType":"YulFunctionCall","src":"2669:36:18"},"variableNames":[{"name":"v","nativeSrc":"2664:1:18","nodeType":"YulIdentifier","src":"2664:1:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3072,"isOffset":false,"isSlot":false,"src":"2566:1:18","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2615:1:18","valueSize":1},{"declaration":3057,"isOffset":false,"isSlot":false,"src":"2581:9:18","valueSize":1},{"declaration":3057,"isOffset":false,"isSlot":false,"src":"2630:9:18","valueSize":1},{"declaration":3057,"isOffset":false,"isSlot":false,"src":"2687:9:18","valueSize":1},{"declaration":3078,"isOffset":false,"isSlot":false,"src":"2664:1:18","valueSize":1}],"id":3080,"nodeType":"InlineAssembly","src":"2539:180:18"},{"expression":{"arguments":[{"id":3082,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2750:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3083,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2756:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3084,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2759:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3085,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"2762:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3081,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3105,3185,3293],"referencedDeclaration":3293,"src":"2739:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3066,"id":3087,"nodeType":"Return","src":"2732:32:18"}]}}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"857:1267:18","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:18","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"hash","nameLocation":"2157:4:18","nodeType":"VariableDeclaration","scope":3105,"src":"2149:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"signature","nameLocation":"2176:9:18","nodeType":"VariableDeclaration","scope":3105,"src":"2163:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3056,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:18"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"2210:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"2219:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3062,"nodeType":"UserDefinedTypeName","pathNode":{"id":3061,"name":"RecoverError","nameLocations":["2219:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"2219:12:18"},"referencedDeclaration":3039,"src":"2219:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"2233:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:18"},"scope":3379,"src":"2129:766:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"3789:168:18","statements":[{"assignments":[3116,3119,3121],"declarations":[{"constant":false,"id":3116,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:18","nodeType":"VariableDeclaration","scope":3134,"src":"3800:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"error","nameLocation":"3832:5:18","nodeType":"VariableDeclaration","scope":3134,"src":"3819:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3118,"nodeType":"UserDefinedTypeName","pathNode":{"id":3117,"name":"RecoverError","nameLocations":["3819:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"3819:12:18"},"referencedDeclaration":3039,"src":"3819:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:18","nodeType":"VariableDeclaration","scope":3134,"src":"3839:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3126,"initialValue":{"arguments":[{"id":3123,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3870:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3124,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3876:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3122,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3105,3185,3293],"referencedDeclaration":3105,"src":"3859:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:18"},{"expression":{"arguments":[{"id":3128,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3908:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"id":3129,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3915:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3127,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3896:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3039_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3131,"nodeType":"ExpressionStatement","src":"3896:28:18"},{"expression":{"id":3132,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3941:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3114,"id":3133,"nodeType":"Return","src":"3934:16:18"}]},"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"2901:796:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:18","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"hash","nameLocation":"3727:4:18","nodeType":"VariableDeclaration","scope":3135,"src":"3719:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"signature","nameLocation":"3746:9:18","nodeType":"VariableDeclaration","scope":3135,"src":"3733:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:18"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"3780:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:18"},"scope":3379,"src":"3702:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"4285:342:18","statements":[{"id":3183,"nodeType":"UncheckedBlock","src":"4295:326:18","statements":[{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"s","nameLocation":"4327:1:18","nodeType":"VariableDeclaration","scope":3183,"src":"4319:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3160,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4331:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:18","typeDescriptions":{}}},"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:18"},{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"v","nameLocation":"4528:1:18","nodeType":"VariableDeclaration","scope":3183,"src":"4522:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3161,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3175,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3167,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4547:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:18","typeDescriptions":{}}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3163,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:18","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:18"},{"expression":{"arguments":[{"id":3177,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"4596:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3178,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"4602:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3179,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"4605:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3180,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"4608:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3176,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3105,3185,3293],"referencedDeclaration":3293,"src":"4585:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3151,"id":3182,"nodeType":"Return","src":"4578:32:18"}]}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"3963:205:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:18","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"hash","nameLocation":"4201:4:18","nodeType":"VariableDeclaration","scope":3185,"src":"4193:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"r","nameLocation":"4215:1:18","nodeType":"VariableDeclaration","scope":3185,"src":"4207:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"vs","nameLocation":"4226:2:18","nodeType":"VariableDeclaration","scope":3185,"src":"4218:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:18"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"4253:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"4262:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3147,"nodeType":"UserDefinedTypeName","pathNode":{"id":3146,"name":"RecoverError","nameLocations":["4262:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"4262:12:18"},"referencedDeclaration":3039,"src":"4262:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"4276:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:18"},"scope":3379,"src":"4173:454:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"4840:164:18","statements":[{"assignments":[3198,3201,3203],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:18","nodeType":"VariableDeclaration","scope":3217,"src":"4851:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"error","nameLocation":"4883:5:18","nodeType":"VariableDeclaration","scope":3217,"src":"4870:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3200,"nodeType":"UserDefinedTypeName","pathNode":{"id":3199,"name":"RecoverError","nameLocations":["4870:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"4870:12:18"},"referencedDeclaration":3039,"src":"4870:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:18","nodeType":"VariableDeclaration","scope":3217,"src":"4890:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3209,"initialValue":{"arguments":[{"id":3205,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"4921:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3206,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"4927:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3207,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4930:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3204,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3105,3185,3293],"referencedDeclaration":3185,"src":"4910:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:18"},{"expression":{"arguments":[{"id":3211,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"4955:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"id":3212,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4962:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3210,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4943:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3039_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"ExpressionStatement","src":"4943:28:18"},{"expression":{"id":3215,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"4988:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3196,"id":3216,"nodeType":"Return","src":"4981:16:18"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"4633:116:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:18","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"hash","nameLocation":"4779:4:18","nodeType":"VariableDeclaration","scope":3218,"src":"4771:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"r","nameLocation":"4793:1:18","nodeType":"VariableDeclaration","scope":3218,"src":"4785:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"vs","nameLocation":"4804:2:18","nodeType":"VariableDeclaration","scope":3218,"src":"4796:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:18"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"4831:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:18"},"scope":3379,"src":"4754:250:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3292,"nodeType":"Block","src":"5298:1372:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3239,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6194:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:18","typeDescriptions":{}}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3253,"nodeType":"IfStatement","src":"6182:164:18","trueBody":{"id":3252,"nodeType":"Block","src":"6267:79:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:18","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3247,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6301:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3038,"src":"6301:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"id":3249,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6333:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3236,"id":3251,"nodeType":"Return","src":"6281:54:18"}]}},{"assignments":[3255],"declarations":[{"constant":false,"id":3255,"mutability":"mutable","name":"signer","nameLocation":"6448:6:18","nodeType":"VariableDeclaration","scope":3292,"src":"6440:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3262,"initialValue":{"arguments":[{"id":3257,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"6467:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3258,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"6473:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3259,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6476:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3260,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6479:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3256,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6495:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3264,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:18","typeDescriptions":{}}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3282,"nodeType":"IfStatement","src":"6491:113:18","trueBody":{"id":3281,"nodeType":"Block","src":"6517:87:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:18","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3273,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6551:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"6551:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:18","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3236,"id":3280,"nodeType":"Return","src":"6531:62:18"}]}},{"expression":{"components":[{"id":3283,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6622:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3284,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6630:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3035,"src":"6630:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:18","typeDescriptions":{}}},"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3236,"id":3291,"nodeType":"Return","src":"6614:49:18"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"5010:125:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3293,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:18","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"hash","nameLocation":"5177:4:18","nodeType":"VariableDeclaration","scope":3293,"src":"5169:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"v","nameLocation":"5197:1:18","nodeType":"VariableDeclaration","scope":3293,"src":"5191:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3222,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"r","nameLocation":"5216:1:18","nodeType":"VariableDeclaration","scope":3293,"src":"5208:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"s","nameLocation":"5235:1:18","nodeType":"VariableDeclaration","scope":3293,"src":"5227:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:18"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"5266:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"5275:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"RecoverError","nameLocations":["5275:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"5275:12:18"},"referencedDeclaration":3039,"src":"5275:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"5289:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:18"},"scope":3379,"src":"5140:1530:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"6897:166:18","statements":[{"assignments":[3308,3311,3313],"declarations":[{"constant":false,"id":3308,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:18","nodeType":"VariableDeclaration","scope":3328,"src":"6908:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3307,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"error","nameLocation":"6940:5:18","nodeType":"VariableDeclaration","scope":3328,"src":"6927:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3310,"nodeType":"UserDefinedTypeName","pathNode":{"id":3309,"name":"RecoverError","nameLocations":["6927:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"6927:12:18"},"referencedDeclaration":3039,"src":"6927:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:18","nodeType":"VariableDeclaration","scope":3328,"src":"6947:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3320,"initialValue":{"arguments":[{"id":3315,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6978:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3316,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6984:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3317,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"6987:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3318,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6990:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3314,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3105,3185,3293],"referencedDeclaration":3293,"src":"6967:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3039_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:18"},{"expression":{"arguments":[{"id":3322,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"7014:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},{"id":3323,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7021:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3321,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"7002:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3039_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"7002:28:18"},{"expression":{"id":3326,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7047:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3306,"id":3327,"nodeType":"Return","src":"7040:16:18"}]},"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"6676:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:18","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"hash","nameLocation":"6828:4:18","nodeType":"VariableDeclaration","scope":3329,"src":"6820:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"v","nameLocation":"6840:1:18","nodeType":"VariableDeclaration","scope":3329,"src":"6834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3297,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"r","nameLocation":"6851:1:18","nodeType":"VariableDeclaration","scope":3329,"src":"6843:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"s","nameLocation":"6862:1:18","nodeType":"VariableDeclaration","scope":3329,"src":"6854:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:18"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"6888:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3304,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:18"},"scope":3379,"src":"6803:260:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"7268:460:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"7282:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3339,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7291:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3035,"src":"7291:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"7378:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3345,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7387:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"7387:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"7483:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3353,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7492:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3037,"src":"7492:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"7617:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3365,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7626:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3039_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3038,"src":"7626:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3373,"nodeType":"IfStatement","src":"7613:109:18","trueBody":{"id":3372,"nodeType":"Block","src":"7658:64:18","statements":[{"errorCall":{"arguments":[{"id":3369,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"7702:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3368,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"7679:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3371,"nodeType":"RevertStatement","src":"7672:39:18"}]}},"id":3374,"nodeType":"IfStatement","src":"7479:243:18","trueBody":{"id":3363,"nodeType":"Block","src":"7529:78:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3359,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"7586:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:18","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"7550:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"RevertStatement","src":"7543:53:18"}]}},"id":3375,"nodeType":"IfStatement","src":"7374:348:18","trueBody":{"id":3351,"nodeType":"Block","src":"7418:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3348,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"7439:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"RevertStatement","src":"7432:30:18"}]}},"id":3376,"nodeType":"IfStatement","src":"7278:444:18","trueBody":{"id":3343,"nodeType":"Block","src":"7313:55:18","statements":[{"functionReturnParameters":3337,"id":3342,"nodeType":"Return","src":"7327:7:18"}]}}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"7069:122:18","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:18","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"error","nameLocation":"7230:5:18","nodeType":"VariableDeclaration","scope":3378,"src":"7217:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3332,"nodeType":"UserDefinedTypeName","pathNode":{"id":3331,"name":"RecoverError","nameLocations":["7217:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"7217:12:18"},"referencedDeclaration":3039,"src":"7217:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3039","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:18","nodeType":"VariableDeclaration","scope":3378,"src":"7237:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:18"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"7268:0:18"},"scope":3379,"src":"7196:532:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3380,"src":"344:7386:18","usedErrors":[3042,3047,3052],"usedEvents":[]}],"src":"112:7619:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3606],"IERC5267":[862],"MessageHashUtils":[3680],"ShortString":[2455],"ShortStrings":[2666]},"id":3607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3607,"sourceUnit":3681,"src":"139:56:19","symbolAliases":[{"foreign":{"id":3382,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"147:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3607,"sourceUnit":2667,"src":"196:62:19","symbolAliases":[{"foreign":{"id":3384,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"204:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3385,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"218:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3607,"sourceUnit":863,"src":"259:55:19","symbolAliases":[{"foreign":{"id":3387,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"267:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3390,"name":"IERC5267","nameLocations":["1988:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":862,"src":"1988:8:19"},"id":3391,"nodeType":"InheritanceSpecifier","src":"1988:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"316:1643:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3606,"linearizedBaseContracts":[3606,862],"name":"EIP712","nameLocation":"1978:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3393,"libraryName":{"id":3392,"name":"ShortStrings","nameLocations":["2009:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2666,"src":"2009:12:19"},"nodeType":"UsingForDirective","src":"2003:25:19"},{"constant":true,"id":3398,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:19","nodeType":"VariableDeclaration","scope":3606,"src":"2034:140:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3395,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3400,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:19","nodeType":"VariableDeclaration","scope":3606,"src":"2373:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3402,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:19","nodeType":"VariableDeclaration","scope":3606,"src":"2427:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3404,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:19","nodeType":"VariableDeclaration","scope":3606,"src":"2473:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3406,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:19","nodeType":"VariableDeclaration","scope":3606,"src":"2517:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3408,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:19","nodeType":"VariableDeclaration","scope":3606,"src":"2560:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3411,"mutability":"immutable","name":"_name","nameLocation":"2637:5:19","nodeType":"VariableDeclaration","scope":3606,"src":"2607:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":3410,"nodeType":"UserDefinedTypeName","pathNode":{"id":3409,"name":"ShortString","nameLocations":["2607:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"2607:11:19"},"referencedDeclaration":2455,"src":"2607:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3414,"mutability":"immutable","name":"_version","nameLocation":"2678:8:19","nodeType":"VariableDeclaration","scope":3606,"src":"2648:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"ShortString","nameLocations":["2648:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"2648:11:19"},"referencedDeclaration":2455,"src":"2648:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3416,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:19","nodeType":"VariableDeclaration","scope":3606,"src":"2692:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3415,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3418,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:19","nodeType":"VariableDeclaration","scope":3606,"src":"2726:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3417,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3475,"nodeType":"Block","src":"3383:376:19","statements":[{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3426,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3393:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3429,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3432:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3427,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3401:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2607,"src":"3401:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2455_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"src":"3393:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"id":3432,"nodeType":"ExpressionStatement","src":"3393:53:19"},{"expression":{"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"3456:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3436,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3501:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3434,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"3467:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2607,"src":"3467:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2455_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"src":"3456:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"id":3439,"nodeType":"ExpressionStatement","src":"3456:62:19"},{"expression":{"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"3528:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3444,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3558:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3442,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:19","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3448,"nodeType":"ExpressionStatement","src":"3528:36:19"},{"expression":{"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3449,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"3574:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3453,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"3607:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3451,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:19","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3450,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3457,"nodeType":"ExpressionStatement","src":"3574:42:19"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3458,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"3627:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"3627:30:19"},{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3667:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3464,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"3692:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3467,"nodeType":"ExpressionStatement","src":"3667:48:19"},{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"3725:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3471,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}],"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3469,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:19","typeDescriptions":{}}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3474,"nodeType":"ExpressionStatement","src":"3725:27:19"}]},"documentation":{"id":3419,"nodeType":"StructuredDocumentation","src":"2764:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3476,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"name","nameLocation":"3354:4:19","nodeType":"VariableDeclaration","scope":3476,"src":"3340:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3420,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"version","nameLocation":"3374:7:19","nodeType":"VariableDeclaration","scope":3476,"src":"3360:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3422,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:19"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[],"src":"3383:0:19"},"scope":3606,"src":"3328:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"3907:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3484,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:19","typeDescriptions":{}}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3486,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"3938:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3490,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"3970:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3499,"nodeType":"Block","src":"4046:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3496,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"4067:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3481,"id":3498,"nodeType":"Return","src":"4060:30:19"}]},"id":3500,"nodeType":"IfStatement","src":"3917:184:19","trueBody":{"id":3495,"nodeType":"Block","src":"3986:54:19","statements":[{"expression":{"id":3493,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"4007:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3481,"id":3494,"nodeType":"Return","src":"4000:29:19"}]}}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"3765:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:19","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[],"src":"3872:2:19"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"3898:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:19"},"scope":3606,"src":"3845:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3522,"nodeType":"Block","src":"4177:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3510,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"4215:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3511,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"4226:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3512,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"4239:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3517,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:19","typeDescriptions":{}}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3508,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3507,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3506,"id":3521,"nodeType":"Return","src":"4187:98:19"}]},"id":3523,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:19","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[],"src":"4143:2:19"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3523,"src":"4168:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:19"},"scope":3606,"src":"4113:179:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3538,"nodeType":"Block","src":"5003:90:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3533,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"5053:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3535,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5075:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3531,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"5020:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3680_$","typeString":"type(library MessageHashUtils)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"5020:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3530,"id":3537,"nodeType":"Return","src":"5013:73:19"}]},"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"4298:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:19","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:19","nodeType":"VariableDeclaration","scope":3539,"src":"4943:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:19"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"4994:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:19"},"scope":3606,"src":"4917:176:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[861],"body":{"id":3580,"nodeType":"Block","src":"5472:229:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3559,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5533:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3561,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5560:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3563,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3567,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3606","typeString":"contract EIP712"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:19","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:19","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ArrayTypeName","src":"5672:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3557,"id":3579,"nodeType":"Return","src":"5482:212:19"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"5099:40:19","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:19","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[],"src":"5165:2:19"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"fields","nameLocation":"5249:6:19","nodeType":"VariableDeclaration","scope":3581,"src":"5242:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3542,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"name","nameLocation":"5283:4:19","nodeType":"VariableDeclaration","scope":3581,"src":"5269:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3544,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"version","nameLocation":"5315:7:19","nodeType":"VariableDeclaration","scope":3581,"src":"5301:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3546,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:19","nodeType":"VariableDeclaration","scope":3581,"src":"5336:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:19","nodeType":"VariableDeclaration","scope":3581,"src":"5365:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"mutability":"mutable","name":"salt","nameLocation":"5412:4:19","nodeType":"VariableDeclaration","scope":3581,"src":"5404:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3556,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:19","nodeType":"VariableDeclaration","scope":3581,"src":"5430:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ArrayTypeName","src":"5430:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:19"},"scope":3606,"src":"5144:557:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3592,"nodeType":"Block","src":"6082:65:19","statements":[{"expression":{"arguments":[{"id":3589,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"6126:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3587,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6099:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"6099:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2455_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3586,"id":3591,"nodeType":"Return","src":"6092:48:19"}]},"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"5707:256:19","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:19","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[],"src":"6041:2:19"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3593,"src":"6067:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3584,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:19"},"scope":3606,"src":"6021:126:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3604,"nodeType":"Block","src":"6537:71:19","statements":[{"expression":{"arguments":[{"id":3601,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"6584:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3599,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"6554:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2455","typeString":"ShortString"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"6554:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2455_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2455_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3598,"id":3603,"nodeType":"Return","src":"6547:54:19"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"6153:262:19","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:19","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[],"src":"6496:2:19"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3605,"src":"6522:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3596,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:19"},"scope":3606,"src":"6473:135:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3607,"src":"1960:4650:19","usedErrors":[2463,2465],"usedEvents":[842]}],"src":"113:6498:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3680],"Strings":[3031]},"id":3681,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3681,"sourceUnit":3032,"src":"149:39:20","symbolAliases":[{"foreign":{"id":3609,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3680,"linearizedBaseContracts":[3680],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3620,"nodeType":"Block","src":"1314:368:20","statements":[{"AST":{"nativeSrc":"1376:300:20","nodeType":"YulBlock","src":"1376:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:20","nodeType":"YulLiteral","src":"1397:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:20","nodeType":"YulLiteral","src":"1403:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:20","nodeType":"YulIdentifier","src":"1390:6:20"},"nativeSrc":"1390:48:20","nodeType":"YulFunctionCall","src":"1390:48:20"},"nativeSrc":"1390:48:20","nodeType":"YulExpressionStatement","src":"1390:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:20","nodeType":"YulLiteral","src":"1499:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:20","nodeType":"YulIdentifier","src":"1505:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:20","nodeType":"YulIdentifier","src":"1492:6:20"},"nativeSrc":"1492:25:20","nodeType":"YulFunctionCall","src":"1492:25:20"},"nativeSrc":"1492:25:20","nodeType":"YulExpressionStatement","src":"1492:25:20"},{"nativeSrc":"1571:31:20","nodeType":"YulAssignment","src":"1571:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:20","nodeType":"YulLiteral","src":"1591:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:20","nodeType":"YulLiteral","src":"1597:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:20","nodeType":"YulIdentifier","src":"1581:9:20"},"nativeSrc":"1581:21:20","nodeType":"YulFunctionCall","src":"1581:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:20","nodeType":"YulIdentifier","src":"1571:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3617,"isOffset":false,"isSlot":false,"src":"1571:6:20","valueSize":1},{"declaration":3614,"isOffset":false,"isSlot":false,"src":"1505:11:20","valueSize":1}],"id":3619,"nodeType":"InlineAssembly","src":"1367:309:20"}]},"documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"552:665:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:20","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:20","nodeType":"VariableDeclaration","scope":3621,"src":"1254:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:20"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"digest","nameLocation":"1306:6:20","nodeType":"VariableDeclaration","scope":3621,"src":"1298:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:20"},"scope":3680,"src":"1222:460:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"2234:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3638,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"2343:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:20","memberName":"length","nodeType":"MemberAccess","src":"2343:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3636,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2326:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3031_$","typeString":"type(library Strings)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2844,"src":"2326:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:20","typeDescriptions":{}}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3642,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"2361:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3630,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:20","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3629,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3628,"id":3645,"nodeType":"Return","src":"2244:126:20"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"1688:455:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:20","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"message","nameLocation":"2193:7:20","nodeType":"VariableDeclaration","scope":3647,"src":"2180:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3623,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:20"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"2225:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:20"},"scope":3680,"src":"2148:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3666,"nodeType":"Block","src":"2831:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3661,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"2887:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3662,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"2898:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3658,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3657,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3656,"id":3665,"nodeType":"Return","src":"2841:63:20"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"2383:332:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:20","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"validator","nameLocation":"2769:9:20","nodeType":"VariableDeclaration","scope":3667,"src":"2761:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"data","nameLocation":"2793:4:20","nodeType":"VariableDeclaration","scope":3667,"src":"2780:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3651,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:20"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"2822:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:20"},"scope":3680,"src":"2720:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3678,"nodeType":"Block","src":"3462:292:20","statements":[{"AST":{"nativeSrc":"3524:224:20","nodeType":"YulBlock","src":"3524:224:20","statements":[{"nativeSrc":"3538:22:20","nodeType":"YulVariableDeclaration","src":"3538:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:20","nodeType":"YulLiteral","src":"3555:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:20","nodeType":"YulIdentifier","src":"3549:5:20"},"nativeSrc":"3549:11:20","nodeType":"YulFunctionCall","src":"3549:11:20"},"variables":[{"name":"ptr","nativeSrc":"3542:3:20","nodeType":"YulTypedName","src":"3542:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:20","nodeType":"YulIdentifier","src":"3580:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:20","nodeType":"YulLiteral","src":"3585:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:20","nodeType":"YulIdentifier","src":"3573:6:20"},"nativeSrc":"3573:23:20","nodeType":"YulFunctionCall","src":"3573:23:20"},"nativeSrc":"3573:23:20","nodeType":"YulExpressionStatement","src":"3573:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:20","nodeType":"YulIdentifier","src":"3620:3:20"},{"kind":"number","nativeSrc":"3625:4:20","nodeType":"YulLiteral","src":"3625:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:20","nodeType":"YulIdentifier","src":"3616:3:20"},"nativeSrc":"3616:14:20","nodeType":"YulFunctionCall","src":"3616:14:20"},{"name":"domainSeparator","nativeSrc":"3632:15:20","nodeType":"YulIdentifier","src":"3632:15:20"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:20","nodeType":"YulIdentifier","src":"3609:6:20"},"nativeSrc":"3609:39:20","nodeType":"YulFunctionCall","src":"3609:39:20"},"nativeSrc":"3609:39:20","nodeType":"YulExpressionStatement","src":"3609:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:20","nodeType":"YulIdentifier","src":"3672:3:20"},{"kind":"number","nativeSrc":"3677:4:20","nodeType":"YulLiteral","src":"3677:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:20","nodeType":"YulIdentifier","src":"3668:3:20"},"nativeSrc":"3668:14:20","nodeType":"YulFunctionCall","src":"3668:14:20"},{"name":"structHash","nativeSrc":"3684:10:20","nodeType":"YulIdentifier","src":"3684:10:20"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:20","nodeType":"YulIdentifier","src":"3661:6:20"},"nativeSrc":"3661:34:20","nodeType":"YulFunctionCall","src":"3661:34:20"},"nativeSrc":"3661:34:20","nodeType":"YulExpressionStatement","src":"3661:34:20"},{"nativeSrc":"3708:30:20","nodeType":"YulAssignment","src":"3708:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:20","nodeType":"YulIdentifier","src":"3728:3:20"},{"kind":"number","nativeSrc":"3733:4:20","nodeType":"YulLiteral","src":"3733:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:20","nodeType":"YulIdentifier","src":"3718:9:20"},"nativeSrc":"3718:20:20","nodeType":"YulFunctionCall","src":"3718:20:20"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:20","nodeType":"YulIdentifier","src":"3708:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3675,"isOffset":false,"isSlot":false,"src":"3708:6:20","valueSize":1},{"declaration":3670,"isOffset":false,"isSlot":false,"src":"3632:15:20","valueSize":1},{"declaration":3672,"isOffset":false,"isSlot":false,"src":"3684:10:20","valueSize":1}],"id":3677,"nodeType":"InlineAssembly","src":"3515:233:20"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"2917:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3679,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:20","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:20","nodeType":"VariableDeclaration","scope":3679,"src":"3378:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:20","nodeType":"VariableDeclaration","scope":3679,"src":"3403:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:20"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"digest","nameLocation":"3454:6:20","nodeType":"VariableDeclaration","scope":3679,"src":"3446:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:20"},"scope":3680,"src":"3353:401:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3681,"src":"521:3235:20","usedErrors":[],"usedEvents":[]}],"src":"123:3634:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3704],"IERC165":[3716]},"id":3705,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3682,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3684,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3705,"sourceUnit":3717,"src":"140:38:21","symbolAliases":[{"foreign":{"id":3683,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"148:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3686,"name":"IERC165","nameLocations":["687:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3716,"src":"687:7:21"},"id":3687,"nodeType":"InheritanceSpecifier","src":"687:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"180:478:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3704,"linearizedBaseContracts":[3704,3716],"name":"ERC165","nameLocation":"677:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3715],"body":{"id":3702,"nodeType":"Block","src":"844:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"861:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3697,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"881:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3716_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3716_$","typeString":"type(contract IERC165)"}],"id":3696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3716","typeString":"type(contract IERC165)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3694,"id":3701,"nodeType":"Return","src":"854:47:21"}]},"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"701:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3703,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:21","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:21","nodeType":"VariableDeclaration","scope":3703,"src":"789:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3689,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:21"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3703,"src":"838:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3692,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:21"},"scope":3704,"src":"762:146:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3705,"src":"659:251:21","usedErrors":[],"usedEvents":[]}],"src":"114:797:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3716]},"id":3717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3706,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"141:279:22","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3716,"linearizedBaseContracts":[3716],"name":"IERC165","nameLocation":"431:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"445:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3715,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:22","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:22","nodeType":"VariableDeclaration","scope":3715,"src":"817:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3709,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:22"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3715,"src":"860:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3712,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:22"},"scope":3716,"src":"790:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3717,"src":"421:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:754:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4770]},"id":4771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"129:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4770,"linearizedBaseContracts":[4770],"name":"Math","nameLocation":"211:4:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"222:50:23","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3722,"name":"MathOverflowedMulDiv","nameLocation":"283:20:23","nodeType":"ErrorDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[],"src":"303:2:23"},"src":"277:29:23"},{"canonicalName":"Math.Rounding","id":3727,"members":[{"id":3723,"name":"Floor","nameLocation":"336:5:23","nodeType":"EnumValue","src":"336:5:23"},{"id":3724,"name":"Ceil","nameLocation":"379:4:23","nodeType":"EnumValue","src":"379:4:23"},{"id":3725,"name":"Trunc","nameLocation":"421:5:23","nodeType":"EnumValue","src":"421:5:23"},{"id":3726,"name":"Expand","nameLocation":"451:6:23","nodeType":"EnumValue","src":"451:6:23"}],"name":"Rounding","nameLocation":"317:8:23","nodeType":"EnumDefinition","src":"312:169:23"},{"body":{"id":3758,"nodeType":"Block","src":"661:140:23","statements":[{"id":3757,"nodeType":"UncheckedBlock","src":"671:124:23","statements":[{"assignments":[3740],"declarations":[{"constant":false,"id":3740,"mutability":"mutable","name":"c","nameLocation":"703:1:23","nodeType":"VariableDeclaration","scope":3757,"src":"695:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3744,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"707:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"711:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"730:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"734:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"nodeType":"IfStatement","src":"726:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3738,"id":3751,"nodeType":"Return","src":"737:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3754,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"782:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3738,"id":3756,"nodeType":"Return","src":"768:16:23"}]}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"487:93:23","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:23","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"a","nameLocation":"609:1:23","nodeType":"VariableDeclaration","scope":3759,"src":"601:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"b","nameLocation":"620:1:23","nodeType":"VariableDeclaration","scope":3759,"src":"612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:23"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"646:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"652:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:23"},"scope":4770,"src":"585:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"984:113:23","statements":[{"id":3785,"nodeType":"UncheckedBlock","src":"994:97:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"1022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"1026:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"1018:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3770,"id":3777,"nodeType":"Return","src":"1029:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"1074:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"1078:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3770,"id":3784,"nodeType":"Return","src":"1060:20:23"}]}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"807:96:23","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:23","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"a","nameLocation":"932:1:23","nodeType":"VariableDeclaration","scope":3787,"src":"924:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"b","nameLocation":"943:1:23","nodeType":"VariableDeclaration","scope":3787,"src":"935:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:23"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3787,"src":"969:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3787,"src":"975:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:23"},"scope":4770,"src":"908:189:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"1283:417:23","statements":[{"id":3827,"nodeType":"UncheckedBlock","src":"1293:401:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"1547:28:23","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3798,"id":3805,"nodeType":"Return","src":"1559:16:23"}},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"c","nameLocation":"1597:1:23","nodeType":"VariableDeclaration","scope":3827,"src":"1589:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3812,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1601:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"1605:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"1624:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1628:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3816,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"1633:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3822,"nodeType":"IfStatement","src":"1620:33:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3798,"id":3821,"nodeType":"Return","src":"1636:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3824,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"1681:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3798,"id":3826,"nodeType":"Return","src":"1667:16:23"}]}]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"1103:99:23","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:23","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"a","nameLocation":"1231:1:23","nodeType":"VariableDeclaration","scope":3829,"src":"1223:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"b","nameLocation":"1242:1:23","nodeType":"VariableDeclaration","scope":3829,"src":"1234:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:23"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"1268:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3794,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"1274:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:23"},"scope":4770,"src":"1207:493:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3856,"nodeType":"Block","src":"1887:114:23","statements":[{"id":3855,"nodeType":"UncheckedBlock","src":"1897:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"1925:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3848,"nodeType":"IfStatement","src":"1921:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3840,"id":3847,"nodeType":"Return","src":"1933:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"1978:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"1982:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3840,"id":3854,"nodeType":"Return","src":"1964:20:23"}]}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"1706:100:23","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3857,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:23","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"a","nameLocation":"1835:1:23","nodeType":"VariableDeclaration","scope":3857,"src":"1827:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"b","nameLocation":"1846:1:23","nodeType":"VariableDeclaration","scope":3857,"src":"1838:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:23"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"1872:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3836,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"1878:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:23"},"scope":4770,"src":"1811:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"2198:114:23","statements":[{"id":3883,"nodeType":"UncheckedBlock","src":"2208:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2236:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3876,"nodeType":"IfStatement","src":"2232:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3868,"id":3875,"nodeType":"Return","src":"2244:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"2289:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2293:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3868,"id":3882,"nodeType":"Return","src":"2275:20:23"}]}]},"documentation":{"id":3858,"nodeType":"StructuredDocumentation","src":"2007:110:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:23","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"a","nameLocation":"2146:1:23","nodeType":"VariableDeclaration","scope":3885,"src":"2138:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3862,"mutability":"mutable","name":"b","nameLocation":"2157:1:23","nodeType":"VariableDeclaration","scope":3885,"src":"2149:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:23"},"returnParameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"2183:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3864,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"2189:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:23"},"scope":4770,"src":"2122:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3902,"nodeType":"Block","src":"2449:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2466:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"2470:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"2478:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:23","trueExpression":{"id":3898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2474:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3894,"id":3901,"nodeType":"Return","src":"2459:20:23"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"2318:59:23","text":" @dev Returns the largest of two numbers."},"id":3903,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:23","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"a","nameLocation":"2403:1:23","nodeType":"VariableDeclaration","scope":3903,"src":"2395:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"b","nameLocation":"2414:1:23","nodeType":"VariableDeclaration","scope":3903,"src":"2406:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:23"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3903,"src":"2440:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:23"},"scope":4770,"src":"2382:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"2624:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"2641:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"2645:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"2653:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:23","trueExpression":{"id":3916,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"2649:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3912,"id":3919,"nodeType":"Return","src":"2634:20:23"}]},"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"2492:60:23","text":" @dev Returns the smallest of two numbers."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:23","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"a","nameLocation":"2578:1:23","nodeType":"VariableDeclaration","scope":3921,"src":"2570:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"b","nameLocation":"2589:1:23","nodeType":"VariableDeclaration","scope":3921,"src":"2581:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:23"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"2615:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:23"},"scope":4770,"src":"2557:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3943,"nodeType":"Block","src":"2845:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2900:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"2904:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2910:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3936,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"2914:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3930,"id":3942,"nodeType":"Return","src":"2892:28:23"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"2667:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:23","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"a","nameLocation":"2799:1:23","nodeType":"VariableDeclaration","scope":3944,"src":"2791:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"b","nameLocation":"2810:1:23","nodeType":"VariableDeclaration","scope":3944,"src":"2802:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:23"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3944,"src":"2836:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:23"},"scope":4770,"src":"2774:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"3219:260:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3233:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3962,"nodeType":"IfStatement","src":"3229:127:23","trueBody":{"id":3961,"nodeType":"Block","src":"3241:115:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3340:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3344:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3953,"id":3960,"nodeType":"Return","src":"3333:12:23"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3444:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3458:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3467:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:23","trueExpression":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3953,"id":3976,"nodeType":"Return","src":"3437:35:23"}]},"documentation":{"id":3945,"nodeType":"StructuredDocumentation","src":"2933:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:23","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"a","nameLocation":"3173:1:23","nodeType":"VariableDeclaration","scope":3978,"src":"3165:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"b","nameLocation":"3184:1:23","nodeType":"VariableDeclaration","scope":3978,"src":"3176:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:23"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"3210:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:23"},"scope":4770,"src":"3148:331:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4103,"nodeType":"Block","src":"3901:4018:23","statements":[{"id":4102,"nodeType":"UncheckedBlock","src":"3911:4002:23","statements":[{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:23","nodeType":"VariableDeclaration","scope":4102,"src":"4232:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3995,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"4248:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3993,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"4252:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:23"},{"assignments":[3997],"declarations":[{"constant":false,"id":3997,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:23","nodeType":"VariableDeclaration","scope":4102,"src":"4312:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3998,"nodeType":"VariableDeclarationStatement","src":"4312:13:23"},{"AST":{"nativeSrc":"4392:122:23","nodeType":"YulBlock","src":"4392:122:23","statements":[{"nativeSrc":"4410:30:23","nodeType":"YulVariableDeclaration","src":"4410:30:23","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:23","nodeType":"YulIdentifier","src":"4427:1:23"},{"name":"y","nativeSrc":"4430:1:23","nodeType":"YulIdentifier","src":"4430:1:23"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:23","nodeType":"YulLiteral","src":"4437:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:23","nodeType":"YulIdentifier","src":"4433:3:23"},"nativeSrc":"4433:6:23","nodeType":"YulFunctionCall","src":"4433:6:23"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:23","nodeType":"YulIdentifier","src":"4420:6:23"},"nativeSrc":"4420:20:23","nodeType":"YulFunctionCall","src":"4420:20:23"},"variables":[{"name":"mm","nativeSrc":"4414:2:23","nodeType":"YulTypedName","src":"4414:2:23","type":""}]},{"nativeSrc":"4457:43:23","nodeType":"YulAssignment","src":"4457:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:23","nodeType":"YulIdentifier","src":"4474:2:23"},{"name":"prod0","nativeSrc":"4478:5:23","nodeType":"YulIdentifier","src":"4478:5:23"}],"functionName":{"name":"sub","nativeSrc":"4470:3:23","nodeType":"YulIdentifier","src":"4470:3:23"},"nativeSrc":"4470:14:23","nodeType":"YulFunctionCall","src":"4470:14:23"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:23","nodeType":"YulIdentifier","src":"4489:2:23"},{"name":"prod0","nativeSrc":"4493:5:23","nodeType":"YulIdentifier","src":"4493:5:23"}],"functionName":{"name":"lt","nativeSrc":"4486:2:23","nodeType":"YulIdentifier","src":"4486:2:23"},"nativeSrc":"4486:13:23","nodeType":"YulFunctionCall","src":"4486:13:23"}],"functionName":{"name":"sub","nativeSrc":"4466:3:23","nodeType":"YulIdentifier","src":"4466:3:23"},"nativeSrc":"4466:34:23","nodeType":"YulFunctionCall","src":"4466:34:23"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:23","nodeType":"YulIdentifier","src":"4457:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3991,"isOffset":false,"isSlot":false,"src":"4478:5:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"4493:5:23","valueSize":1},{"declaration":3997,"isOffset":false,"isSlot":false,"src":"4457:5:23","valueSize":1},{"declaration":3981,"isOffset":false,"isSlot":false,"src":"4427:1:23","valueSize":1},{"declaration":3983,"isOffset":false,"isSlot":false,"src":"4430:1:23","valueSize":1}],"id":3999,"nodeType":"InlineAssembly","src":"4383:131:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"4595:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"4591:368:23","trueBody":{"id":4007,"nodeType":"Block","src":"4607:352:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"4925:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4004,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4933:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3989,"id":4006,"nodeType":"Return","src":"4918:26:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"5065:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4010,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"5080:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"IfStatement","src":"5061:88:23","trueBody":{"id":4015,"nodeType":"Block","src":"5087:62:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4012,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"5112:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4014,"nodeType":"RevertStatement","src":"5105:29:23"}]}},{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:23","nodeType":"VariableDeclaration","scope":4102,"src":"5404:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4019,"nodeType":"VariableDeclarationStatement","src":"5404:17:23"},{"AST":{"nativeSrc":"5444:291:23","nodeType":"YulBlock","src":"5444:291:23","statements":[{"nativeSrc":"5513:38:23","nodeType":"YulAssignment","src":"5513:38:23","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:23","nodeType":"YulIdentifier","src":"5533:1:23"},{"name":"y","nativeSrc":"5536:1:23","nodeType":"YulIdentifier","src":"5536:1:23"},{"name":"denominator","nativeSrc":"5539:11:23","nodeType":"YulIdentifier","src":"5539:11:23"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:23","nodeType":"YulIdentifier","src":"5526:6:23"},"nativeSrc":"5526:25:23","nodeType":"YulFunctionCall","src":"5526:25:23"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:23","nodeType":"YulIdentifier","src":"5513:9:23"}]},{"nativeSrc":"5633:41:23","nodeType":"YulAssignment","src":"5633:41:23","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:23","nodeType":"YulIdentifier","src":"5646:5:23"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:23","nodeType":"YulIdentifier","src":"5656:9:23"},{"name":"prod0","nativeSrc":"5667:5:23","nodeType":"YulIdentifier","src":"5667:5:23"}],"functionName":{"name":"gt","nativeSrc":"5653:2:23","nodeType":"YulIdentifier","src":"5653:2:23"},"nativeSrc":"5653:20:23","nodeType":"YulFunctionCall","src":"5653:20:23"}],"functionName":{"name":"sub","nativeSrc":"5642:3:23","nodeType":"YulIdentifier","src":"5642:3:23"},"nativeSrc":"5642:32:23","nodeType":"YulFunctionCall","src":"5642:32:23"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:23","nodeType":"YulIdentifier","src":"5633:5:23"}]},{"nativeSrc":"5691:30:23","nodeType":"YulAssignment","src":"5691:30:23","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:23","nodeType":"YulIdentifier","src":"5704:5:23"},{"name":"remainder","nativeSrc":"5711:9:23","nodeType":"YulIdentifier","src":"5711:9:23"}],"functionName":{"name":"sub","nativeSrc":"5700:3:23","nodeType":"YulIdentifier","src":"5700:3:23"},"nativeSrc":"5700:21:23","nodeType":"YulFunctionCall","src":"5700:21:23"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:23","nodeType":"YulIdentifier","src":"5691:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3985,"isOffset":false,"isSlot":false,"src":"5539:11:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"5667:5:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"5691:5:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"5704:5:23","valueSize":1},{"declaration":3997,"isOffset":false,"isSlot":false,"src":"5633:5:23","valueSize":1},{"declaration":3997,"isOffset":false,"isSlot":false,"src":"5646:5:23","valueSize":1},{"declaration":4018,"isOffset":false,"isSlot":false,"src":"5513:9:23","valueSize":1},{"declaration":4018,"isOffset":false,"isSlot":false,"src":"5656:9:23","valueSize":1},{"declaration":4018,"isOffset":false,"isSlot":false,"src":"5711:9:23","valueSize":1},{"declaration":3981,"isOffset":false,"isSlot":false,"src":"5533:1:23","valueSize":1},{"declaration":3983,"isOffset":false,"isSlot":false,"src":"5536:1:23","valueSize":1}],"id":4020,"nodeType":"InlineAssembly","src":"5435:300:23"},{"assignments":[4022],"declarations":[{"constant":false,"id":4022,"mutability":"mutable","name":"twos","nameLocation":"5947:4:23","nodeType":"VariableDeclaration","scope":4102,"src":"5939:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4029,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"5954:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"5973:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:23"},{"AST":{"nativeSrc":"6008:362:23","nodeType":"YulBlock","src":"6008:362:23","statements":[{"nativeSrc":"6073:37:23","nodeType":"YulAssignment","src":"6073:37:23","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:23","nodeType":"YulIdentifier","src":"6092:11:23"},{"name":"twos","nativeSrc":"6105:4:23","nodeType":"YulIdentifier","src":"6105:4:23"}],"functionName":{"name":"div","nativeSrc":"6088:3:23","nodeType":"YulIdentifier","src":"6088:3:23"},"nativeSrc":"6088:22:23","nodeType":"YulFunctionCall","src":"6088:22:23"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:23","nodeType":"YulIdentifier","src":"6073:11:23"}]},{"nativeSrc":"6177:25:23","nodeType":"YulAssignment","src":"6177:25:23","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:23","nodeType":"YulIdentifier","src":"6190:5:23"},{"name":"twos","nativeSrc":"6197:4:23","nodeType":"YulIdentifier","src":"6197:4:23"}],"functionName":{"name":"div","nativeSrc":"6186:3:23","nodeType":"YulIdentifier","src":"6186:3:23"},"nativeSrc":"6186:16:23","nodeType":"YulFunctionCall","src":"6186:16:23"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:23","nodeType":"YulIdentifier","src":"6177:5:23"}]},{"nativeSrc":"6317:39:23","nodeType":"YulAssignment","src":"6317:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:23","nodeType":"YulLiteral","src":"6337:1:23","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:23","nodeType":"YulIdentifier","src":"6340:4:23"}],"functionName":{"name":"sub","nativeSrc":"6333:3:23","nodeType":"YulIdentifier","src":"6333:3:23"},"nativeSrc":"6333:12:23","nodeType":"YulFunctionCall","src":"6333:12:23"},{"name":"twos","nativeSrc":"6347:4:23","nodeType":"YulIdentifier","src":"6347:4:23"}],"functionName":{"name":"div","nativeSrc":"6329:3:23","nodeType":"YulIdentifier","src":"6329:3:23"},"nativeSrc":"6329:23:23","nodeType":"YulFunctionCall","src":"6329:23:23"},{"kind":"number","nativeSrc":"6354:1:23","nodeType":"YulLiteral","src":"6354:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:23","nodeType":"YulIdentifier","src":"6325:3:23"},"nativeSrc":"6325:31:23","nodeType":"YulFunctionCall","src":"6325:31:23"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:23","nodeType":"YulIdentifier","src":"6317:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3985,"isOffset":false,"isSlot":false,"src":"6073:11:23","valueSize":1},{"declaration":3985,"isOffset":false,"isSlot":false,"src":"6092:11:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"6177:5:23","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"6190:5:23","valueSize":1},{"declaration":4022,"isOffset":false,"isSlot":false,"src":"6105:4:23","valueSize":1},{"declaration":4022,"isOffset":false,"isSlot":false,"src":"6197:4:23","valueSize":1},{"declaration":4022,"isOffset":false,"isSlot":false,"src":"6317:4:23","valueSize":1},{"declaration":4022,"isOffset":false,"isSlot":false,"src":"6340:4:23","valueSize":1},{"declaration":4022,"isOffset":false,"isSlot":false,"src":"6347:4:23","valueSize":1}],"id":4030,"nodeType":"InlineAssembly","src":"5999:371:23"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"6436:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"6445:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4033,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6453:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"6436:21:23"},{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:23","nodeType":"VariableDeclaration","scope":4102,"src":"6775:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4040,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"6798:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:23"},{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4046,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7031:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7046:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4049,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7060:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"7031:36:23"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7100:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7115:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4057,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7129:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4061,"nodeType":"ExpressionStatement","src":"7100:36:23"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7170:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7185:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7199:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"7170:36:23"},{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7240:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7255:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4077,"nodeType":"ExpressionStatement","src":"7240:36:23"},{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7310:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7325:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4081,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"7310:36:23"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7381:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"7396:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4089,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7410:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"7381:36:23"},{"expression":{"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"7851:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"7860:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"7868:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4099,"nodeType":"ExpressionStatement","src":"7851:24:23"},{"expression":{"id":4100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"7896:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3989,"id":4101,"nodeType":"Return","src":"7889:13:23"}]}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"3485:313:23","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4104,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:23","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"x","nameLocation":"3827:1:23","nodeType":"VariableDeclaration","scope":4104,"src":"3819:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"y","nameLocation":"3838:1:23","nodeType":"VariableDeclaration","scope":4104,"src":"3830:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:23","nodeType":"VariableDeclaration","scope":4104,"src":"3841:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:23"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"result","nameLocation":"3893:6:23","nodeType":"VariableDeclaration","scope":4104,"src":"3885:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:23"},"scope":4770,"src":"3803:4116:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4146,"nodeType":"Block","src":"8161:192:23","statements":[{"assignments":[4120],"declarations":[{"constant":false,"id":4120,"mutability":"mutable","name":"result","nameLocation":"8179:6:23","nodeType":"VariableDeclaration","scope":4146,"src":"8171:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4126,"initialValue":{"arguments":[{"id":4122,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8195:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4123,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8198:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"8201:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4121,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4104,4147],"referencedDeclaration":4104,"src":"8188:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4128,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"8244:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4127,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"8227:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3727_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4131,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8264:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4132,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8267:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4133,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"8270:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4130,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4143,"nodeType":"IfStatement","src":"8223:101:23","trueBody":{"id":4142,"nodeType":"Block","src":"8288:36:23","statements":[{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"8302:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ExpressionStatement","src":"8302:11:23"}]}},{"expression":{"id":4144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"8340:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4118,"id":4145,"nodeType":"Return","src":"8333:13:23"}]},"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"7925:121:23","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4147,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:23","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"x","nameLocation":"8075:1:23","nodeType":"VariableDeclaration","scope":4147,"src":"8067:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"y","nameLocation":"8086:1:23","nodeType":"VariableDeclaration","scope":4147,"src":"8078:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:23","nodeType":"VariableDeclaration","scope":4147,"src":"8089:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:23","nodeType":"VariableDeclaration","scope":4147,"src":"8110:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"Rounding","nameLocations":["8110:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"8110:8:23"},"referencedDeclaration":3727,"src":"8110:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:23"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4147,"src":"8152:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:23"},"scope":4770,"src":"8051:302:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4258,"nodeType":"Block","src":"8644:1585:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"8658:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"IfStatement","src":"8654:45:23","trueBody":{"id":4160,"nodeType":"Block","src":"8666:33:23","statements":[{"expression":{"hexValue":"30","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4154,"id":4159,"nodeType":"Return","src":"8680:8:23"}]}},{"assignments":[4163],"declarations":[{"constant":false,"id":4163,"mutability":"mutable","name":"result","nameLocation":"9386:6:23","nodeType":"VariableDeclaration","scope":4258,"src":"9378:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4172,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"9406:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4165,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4426,4461],"referencedDeclaration":4426,"src":"9401:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:23"},{"id":4257,"nodeType":"UncheckedBlock","src":"9815:408:23","statements":[{"expression":{"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9839:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9849:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"9858:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9862:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4183,"nodeType":"ExpressionStatement","src":"9839:35:23"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9888:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9898:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"9907:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9911:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"9888:35:23"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9937:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9947:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"9956:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9960:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"9937:35:23"},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9986:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9996:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10005:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10009:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"9986:35:23"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10035:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10045:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10058:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"10035:35:23"},{"expression":{"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10084:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10094:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10103:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10107:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4238,"nodeType":"ExpressionStatement","src":"10084:35:23"},{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10133:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10143:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10152:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10156:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"10133:35:23"},{"expression":{"arguments":[{"id":4251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10193:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10201:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"10205:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4250,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"10189:3:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4154,"id":4256,"nodeType":"Return","src":"10182:30:23"}]}]},"documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"8359:223:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:23","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"a","nameLocation":"8609:1:23","nodeType":"VariableDeclaration","scope":4259,"src":"8601:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:23"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4259,"src":"8635:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:23"},"scope":4770,"src":"8587:1642:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4293,"nodeType":"Block","src":"10405:164:23","statements":[{"id":4292,"nodeType":"UncheckedBlock","src":"10415:148:23","statements":[{"assignments":[4271],"declarations":[{"constant":false,"id":4271,"mutability":"mutable","name":"result","nameLocation":"10447:6:23","nodeType":"VariableDeclaration","scope":4292,"src":"10439:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4275,"initialValue":{"arguments":[{"id":4273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"10461:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4259,4294],"referencedDeclaration":4259,"src":"10456:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10484:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4278,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10511:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4277,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"10494:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3727_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10524:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10533:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"10542:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:23","trueExpression":{"hexValue":"31","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4291,"nodeType":"Return","src":"10477:75:23"}]}]},"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"10235:89:23","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:23","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"a","nameLocation":"10351:1:23","nodeType":"VariableDeclaration","scope":4294,"src":"10343:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:23","nodeType":"VariableDeclaration","scope":4294,"src":"10354:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"Rounding","nameLocations":["10354:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"10354:8:23"},"referencedDeclaration":3727,"src":"10354:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:23"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4294,"src":"10396:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:23"},"scope":4770,"src":"10329:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"10760:922:23","statements":[{"assignments":[4303],"declarations":[{"constant":false,"id":4303,"mutability":"mutable","name":"result","nameLocation":"10778:6:23","nodeType":"VariableDeclaration","scope":4425,"src":"10770:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4305,"initialValue":{"hexValue":"30","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:23"},{"id":4422,"nodeType":"UncheckedBlock","src":"10798:855:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"10826:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"10822:99:23","trueBody":{"id":4319,"nodeType":"Block","src":"10844:77:23","statements":[{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"10862:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4314,"nodeType":"ExpressionStatement","src":"10862:13:23"},{"expression":{"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"10893:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4318,"nodeType":"ExpressionStatement","src":"10893:13:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"10938:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"nodeType":"IfStatement","src":"10934:96:23","trueBody":{"id":4334,"nodeType":"Block","src":"10955:75:23","statements":[{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"10973:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ExpressionStatement","src":"10973:12:23"},{"expression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11003:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4333,"nodeType":"ExpressionStatement","src":"11003:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11047:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4350,"nodeType":"IfStatement","src":"11043:96:23","trueBody":{"id":4349,"nodeType":"Block","src":"11064:75:23","statements":[{"expression":{"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11082:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4344,"nodeType":"ExpressionStatement","src":"11082:12:23"},{"expression":{"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11112:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4348,"nodeType":"ExpressionStatement","src":"11112:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11156:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4365,"nodeType":"IfStatement","src":"11152:96:23","trueBody":{"id":4364,"nodeType":"Block","src":"11173:75:23","statements":[{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11191:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4359,"nodeType":"ExpressionStatement","src":"11191:12:23"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11221:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"11221:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11265:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4380,"nodeType":"IfStatement","src":"11261:93:23","trueBody":{"id":4379,"nodeType":"Block","src":"11281:73:23","statements":[{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11299:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"11299:11:23"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11328:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"11328:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11371:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4395,"nodeType":"IfStatement","src":"11367:93:23","trueBody":{"id":4394,"nodeType":"Block","src":"11387:73:23","statements":[{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11405:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"11405:11:23"},{"expression":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11434:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4393,"nodeType":"ExpressionStatement","src":"11434:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11477:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"nodeType":"IfStatement","src":"11473:93:23","trueBody":{"id":4409,"nodeType":"Block","src":"11493:73:23","statements":[{"expression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11511:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"nodeType":"ExpressionStatement","src":"11511:11:23"},{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11540:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ExpressionStatement","src":"11540:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"11583:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"IfStatement","src":"11579:64:23","trueBody":{"id":4420,"nodeType":"Block","src":"11599:44:23","statements":[{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11617:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"11617:11:23"}]}}]},{"expression":{"id":4423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"11669:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4301,"id":4424,"nodeType":"Return","src":"11662:13:23"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"10575:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:23","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"value","nameLocation":"10721:5:23","nodeType":"VariableDeclaration","scope":4426,"src":"10713:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:23"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"10751:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:23"},"scope":4770,"src":"10699:983:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4460,"nodeType":"Block","src":"11915:168:23","statements":[{"id":4459,"nodeType":"UncheckedBlock","src":"11925:152:23","statements":[{"assignments":[4438],"declarations":[{"constant":false,"id":4438,"mutability":"mutable","name":"result","nameLocation":"11957:6:23","nodeType":"VariableDeclaration","scope":4459,"src":"11949:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4442,"initialValue":{"arguments":[{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"11971:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4439,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4426,4461],"referencedDeclaration":4426,"src":"11966:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"11998:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4445,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"12025:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4444,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"12008:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3727_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"12043:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"12052:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:23","trueExpression":{"hexValue":"31","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4436,"id":4458,"nodeType":"Return","src":"11991:75:23"}]}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"11688:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:23","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"value","nameLocation":"11857:5:23","nodeType":"VariableDeclaration","scope":4461,"src":"11849:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:23","nodeType":"VariableDeclaration","scope":4461,"src":"11864:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4431,"nodeType":"UserDefinedTypeName","pathNode":{"id":4430,"name":"Rounding","nameLocations":["11864:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"11864:8:23"},"referencedDeclaration":3727,"src":"11864:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:23"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4461,"src":"11906:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:23"},"scope":4770,"src":"11835:248:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4589,"nodeType":"Block","src":"12276:854:23","statements":[{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"result","nameLocation":"12294:6:23","nodeType":"VariableDeclaration","scope":4589,"src":"12286:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4472,"initialValue":{"hexValue":"30","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:23"},{"id":4586,"nodeType":"UncheckedBlock","src":"12314:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12342:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"nodeType":"IfStatement","src":"12338:103:23","trueBody":{"id":4488,"nodeType":"Block","src":"12361:80:23","statements":[{"expression":{"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4483,"nodeType":"ExpressionStatement","src":"12379:17:23"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12414:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"12414:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12458:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"12454:103:23","trueBody":{"id":4505,"nodeType":"Block","src":"12477:80:23","statements":[{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12495:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"12495:17:23"},{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12530:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"12530:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12574:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"12570:103:23","trueBody":{"id":4522,"nodeType":"Block","src":"12593:80:23","statements":[{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12611:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"nodeType":"ExpressionStatement","src":"12611:17:23"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12646:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"12646:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12690:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4540,"nodeType":"IfStatement","src":"12686:100:23","trueBody":{"id":4539,"nodeType":"Block","src":"12708:78:23","statements":[{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12726:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4534,"nodeType":"ExpressionStatement","src":"12726:16:23"},{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12760:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4538,"nodeType":"ExpressionStatement","src":"12760:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12803:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4557,"nodeType":"IfStatement","src":"12799:100:23","trueBody":{"id":4556,"nodeType":"Block","src":"12821:78:23","statements":[{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12839:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"12839:16:23"},{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12873:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"12873:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12916:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4574,"nodeType":"IfStatement","src":"12912:100:23","trueBody":{"id":4573,"nodeType":"Block","src":"12934:78:23","statements":[{"expression":{"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"12952:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4568,"nodeType":"ExpressionStatement","src":"12952:16:23"},{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"12986:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"12986:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"13029:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4585,"nodeType":"IfStatement","src":"13025:66:23","trueBody":{"id":4584,"nodeType":"Block","src":"13047:44:23","statements":[{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"13065:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"13065:11:23"}]}}]},{"expression":{"id":4587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"13117:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4468,"id":4588,"nodeType":"Return","src":"13110:13:23"}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"12089:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4590,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:23","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"12237:5:23","nodeType":"VariableDeclaration","scope":4590,"src":"12229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:23"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4590,"src":"12267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:23"},"scope":4770,"src":"12214:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4624,"nodeType":"Block","src":"13365:170:23","statements":[{"id":4623,"nodeType":"UncheckedBlock","src":"13375:154:23","statements":[{"assignments":[4602],"declarations":[{"constant":false,"id":4602,"mutability":"mutable","name":"result","nameLocation":"13407:6:23","nodeType":"VariableDeclaration","scope":4623,"src":"13399:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4606,"initialValue":{"arguments":[{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"13422:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4603,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4590,4625],"referencedDeclaration":4590,"src":"13416:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"13449:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4609,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"13476:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4608,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"13459:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3727_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"13495:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"13504:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:23","trueExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4600,"id":4622,"nodeType":"Return","src":"13442:76:23"}]}]},"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"13136:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4625,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:23","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"value","nameLocation":"13307:5:23","nodeType":"VariableDeclaration","scope":4625,"src":"13299:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:23","nodeType":"VariableDeclaration","scope":4625,"src":"13314:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4595,"nodeType":"UserDefinedTypeName","pathNode":{"id":4594,"name":"Rounding","nameLocations":["13314:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"13314:8:23"},"referencedDeclaration":3727,"src":"13314:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:23"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4625,"src":"13356:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:23"},"scope":4770,"src":"13284:251:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"13855:600:23","statements":[{"assignments":[4634],"declarations":[{"constant":false,"id":4634,"mutability":"mutable","name":"result","nameLocation":"13873:6:23","nodeType":"VariableDeclaration","scope":4711,"src":"13865:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4636,"initialValue":{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:23"},{"id":4708,"nodeType":"UncheckedBlock","src":"13893:533:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"13921:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4651,"nodeType":"IfStatement","src":"13917:98:23","trueBody":{"id":4650,"nodeType":"Block","src":"13939:76:23","statements":[{"expression":{"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"13957:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4645,"nodeType":"ExpressionStatement","src":"13957:13:23"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"13988:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"13988:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14032:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4666,"nodeType":"IfStatement","src":"14028:95:23","trueBody":{"id":4665,"nodeType":"Block","src":"14049:74:23","statements":[{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14067:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"14067:12:23"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"14097:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"14097:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14140:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4681,"nodeType":"IfStatement","src":"14136:95:23","trueBody":{"id":4680,"nodeType":"Block","src":"14157:74:23","statements":[{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14175:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4675,"nodeType":"ExpressionStatement","src":"14175:12:23"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"14205:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"14205:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14248:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4696,"nodeType":"IfStatement","src":"14244:95:23","trueBody":{"id":4695,"nodeType":"Block","src":"14265:74:23","statements":[{"expression":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14283:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4690,"nodeType":"ExpressionStatement","src":"14283:12:23"},{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"14313:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"14313:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"IfStatement","src":"14352:64:23","trueBody":{"id":4706,"nodeType":"Block","src":"14372:44:23","statements":[{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"14390:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4705,"nodeType":"ExpressionStatement","src":"14390:11:23"}]}}]},{"expression":{"id":4709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"14442:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4632,"id":4710,"nodeType":"Return","src":"14435:13:23"}]},"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"13541:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:23","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"value","nameLocation":"13816:5:23","nodeType":"VariableDeclaration","scope":4712,"src":"13808:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:23"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"13846:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:23"},"scope":4770,"src":"13792:663:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"14692:177:23","statements":[{"id":4748,"nodeType":"UncheckedBlock","src":"14702:161:23","statements":[{"assignments":[4724],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"result","nameLocation":"14734:6:23","nodeType":"VariableDeclaration","scope":4748,"src":"14726:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4728,"initialValue":{"arguments":[{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"14750:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4725,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4712,4750],"referencedDeclaration":4712,"src":"14743:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"14777:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4731,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"14804:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4730,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"14787:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3727_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"14823:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"14838:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:23","trueExpression":{"hexValue":"31","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4722,"id":4747,"nodeType":"Return","src":"14770:82:23"}]}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"14461:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:23","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"14634:5:23","nodeType":"VariableDeclaration","scope":4750,"src":"14626:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:23","nodeType":"VariableDeclaration","scope":4750,"src":"14641:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4717,"nodeType":"UserDefinedTypeName","pathNode":{"id":4716,"name":"Rounding","nameLocations":["14641:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"14641:8:23"},"referencedDeclaration":3727,"src":"14641:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:23"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"14683:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:23"},"scope":4770,"src":"14610:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4768,"nodeType":"Block","src":"15067:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4761,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"15090:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}],"id":4760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4759,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:23","typeDescriptions":{}}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4758,"id":4767,"nodeType":"Return","src":"15077:31:23"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"14875:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4769,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:23","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:23","nodeType":"VariableDeclaration","scope":4769,"src":"15019:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"},"typeName":{"id":4753,"nodeType":"UserDefinedTypeName","pathNode":{"id":4752,"name":"Rounding","nameLocations":["15019:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"15019:8:23"},"referencedDeclaration":3727,"src":"15019:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3727","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:23"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4769,"src":"15061:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4756,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:23"},"scope":4770,"src":"14993:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4771,"src":"203:14914:23","usedErrors":[3722],"usedEvents":[]}],"src":"103:15015:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6525]},"id":6526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"218:545:24","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6525,"linearizedBaseContracts":[6525],"name":"SafeCast","nameLocation":"772:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4774,"nodeType":"StructuredDocumentation","src":"787:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4780,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:24","nodeType":"ErrorDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"bits","nameLocation":"903:4:24","nodeType":"VariableDeclaration","scope":4780,"src":"897:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4775,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"value","nameLocation":"917:5:24","nodeType":"VariableDeclaration","scope":4780,"src":"909:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:24"},"src":"860:64:24"},{"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"930:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4785,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:24","nodeType":"ErrorDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"value","nameLocation":"1051:5:24","nodeType":"VariableDeclaration","scope":4785,"src":"1044:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4782,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:24"},"src":"1010:48:24"},{"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"1064:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4792,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:24","nodeType":"ErrorDefinition","parameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"bits","nameLocation":"1178:4:24","nodeType":"VariableDeclaration","scope":4792,"src":"1172:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4787,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"value","nameLocation":"1191:5:24","nodeType":"VariableDeclaration","scope":4792,"src":"1184:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4789,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:24"},"src":"1136:62:24"},{"documentation":{"id":4793,"nodeType":"StructuredDocumentation","src":"1204:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4797,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:24","nodeType":"ErrorDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"value","nameLocation":"1326:5:24","nodeType":"VariableDeclaration","scope":4797,"src":"1318:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:24"},"src":"1284:49:24"},{"body":{"id":4824,"nodeType":"Block","src":"1690:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"1704:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4807,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:24","memberName":"max","nodeType":"MemberAccess","src":"1712:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4818,"nodeType":"IfStatement","src":"1700:105:24","trueBody":{"id":4817,"nodeType":"Block","src":"1731:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"1788:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"1752:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4816,"nodeType":"RevertStatement","src":"1745:49:24"}]}},{"expression":{"arguments":[{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"1829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4819,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:24","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4804,"id":4823,"nodeType":"Return","src":"1814:21:24"}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"1339:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:24","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"value","nameLocation":"1651:5:24","nodeType":"VariableDeclaration","scope":4825,"src":"1643:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:24"},"returnParameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"1681:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4802,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:24"},"scope":6525,"src":"1624:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4852,"nodeType":"Block","src":"2199:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"2213:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4835,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:24","memberName":"max","nodeType":"MemberAccess","src":"2221:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4846,"nodeType":"IfStatement","src":"2209:105:24","trueBody":{"id":4845,"nodeType":"Block","src":"2240:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"2297:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2261:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4844,"nodeType":"RevertStatement","src":"2254:49:24"}]}},{"expression":{"arguments":[{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"2338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4847,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:24","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4832,"id":4851,"nodeType":"Return","src":"2323:21:24"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"1848:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:24","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"2160:5:24","nodeType":"VariableDeclaration","scope":4853,"src":"2152:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:24"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4853,"src":"2190:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4830,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:24"},"scope":6525,"src":"2133:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4880,"nodeType":"Block","src":"2708:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2722:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4863,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:24","memberName":"max","nodeType":"MemberAccess","src":"2730:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4874,"nodeType":"IfStatement","src":"2718:105:24","trueBody":{"id":4873,"nodeType":"Block","src":"2749:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2806:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"2770:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4872,"nodeType":"RevertStatement","src":"2763:49:24"}]}},{"expression":{"arguments":[{"id":4877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4875,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:24","typeDescriptions":{}}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4860,"id":4879,"nodeType":"Return","src":"2832:21:24"}]},"documentation":{"id":4854,"nodeType":"StructuredDocumentation","src":"2357:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:24","nodeType":"FunctionDefinition","parameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"value","nameLocation":"2669:5:24","nodeType":"VariableDeclaration","scope":4881,"src":"2661:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:24"},"returnParameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"2699:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4858,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:24"},"scope":6525,"src":"2642:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4908,"nodeType":"Block","src":"3217:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"3231:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4891,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:24","memberName":"max","nodeType":"MemberAccess","src":"3239:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4902,"nodeType":"IfStatement","src":"3227:105:24","trueBody":{"id":4901,"nodeType":"Block","src":"3258:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"3315:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3279:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4900,"nodeType":"RevertStatement","src":"3272:49:24"}]}},{"expression":{"arguments":[{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"3356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4903,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:24","typeDescriptions":{}}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4888,"id":4907,"nodeType":"Return","src":"3341:21:24"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"2866:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:24","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"value","nameLocation":"3178:5:24","nodeType":"VariableDeclaration","scope":4909,"src":"3170:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:24"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4909,"src":"3208:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4886,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:24"},"scope":6525,"src":"3151:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4936,"nodeType":"Block","src":"3726:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"3740:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4919,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:24","memberName":"max","nodeType":"MemberAccess","src":"3748:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4930,"nodeType":"IfStatement","src":"3736:105:24","trueBody":{"id":4929,"nodeType":"Block","src":"3767:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"3824:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3788:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"RevertStatement","src":"3781:49:24"}]}},{"expression":{"arguments":[{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"3865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4931,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:24","typeDescriptions":{}}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4916,"id":4935,"nodeType":"Return","src":"3850:21:24"}]},"documentation":{"id":4910,"nodeType":"StructuredDocumentation","src":"3375:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:24","nodeType":"FunctionDefinition","parameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"value","nameLocation":"3687:5:24","nodeType":"VariableDeclaration","scope":4937,"src":"3679:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:24"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4937,"src":"3717:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4914,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:24"},"scope":6525,"src":"3660:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4964,"nodeType":"Block","src":"4235:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"4249:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4947,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:24","memberName":"max","nodeType":"MemberAccess","src":"4257:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4958,"nodeType":"IfStatement","src":"4245:105:24","trueBody":{"id":4957,"nodeType":"Block","src":"4276:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"4333:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"4297:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4956,"nodeType":"RevertStatement","src":"4290:49:24"}]}},{"expression":{"arguments":[{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"4374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4959,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:24","typeDescriptions":{}}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4944,"id":4963,"nodeType":"Return","src":"4359:21:24"}]},"documentation":{"id":4938,"nodeType":"StructuredDocumentation","src":"3884:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:24","nodeType":"FunctionDefinition","parameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"value","nameLocation":"4196:5:24","nodeType":"VariableDeclaration","scope":4965,"src":"4188:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:24"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4965,"src":"4226:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4942,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:24"},"scope":6525,"src":"4169:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"4744:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"4758:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4975,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:24","memberName":"max","nodeType":"MemberAccess","src":"4766:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4986,"nodeType":"IfStatement","src":"4754:105:24","trueBody":{"id":4985,"nodeType":"Block","src":"4785:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"4842:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"4806:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4984,"nodeType":"RevertStatement","src":"4799:49:24"}]}},{"expression":{"arguments":[{"id":4989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"4883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4987,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:24","typeDescriptions":{}}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4972,"id":4991,"nodeType":"Return","src":"4868:21:24"}]},"documentation":{"id":4966,"nodeType":"StructuredDocumentation","src":"4393:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:24","nodeType":"FunctionDefinition","parameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"value","nameLocation":"4705:5:24","nodeType":"VariableDeclaration","scope":4993,"src":"4697:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:24"},"returnParameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"4735:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4970,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:24"},"scope":6525,"src":"4678:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5020,"nodeType":"Block","src":"5253:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"5267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5003,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:24","memberName":"max","nodeType":"MemberAccess","src":"5275:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5014,"nodeType":"IfStatement","src":"5263:105:24","trueBody":{"id":5013,"nodeType":"Block","src":"5294:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"5351:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"5315:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"RevertStatement","src":"5308:49:24"}]}},{"expression":{"arguments":[{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"5392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5015,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:24","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5000,"id":5019,"nodeType":"Return","src":"5377:21:24"}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"4902:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:24","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"value","nameLocation":"5214:5:24","nodeType":"VariableDeclaration","scope":5021,"src":"5206:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:24"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"5244:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4998,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:24"},"scope":6525,"src":"5187:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5048,"nodeType":"Block","src":"5762:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5776:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5031,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:24","memberName":"max","nodeType":"MemberAccess","src":"5784:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"5772:105:24","trueBody":{"id":5041,"nodeType":"Block","src":"5803:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5860:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"5824:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5040,"nodeType":"RevertStatement","src":"5817:49:24"}]}},{"expression":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5043,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:24","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5028,"id":5047,"nodeType":"Return","src":"5886:21:24"}]},"documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"5411:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:24","nodeType":"FunctionDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"value","nameLocation":"5723:5:24","nodeType":"VariableDeclaration","scope":5049,"src":"5715:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:24"},"returnParameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"5753:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5026,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:24"},"scope":6525,"src":"5696:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5076,"nodeType":"Block","src":"6271:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5059,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:24","memberName":"max","nodeType":"MemberAccess","src":"6293:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"nodeType":"IfStatement","src":"6281:105:24","trueBody":{"id":5069,"nodeType":"Block","src":"6312:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"6333:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"RevertStatement","src":"6326:49:24"}]}},{"expression":{"arguments":[{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5071,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:24","typeDescriptions":{}}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5056,"id":5075,"nodeType":"Return","src":"6395:21:24"}]},"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"5920:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:24","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"value","nameLocation":"6232:5:24","nodeType":"VariableDeclaration","scope":5077,"src":"6224:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:24"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5077,"src":"6262:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5054,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:24"},"scope":6525,"src":"6205:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5104,"nodeType":"Block","src":"6780:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"6794:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5087,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:24","memberName":"max","nodeType":"MemberAccess","src":"6802:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5098,"nodeType":"IfStatement","src":"6790:105:24","trueBody":{"id":5097,"nodeType":"Block","src":"6821:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"6878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"6842:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5096,"nodeType":"RevertStatement","src":"6835:49:24"}]}},{"expression":{"arguments":[{"id":5101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"6919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5099,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:24","typeDescriptions":{}}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5084,"id":5103,"nodeType":"Return","src":"6904:21:24"}]},"documentation":{"id":5078,"nodeType":"StructuredDocumentation","src":"6429:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:24","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"value","nameLocation":"6741:5:24","nodeType":"VariableDeclaration","scope":5105,"src":"6733:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:24"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5105,"src":"6771:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5082,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:24"},"scope":6525,"src":"6714:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5132,"nodeType":"Block","src":"7289:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7303:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5115,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:24","memberName":"max","nodeType":"MemberAccess","src":"7311:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"7299:105:24","trueBody":{"id":5125,"nodeType":"Block","src":"7330:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7387:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"7351:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5124,"nodeType":"RevertStatement","src":"7344:49:24"}]}},{"expression":{"arguments":[{"id":5129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5127,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:24","typeDescriptions":{}}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5112,"id":5131,"nodeType":"Return","src":"7413:21:24"}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"6938:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:24","nodeType":"FunctionDefinition","parameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"value","nameLocation":"7250:5:24","nodeType":"VariableDeclaration","scope":5133,"src":"7242:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:24"},"returnParameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5133,"src":"7280:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5110,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:24"},"scope":6525,"src":"7223:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5160,"nodeType":"Block","src":"7798:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"7812:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5143,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:24","memberName":"max","nodeType":"MemberAccess","src":"7820:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5154,"nodeType":"IfStatement","src":"7808:105:24","trueBody":{"id":5153,"nodeType":"Block","src":"7839:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"7896:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"7860:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5152,"nodeType":"RevertStatement","src":"7853:49:24"}]}},{"expression":{"arguments":[{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"7937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5155,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:24","typeDescriptions":{}}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5140,"id":5159,"nodeType":"Return","src":"7922:21:24"}]},"documentation":{"id":5134,"nodeType":"StructuredDocumentation","src":"7447:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:24","nodeType":"FunctionDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"value","nameLocation":"7759:5:24","nodeType":"VariableDeclaration","scope":5161,"src":"7751:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:24"},"returnParameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5161,"src":"7789:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5138,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:24"},"scope":6525,"src":"7732:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"8307:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"8321:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5171,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:24","memberName":"max","nodeType":"MemberAccess","src":"8329:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5182,"nodeType":"IfStatement","src":"8317:105:24","trueBody":{"id":5181,"nodeType":"Block","src":"8348:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"8405:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"8369:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5180,"nodeType":"RevertStatement","src":"8362:49:24"}]}},{"expression":{"arguments":[{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"8446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5183,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:24","typeDescriptions":{}}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5168,"id":5187,"nodeType":"Return","src":"8431:21:24"}]},"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"7956:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:24","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"value","nameLocation":"8268:5:24","nodeType":"VariableDeclaration","scope":5189,"src":"8260:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:24"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"8298:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5166,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:24"},"scope":6525,"src":"8241:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5216,"nodeType":"Block","src":"8816:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5199,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:24","memberName":"max","nodeType":"MemberAccess","src":"8838:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"8826:105:24","trueBody":{"id":5209,"nodeType":"Block","src":"8857:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8914:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"8878:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5208,"nodeType":"RevertStatement","src":"8871:49:24"}]}},{"expression":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5211,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:24","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5196,"id":5215,"nodeType":"Return","src":"8940:21:24"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"8465:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:24","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"8777:5:24","nodeType":"VariableDeclaration","scope":5217,"src":"8769:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:24"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5217,"src":"8807:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5194,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:24"},"scope":6525,"src":"8750:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5244,"nodeType":"Block","src":"9325:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"9339:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5227,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:24","memberName":"max","nodeType":"MemberAccess","src":"9347:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5238,"nodeType":"IfStatement","src":"9335:105:24","trueBody":{"id":5237,"nodeType":"Block","src":"9366:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"9423:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"9387:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5236,"nodeType":"RevertStatement","src":"9380:49:24"}]}},{"expression":{"arguments":[{"id":5241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"9464:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5239,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:24","typeDescriptions":{}}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5224,"id":5243,"nodeType":"Return","src":"9449:21:24"}]},"documentation":{"id":5218,"nodeType":"StructuredDocumentation","src":"8974:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:24","nodeType":"FunctionDefinition","parameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"value","nameLocation":"9286:5:24","nodeType":"VariableDeclaration","scope":5245,"src":"9278:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:24"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5245,"src":"9316:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5222,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:24"},"scope":6525,"src":"9259:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5272,"nodeType":"Block","src":"9834:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"9848:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5255,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:24","memberName":"max","nodeType":"MemberAccess","src":"9856:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5266,"nodeType":"IfStatement","src":"9844:105:24","trueBody":{"id":5265,"nodeType":"Block","src":"9875:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"9932:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"9896:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5264,"nodeType":"RevertStatement","src":"9889:49:24"}]}},{"expression":{"arguments":[{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"9973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5267,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:24","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5252,"id":5271,"nodeType":"Return","src":"9958:21:24"}]},"documentation":{"id":5246,"nodeType":"StructuredDocumentation","src":"9483:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:24","nodeType":"FunctionDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"value","nameLocation":"9795:5:24","nodeType":"VariableDeclaration","scope":5273,"src":"9787:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:24"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5273,"src":"9825:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5250,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:24"},"scope":6525,"src":"9768:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5300,"nodeType":"Block","src":"10343:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"10357:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5283,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:24","memberName":"max","nodeType":"MemberAccess","src":"10365:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5294,"nodeType":"IfStatement","src":"10353:105:24","trueBody":{"id":5293,"nodeType":"Block","src":"10384:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"10441:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"10405:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"RevertStatement","src":"10398:49:24"}]}},{"expression":{"arguments":[{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"10482:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5295,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:24","typeDescriptions":{}}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5280,"id":5299,"nodeType":"Return","src":"10467:21:24"}]},"documentation":{"id":5274,"nodeType":"StructuredDocumentation","src":"9992:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:24","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"value","nameLocation":"10304:5:24","nodeType":"VariableDeclaration","scope":5301,"src":"10296:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5275,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:24"},"returnParameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5301,"src":"10334:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5278,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:24"},"scope":6525,"src":"10277:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"10852:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"10866:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5311,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:24","memberName":"max","nodeType":"MemberAccess","src":"10874:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5322,"nodeType":"IfStatement","src":"10862:105:24","trueBody":{"id":5321,"nodeType":"Block","src":"10893:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"10950:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"10914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5320,"nodeType":"RevertStatement","src":"10907:49:24"}]}},{"expression":{"arguments":[{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"10991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5323,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:24","typeDescriptions":{}}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5308,"id":5327,"nodeType":"Return","src":"10976:21:24"}]},"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"10501:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:24","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"value","nameLocation":"10813:5:24","nodeType":"VariableDeclaration","scope":5329,"src":"10805:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:24"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"10843:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5306,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:24"},"scope":6525,"src":"10786:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"11355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"11369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5339,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5338,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:24","memberName":"max","nodeType":"MemberAccess","src":"11377:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5350,"nodeType":"IfStatement","src":"11365:103:24","trueBody":{"id":5349,"nodeType":"Block","src":"11395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"11451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"RevertStatement","src":"11409:48:24"}]}},{"expression":{"arguments":[{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"11491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5351,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:24","typeDescriptions":{}}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5336,"id":5355,"nodeType":"Return","src":"11477:20:24"}]},"documentation":{"id":5330,"nodeType":"StructuredDocumentation","src":"11010:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"value","nameLocation":"11317:5:24","nodeType":"VariableDeclaration","scope":5357,"src":"11309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5331,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:24"},"returnParameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5357,"src":"11347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5334,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:24"},"scope":6525,"src":"11291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5384,"nodeType":"Block","src":"11855:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5367,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:24","memberName":"max","nodeType":"MemberAccess","src":"11877:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"nodeType":"IfStatement","src":"11865:103:24","trueBody":{"id":5377,"nodeType":"Block","src":"11895:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11951:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11916:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"RevertStatement","src":"11909:48:24"}]}},{"expression":{"arguments":[{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5379,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:24","typeDescriptions":{}}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5364,"id":5383,"nodeType":"Return","src":"11977:20:24"}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"11510:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:24","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"11817:5:24","nodeType":"VariableDeclaration","scope":5385,"src":"11809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:24"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5385,"src":"11847:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5362,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:24"},"scope":6525,"src":"11791:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"12355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"12369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5395,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:24","memberName":"max","nodeType":"MemberAccess","src":"12377:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5406,"nodeType":"IfStatement","src":"12365:103:24","trueBody":{"id":5405,"nodeType":"Block","src":"12395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"12451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"12416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5404,"nodeType":"RevertStatement","src":"12409:48:24"}]}},{"expression":{"arguments":[{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"12491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5407,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:24","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5392,"id":5411,"nodeType":"Return","src":"12477:20:24"}]},"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"12010:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"value","nameLocation":"12317:5:24","nodeType":"VariableDeclaration","scope":5413,"src":"12309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:24"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"12347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5390,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:24"},"scope":6525,"src":"12291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5440,"nodeType":"Block","src":"12855:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"12869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5423,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5422,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:24","memberName":"max","nodeType":"MemberAccess","src":"12877:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"IfStatement","src":"12865:103:24","trueBody":{"id":5433,"nodeType":"Block","src":"12895:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"12951:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"12916:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"RevertStatement","src":"12909:48:24"}]}},{"expression":{"arguments":[{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"12991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5435,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:24","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5420,"id":5439,"nodeType":"Return","src":"12977:20:24"}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"12510:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:24","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"value","nameLocation":"12817:5:24","nodeType":"VariableDeclaration","scope":5441,"src":"12809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:24"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5441,"src":"12847:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5418,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:24"},"scope":6525,"src":"12791:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5468,"nodeType":"Block","src":"13355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5451,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:24","memberName":"max","nodeType":"MemberAccess","src":"13377:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"nodeType":"IfStatement","src":"13365:103:24","trueBody":{"id":5461,"nodeType":"Block","src":"13395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"13416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5460,"nodeType":"RevertStatement","src":"13409:48:24"}]}},{"expression":{"arguments":[{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5463,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:24","typeDescriptions":{}}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5448,"id":5467,"nodeType":"Return","src":"13477:20:24"}]},"documentation":{"id":5442,"nodeType":"StructuredDocumentation","src":"13010:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"value","nameLocation":"13317:5:24","nodeType":"VariableDeclaration","scope":5469,"src":"13309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:24"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"13347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5446,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:24"},"scope":6525,"src":"13291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5496,"nodeType":"Block","src":"13855:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"13869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5479,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:24","memberName":"max","nodeType":"MemberAccess","src":"13877:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5490,"nodeType":"IfStatement","src":"13865:103:24","trueBody":{"id":5489,"nodeType":"Block","src":"13895:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"13951:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"13916:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5488,"nodeType":"RevertStatement","src":"13909:48:24"}]}},{"expression":{"arguments":[{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"13991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5491,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:24","typeDescriptions":{}}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5476,"id":5495,"nodeType":"Return","src":"13977:20:24"}]},"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"13510:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5497,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:24","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"value","nameLocation":"13817:5:24","nodeType":"VariableDeclaration","scope":5497,"src":"13809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:24"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5497,"src":"13847:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5474,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:24"},"scope":6525,"src":"13791:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5524,"nodeType":"Block","src":"14355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"14369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5507,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5506,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:24","memberName":"max","nodeType":"MemberAccess","src":"14377:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5518,"nodeType":"IfStatement","src":"14365:103:24","trueBody":{"id":5517,"nodeType":"Block","src":"14395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"14451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"14416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5516,"nodeType":"RevertStatement","src":"14409:48:24"}]}},{"expression":{"arguments":[{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"14491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5519,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:24","typeDescriptions":{}}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5504,"id":5523,"nodeType":"Return","src":"14477:20:24"}]},"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"14010:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"value","nameLocation":"14317:5:24","nodeType":"VariableDeclaration","scope":5525,"src":"14309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:24"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5525,"src":"14347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5502,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:24"},"scope":6525,"src":"14291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"14855:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5535,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:24","memberName":"max","nodeType":"MemberAccess","src":"14877:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5546,"nodeType":"IfStatement","src":"14865:103:24","trueBody":{"id":5545,"nodeType":"Block","src":"14895:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14951:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"14916:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5544,"nodeType":"RevertStatement","src":"14909:48:24"}]}},{"expression":{"arguments":[{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5547,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:24","typeDescriptions":{}}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5532,"id":5551,"nodeType":"Return","src":"14977:20:24"}]},"documentation":{"id":5526,"nodeType":"StructuredDocumentation","src":"14510:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:24","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"value","nameLocation":"14817:5:24","nodeType":"VariableDeclaration","scope":5553,"src":"14809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:24"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"14847:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5530,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:24"},"scope":6525,"src":"14791:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"15355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"15369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5563,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:24","memberName":"max","nodeType":"MemberAccess","src":"15377:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"15365:103:24","trueBody":{"id":5573,"nodeType":"Block","src":"15395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"15451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"15416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5572,"nodeType":"RevertStatement","src":"15409:48:24"}]}},{"expression":{"arguments":[{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"15491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5575,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:24","typeDescriptions":{}}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5560,"id":5579,"nodeType":"Return","src":"15477:20:24"}]},"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"15010:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"value","nameLocation":"15317:5:24","nodeType":"VariableDeclaration","scope":5581,"src":"15309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:24"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"15347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5558,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:24"},"scope":6525,"src":"15291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5608,"nodeType":"Block","src":"15855:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"15869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5591,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5590,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:24","memberName":"max","nodeType":"MemberAccess","src":"15877:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5602,"nodeType":"IfStatement","src":"15865:103:24","trueBody":{"id":5601,"nodeType":"Block","src":"15895:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"15951:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"15916:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5600,"nodeType":"RevertStatement","src":"15909:48:24"}]}},{"expression":{"arguments":[{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"15991:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5603,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:24","typeDescriptions":{}}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5588,"id":5607,"nodeType":"Return","src":"15977:20:24"}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"15510:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:24","nodeType":"FunctionDefinition","parameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"value","nameLocation":"15817:5:24","nodeType":"VariableDeclaration","scope":5609,"src":"15809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:24"},"returnParameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5609,"src":"15847:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5586,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:24"},"scope":6525,"src":"15791:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5636,"nodeType":"Block","src":"16355:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"16369:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5619,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5618,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:24","memberName":"max","nodeType":"MemberAccess","src":"16377:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5630,"nodeType":"IfStatement","src":"16365:103:24","trueBody":{"id":5629,"nodeType":"Block","src":"16395:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"16451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"16416:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5628,"nodeType":"RevertStatement","src":"16409:48:24"}]}},{"expression":{"arguments":[{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"16491:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5631,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:24","typeDescriptions":{}}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5616,"id":5635,"nodeType":"Return","src":"16477:20:24"}]},"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"16010:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5637,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:24","nodeType":"FunctionDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"value","nameLocation":"16317:5:24","nodeType":"VariableDeclaration","scope":5637,"src":"16309:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:24"},"returnParameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5637,"src":"16347:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5614,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:24"},"scope":6525,"src":"16291:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5664,"nodeType":"Block","src":"16849:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"16863:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5647,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5646,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:24","memberName":"max","nodeType":"MemberAccess","src":"16871:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"nodeType":"IfStatement","src":"16859:101:24","trueBody":{"id":5657,"nodeType":"Block","src":"16888:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"16943:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"16909:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"RevertStatement","src":"16902:47:24"}]}},{"expression":{"arguments":[{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"16982:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5659,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:24","typeDescriptions":{}}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5644,"id":5663,"nodeType":"Return","src":"16969:19:24"}]},"documentation":{"id":5638,"nodeType":"StructuredDocumentation","src":"16510:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5665,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:24","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"value","nameLocation":"16812:5:24","nodeType":"VariableDeclaration","scope":5665,"src":"16804:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:24"},"returnParameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5665,"src":"16842:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5642,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:24"},"scope":6525,"src":"16787:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5687,"nodeType":"Block","src":"17231:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"17245:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5681,"nodeType":"IfStatement","src":"17241:81:24","trueBody":{"id":5680,"nodeType":"Block","src":"17256:66:24","statements":[{"errorCall":{"arguments":[{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"17305:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5676,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17277:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5679,"nodeType":"RevertStatement","src":"17270:41:24"}]}},{"expression":{"arguments":[{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"17346:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:24","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5672,"id":5686,"nodeType":"Return","src":"17331:21:24"}]},"documentation":{"id":5666,"nodeType":"StructuredDocumentation","src":"17001:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:24","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"value","nameLocation":"17192:5:24","nodeType":"VariableDeclaration","scope":5688,"src":"17185:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5667,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:24"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5688,"src":"17222:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:24"},"scope":6525,"src":"17166:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5713,"nodeType":"Block","src":"17756:150:24","statements":[{"expression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"17766:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"17786:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5697,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:24","typeDescriptions":{}}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5702,"nodeType":"ExpressionStatement","src":"17766:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"17806:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"17820:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5712,"nodeType":"IfStatement","src":"17802:98:24","trueBody":{"id":5711,"nodeType":"Block","src":"17827:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"17883:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"17848:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"RevertStatement","src":"17841:48:24"}]}}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"17365:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:24","nodeType":"FunctionDefinition","parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"value","nameLocation":"17707:5:24","nodeType":"VariableDeclaration","scope":5714,"src":"17700:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5690,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:24"},"returnParameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:24","nodeType":"VariableDeclaration","scope":5714,"src":"17737:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5693,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:24"},"scope":6525,"src":"17682:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"18303:150:24","statements":[{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"18313:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"18333:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5723,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:24","typeDescriptions":{}}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5728,"nodeType":"ExpressionStatement","src":"18313:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"18353:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"18367:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5738,"nodeType":"IfStatement","src":"18349:98:24","trueBody":{"id":5737,"nodeType":"Block","src":"18374:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"18430:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"18395:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5736,"nodeType":"RevertStatement","src":"18388:48:24"}]}}]},"documentation":{"id":5715,"nodeType":"StructuredDocumentation","src":"17912:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:24","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"value","nameLocation":"18254:5:24","nodeType":"VariableDeclaration","scope":5740,"src":"18247:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5716,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:24"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:24","nodeType":"VariableDeclaration","scope":5740,"src":"18284:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5719,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:24"},"scope":6525,"src":"18229:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5765,"nodeType":"Block","src":"18850:150:24","statements":[{"expression":{"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"18860:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"18880:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5749,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:24","typeDescriptions":{}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5754,"nodeType":"ExpressionStatement","src":"18860:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"18900:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"18914:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5764,"nodeType":"IfStatement","src":"18896:98:24","trueBody":{"id":5763,"nodeType":"Block","src":"18921:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"18977:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"18942:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5762,"nodeType":"RevertStatement","src":"18935:48:24"}]}}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"18459:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:24","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"value","nameLocation":"18801:5:24","nodeType":"VariableDeclaration","scope":5766,"src":"18794:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5742,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:24"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:24","nodeType":"VariableDeclaration","scope":5766,"src":"18831:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5745,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:24"},"scope":6525,"src":"18776:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"19397:150:24","statements":[{"expression":{"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"19407:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"19427:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5775,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:24","typeDescriptions":{}}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5780,"nodeType":"ExpressionStatement","src":"19407:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"19447:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"19461:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5790,"nodeType":"IfStatement","src":"19443:98:24","trueBody":{"id":5789,"nodeType":"Block","src":"19468:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"19524:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"19489:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5788,"nodeType":"RevertStatement","src":"19482:48:24"}]}}]},"documentation":{"id":5767,"nodeType":"StructuredDocumentation","src":"19006:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:24","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"value","nameLocation":"19348:5:24","nodeType":"VariableDeclaration","scope":5792,"src":"19341:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5768,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:24"},"returnParameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:24","nodeType":"VariableDeclaration","scope":5792,"src":"19378:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5771,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:24"},"scope":6525,"src":"19323:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5817,"nodeType":"Block","src":"19944:150:24","statements":[{"expression":{"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"19954:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"19974:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5801,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:24","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5806,"nodeType":"ExpressionStatement","src":"19954:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"19994:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"20008:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5816,"nodeType":"IfStatement","src":"19990:98:24","trueBody":{"id":5815,"nodeType":"Block","src":"20015:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"20071:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"20036:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5814,"nodeType":"RevertStatement","src":"20029:48:24"}]}}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"19553:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:24","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"19895:5:24","nodeType":"VariableDeclaration","scope":5818,"src":"19888:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5794,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:24"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:24","nodeType":"VariableDeclaration","scope":5818,"src":"19925:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5797,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:24"},"scope":6525,"src":"19870:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5843,"nodeType":"Block","src":"20491:150:24","statements":[{"expression":{"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"20501:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"20521:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5827,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:24","typeDescriptions":{}}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5832,"nodeType":"ExpressionStatement","src":"20501:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"20541:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"20555:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5842,"nodeType":"IfStatement","src":"20537:98:24","trueBody":{"id":5841,"nodeType":"Block","src":"20562:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"20618:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"20583:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5840,"nodeType":"RevertStatement","src":"20576:48:24"}]}}]},"documentation":{"id":5819,"nodeType":"StructuredDocumentation","src":"20100:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:24","nodeType":"FunctionDefinition","parameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"value","nameLocation":"20442:5:24","nodeType":"VariableDeclaration","scope":5844,"src":"20435:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5820,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:24"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:24","nodeType":"VariableDeclaration","scope":5844,"src":"20472:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5823,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:24"},"scope":6525,"src":"20417:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5869,"nodeType":"Block","src":"21038:150:24","statements":[{"expression":{"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"21048:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"21068:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5853,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:24","typeDescriptions":{}}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5858,"nodeType":"ExpressionStatement","src":"21048:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"21088:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"21102:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"21084:98:24","trueBody":{"id":5867,"nodeType":"Block","src":"21109:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"21165:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21130:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5866,"nodeType":"RevertStatement","src":"21123:48:24"}]}}]},"documentation":{"id":5845,"nodeType":"StructuredDocumentation","src":"20647:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:24","nodeType":"FunctionDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"value","nameLocation":"20989:5:24","nodeType":"VariableDeclaration","scope":5870,"src":"20982:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5846,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:24"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:24","nodeType":"VariableDeclaration","scope":5870,"src":"21019:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5849,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:24"},"scope":6525,"src":"20964:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5895,"nodeType":"Block","src":"21585:150:24","statements":[{"expression":{"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"21595:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"21615:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5879,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:24","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5884,"nodeType":"ExpressionStatement","src":"21595:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"21635:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"21649:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5894,"nodeType":"IfStatement","src":"21631:98:24","trueBody":{"id":5893,"nodeType":"Block","src":"21656:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"21712:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21677:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5892,"nodeType":"RevertStatement","src":"21670:48:24"}]}}]},"documentation":{"id":5871,"nodeType":"StructuredDocumentation","src":"21194:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:24","nodeType":"FunctionDefinition","parameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"value","nameLocation":"21536:5:24","nodeType":"VariableDeclaration","scope":5896,"src":"21529:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5872,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:24"},"returnParameters":{"id":5877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5876,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:24","nodeType":"VariableDeclaration","scope":5896,"src":"21566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5875,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:24"},"scope":6525,"src":"21511:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5921,"nodeType":"Block","src":"22132:150:24","statements":[{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"22142:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"22162:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5905,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:24","typeDescriptions":{}}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5910,"nodeType":"ExpressionStatement","src":"22142:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"22182:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"22196:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"nodeType":"IfStatement","src":"22178:98:24","trueBody":{"id":5919,"nodeType":"Block","src":"22203:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"22259:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"22224:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5918,"nodeType":"RevertStatement","src":"22217:48:24"}]}}]},"documentation":{"id":5897,"nodeType":"StructuredDocumentation","src":"21741:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:24","nodeType":"FunctionDefinition","parameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"value","nameLocation":"22083:5:24","nodeType":"VariableDeclaration","scope":5922,"src":"22076:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5898,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:24"},"returnParameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:24","nodeType":"VariableDeclaration","scope":5922,"src":"22113:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5901,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:24"},"scope":6525,"src":"22058:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5947,"nodeType":"Block","src":"22679:150:24","statements":[{"expression":{"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"22689:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"22709:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5931,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:24","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5936,"nodeType":"ExpressionStatement","src":"22689:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"22729:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"22743:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"22725:98:24","trueBody":{"id":5945,"nodeType":"Block","src":"22750:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"22806:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"22771:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5944,"nodeType":"RevertStatement","src":"22764:48:24"}]}}]},"documentation":{"id":5923,"nodeType":"StructuredDocumentation","src":"22288:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:24","nodeType":"FunctionDefinition","parameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"value","nameLocation":"22630:5:24","nodeType":"VariableDeclaration","scope":5948,"src":"22623:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5924,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:24"},"returnParameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:24","nodeType":"VariableDeclaration","scope":5948,"src":"22660:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5927,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:24"},"scope":6525,"src":"22605:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5973,"nodeType":"Block","src":"23226:150:24","statements":[{"expression":{"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"23236:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"23256:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5957,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:24","typeDescriptions":{}}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5962,"nodeType":"ExpressionStatement","src":"23236:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"23276:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"23290:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"nodeType":"IfStatement","src":"23272:98:24","trueBody":{"id":5971,"nodeType":"Block","src":"23297:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"23353:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"23318:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5970,"nodeType":"RevertStatement","src":"23311:48:24"}]}}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"22835:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:24","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"value","nameLocation":"23177:5:24","nodeType":"VariableDeclaration","scope":5974,"src":"23170:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5950,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:24"},"returnParameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:24","nodeType":"VariableDeclaration","scope":5974,"src":"23207:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5953,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:24"},"scope":6525,"src":"23152:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"23773:150:24","statements":[{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"23783:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23803:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5983,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:24","typeDescriptions":{}}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5988,"nodeType":"ExpressionStatement","src":"23783:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"23823:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23837:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5998,"nodeType":"IfStatement","src":"23819:98:24","trueBody":{"id":5997,"nodeType":"Block","src":"23844:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"23900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"23865:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5996,"nodeType":"RevertStatement","src":"23858:48:24"}]}}]},"documentation":{"id":5975,"nodeType":"StructuredDocumentation","src":"23382:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:24","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"value","nameLocation":"23724:5:24","nodeType":"VariableDeclaration","scope":6000,"src":"23717:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5976,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:24"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:24","nodeType":"VariableDeclaration","scope":6000,"src":"23754:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5979,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:24"},"scope":6525,"src":"23699:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6025,"nodeType":"Block","src":"24320:150:24","statements":[{"expression":{"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"24330:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"24350:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6009,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:24","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6014,"nodeType":"ExpressionStatement","src":"24330:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"24370:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"24384:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"24366:98:24","trueBody":{"id":6023,"nodeType":"Block","src":"24391:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"24447:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"24412:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"24405:48:24"}]}}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"23929:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:24","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"value","nameLocation":"24271:5:24","nodeType":"VariableDeclaration","scope":6026,"src":"24264:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6002,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:24"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:24","nodeType":"VariableDeclaration","scope":6026,"src":"24301:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6005,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:24"},"scope":6525,"src":"24246:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6051,"nodeType":"Block","src":"24867:150:24","statements":[{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"24877:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"24897:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6035,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:24","typeDescriptions":{}}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6040,"nodeType":"ExpressionStatement","src":"24877:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"24917:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"24931:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6050,"nodeType":"IfStatement","src":"24913:98:24","trueBody":{"id":6049,"nodeType":"Block","src":"24938:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"24994:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"24959:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6048,"nodeType":"RevertStatement","src":"24952:48:24"}]}}]},"documentation":{"id":6027,"nodeType":"StructuredDocumentation","src":"24476:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:24","nodeType":"FunctionDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"value","nameLocation":"24818:5:24","nodeType":"VariableDeclaration","scope":6052,"src":"24811:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6028,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:24"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:24","nodeType":"VariableDeclaration","scope":6052,"src":"24848:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6031,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:24"},"scope":6525,"src":"24793:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"25414:150:24","statements":[{"expression":{"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"25424:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"25444:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6061,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:24","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6066,"nodeType":"ExpressionStatement","src":"25424:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"25464:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"25478:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"25460:98:24","trueBody":{"id":6075,"nodeType":"Block","src":"25485:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"25541:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"25506:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6074,"nodeType":"RevertStatement","src":"25499:48:24"}]}}]},"documentation":{"id":6053,"nodeType":"StructuredDocumentation","src":"25023:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:24","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"value","nameLocation":"25365:5:24","nodeType":"VariableDeclaration","scope":6078,"src":"25358:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6054,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:24"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:24","nodeType":"VariableDeclaration","scope":6078,"src":"25395:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6057,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:24"},"scope":6525,"src":"25340:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6103,"nodeType":"Block","src":"25961:150:24","statements":[{"expression":{"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"25971:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"25991:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6087,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:24","typeDescriptions":{}}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6092,"nodeType":"ExpressionStatement","src":"25971:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26011:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"26025:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"26007:98:24","trueBody":{"id":6101,"nodeType":"Block","src":"26032:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"26088:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"26053:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"RevertStatement","src":"26046:48:24"}]}}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"25570:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:24","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"25912:5:24","nodeType":"VariableDeclaration","scope":6104,"src":"25905:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6080,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:24"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:24","nodeType":"VariableDeclaration","scope":6104,"src":"25942:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6083,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:24"},"scope":6525,"src":"25887:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6129,"nodeType":"Block","src":"26508:150:24","statements":[{"expression":{"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"26518:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"26538:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6113,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:24","typeDescriptions":{}}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6118,"nodeType":"ExpressionStatement","src":"26518:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"26558:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"26572:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"26554:98:24","trueBody":{"id":6127,"nodeType":"Block","src":"26579:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"26635:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"26600:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6126,"nodeType":"RevertStatement","src":"26593:48:24"}]}}]},"documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"26117:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:24","nodeType":"FunctionDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"value","nameLocation":"26459:5:24","nodeType":"VariableDeclaration","scope":6130,"src":"26452:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6106,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:24"},"returnParameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:24","nodeType":"VariableDeclaration","scope":6130,"src":"26489:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6109,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:24"},"scope":6525,"src":"26434:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"27055:150:24","statements":[{"expression":{"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"27065:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"27085:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6139,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:24","typeDescriptions":{}}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6144,"nodeType":"ExpressionStatement","src":"27065:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"27105:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"27119:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6154,"nodeType":"IfStatement","src":"27101:98:24","trueBody":{"id":6153,"nodeType":"Block","src":"27126:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"27182:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"27147:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6152,"nodeType":"RevertStatement","src":"27140:48:24"}]}}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"26664:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:24","nodeType":"FunctionDefinition","parameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"value","nameLocation":"27006:5:24","nodeType":"VariableDeclaration","scope":6156,"src":"26999:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6132,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:24"},"returnParameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:24","nodeType":"VariableDeclaration","scope":6156,"src":"27036:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6135,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:24"},"scope":6525,"src":"26981:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6181,"nodeType":"Block","src":"27602:150:24","statements":[{"expression":{"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"27612:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"27632:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6165,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:24","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6170,"nodeType":"ExpressionStatement","src":"27612:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"27652:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"27666:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"27648:98:24","trueBody":{"id":6179,"nodeType":"Block","src":"27673:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"27729:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"27694:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6178,"nodeType":"RevertStatement","src":"27687:48:24"}]}}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"27211:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:24","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"27553:5:24","nodeType":"VariableDeclaration","scope":6182,"src":"27546:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6158,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:24"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:24","nodeType":"VariableDeclaration","scope":6182,"src":"27583:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6161,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:24"},"scope":6525,"src":"27528:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"28142:148:24","statements":[{"expression":{"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"28152:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"28171:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6191,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:24","typeDescriptions":{}}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6196,"nodeType":"ExpressionStatement","src":"28152:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"28191:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"28205:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6206,"nodeType":"IfStatement","src":"28187:97:24","trueBody":{"id":6205,"nodeType":"Block","src":"28212:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"28267:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"28233:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"RevertStatement","src":"28226:47:24"}]}}]},"documentation":{"id":6183,"nodeType":"StructuredDocumentation","src":"27758:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:24","nodeType":"FunctionDefinition","parameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"value","nameLocation":"28094:5:24","nodeType":"VariableDeclaration","scope":6208,"src":"28087:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6184,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:24"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:24","nodeType":"VariableDeclaration","scope":6208,"src":"28124:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6187,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:24"},"scope":6525,"src":"28070:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"28680:148:24","statements":[{"expression":{"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"28690:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"28709:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6217,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:24","typeDescriptions":{}}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6222,"nodeType":"ExpressionStatement","src":"28690:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"28729:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"28743:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"28725:97:24","trueBody":{"id":6231,"nodeType":"Block","src":"28750:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"28805:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"28771:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6230,"nodeType":"RevertStatement","src":"28764:47:24"}]}}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"28296:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:24","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"value","nameLocation":"28632:5:24","nodeType":"VariableDeclaration","scope":6234,"src":"28625:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6210,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:24"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:24","nodeType":"VariableDeclaration","scope":6234,"src":"28662:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6213,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:24"},"scope":6525,"src":"28608:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"29218:148:24","statements":[{"expression":{"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"29228:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"29247:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6243,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:24","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6248,"nodeType":"ExpressionStatement","src":"29228:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"29267:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"29281:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6258,"nodeType":"IfStatement","src":"29263:97:24","trueBody":{"id":6257,"nodeType":"Block","src":"29288:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"29343:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"29309:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6256,"nodeType":"RevertStatement","src":"29302:47:24"}]}}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"28834:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:24","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"value","nameLocation":"29170:5:24","nodeType":"VariableDeclaration","scope":6260,"src":"29163:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6236,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:24"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:24","nodeType":"VariableDeclaration","scope":6260,"src":"29200:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6239,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:24"},"scope":6525,"src":"29146:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6285,"nodeType":"Block","src":"29756:148:24","statements":[{"expression":{"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"29766:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"29785:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6269,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:24","typeDescriptions":{}}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6274,"nodeType":"ExpressionStatement","src":"29766:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"29805:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"29819:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6284,"nodeType":"IfStatement","src":"29801:97:24","trueBody":{"id":6283,"nodeType":"Block","src":"29826:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"29881:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"29847:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6282,"nodeType":"RevertStatement","src":"29840:47:24"}]}}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"29372:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:24","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"value","nameLocation":"29708:5:24","nodeType":"VariableDeclaration","scope":6286,"src":"29701:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6262,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:24"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:24","nodeType":"VariableDeclaration","scope":6286,"src":"29738:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6265,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:24"},"scope":6525,"src":"29684:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"30294:148:24","statements":[{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"30304:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"30323:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6295,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:24","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6300,"nodeType":"ExpressionStatement","src":"30304:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"30343:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"30357:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"IfStatement","src":"30339:97:24","trueBody":{"id":6309,"nodeType":"Block","src":"30364:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"30419:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"30385:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"RevertStatement","src":"30378:47:24"}]}}]},"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"29910:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:24","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"value","nameLocation":"30246:5:24","nodeType":"VariableDeclaration","scope":6312,"src":"30239:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6288,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:24"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:24","nodeType":"VariableDeclaration","scope":6312,"src":"30276:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6291,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:24"},"scope":6525,"src":"30222:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"30832:148:24","statements":[{"expression":{"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"30842:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"30861:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6321,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:24","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6326,"nodeType":"ExpressionStatement","src":"30842:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"30881:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"30895:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6336,"nodeType":"IfStatement","src":"30877:97:24","trueBody":{"id":6335,"nodeType":"Block","src":"30902:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"30957:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"30923:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6334,"nodeType":"RevertStatement","src":"30916:47:24"}]}}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"30448:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:24","nodeType":"FunctionDefinition","parameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"value","nameLocation":"30784:5:24","nodeType":"VariableDeclaration","scope":6338,"src":"30777:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6314,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:24"},"returnParameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:24","nodeType":"VariableDeclaration","scope":6338,"src":"30814:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6317,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:24"},"scope":6525,"src":"30760:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"31370:148:24","statements":[{"expression":{"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"31380:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"31399:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6347,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:24","typeDescriptions":{}}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6352,"nodeType":"ExpressionStatement","src":"31380:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"31419:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"31433:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6362,"nodeType":"IfStatement","src":"31415:97:24","trueBody":{"id":6361,"nodeType":"Block","src":"31440:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"31495:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"31461:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6360,"nodeType":"RevertStatement","src":"31454:47:24"}]}}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"30986:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:24","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"value","nameLocation":"31322:5:24","nodeType":"VariableDeclaration","scope":6364,"src":"31315:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6340,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:24"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:24","nodeType":"VariableDeclaration","scope":6364,"src":"31352:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6343,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:24"},"scope":6525,"src":"31298:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"31908:148:24","statements":[{"expression":{"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"31918:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"31937:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6373,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:24","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6378,"nodeType":"ExpressionStatement","src":"31918:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"31957:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"31971:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"31953:97:24","trueBody":{"id":6387,"nodeType":"Block","src":"31978:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"32033:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6382,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"31999:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"31992:47:24"}]}}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"31524:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:24","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"value","nameLocation":"31860:5:24","nodeType":"VariableDeclaration","scope":6390,"src":"31853:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6366,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:24"},"returnParameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:24","nodeType":"VariableDeclaration","scope":6390,"src":"31890:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6369,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:24"},"scope":6525,"src":"31836:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6415,"nodeType":"Block","src":"32446:148:24","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"32456:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"32475:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6399,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:24","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6404,"nodeType":"ExpressionStatement","src":"32456:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"32495:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"32509:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6414,"nodeType":"IfStatement","src":"32491:97:24","trueBody":{"id":6413,"nodeType":"Block","src":"32516:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"32571:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"32537:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6412,"nodeType":"RevertStatement","src":"32530:47:24"}]}}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"32062:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:24","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"32398:5:24","nodeType":"VariableDeclaration","scope":6416,"src":"32391:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:24"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:24","nodeType":"VariableDeclaration","scope":6416,"src":"32428:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6395,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:24"},"scope":6525,"src":"32374:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"32984:148:24","statements":[{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"32994:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"33013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6425,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:24","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6430,"nodeType":"ExpressionStatement","src":"32994:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"33033:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"33047:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6440,"nodeType":"IfStatement","src":"33029:97:24","trueBody":{"id":6439,"nodeType":"Block","src":"33054:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"33109:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"33075:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"RevertStatement","src":"33068:47:24"}]}}]},"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"32600:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:24","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"32936:5:24","nodeType":"VariableDeclaration","scope":6442,"src":"32929:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6418,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:24"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:24","nodeType":"VariableDeclaration","scope":6442,"src":"32966:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6421,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:24"},"scope":6525,"src":"32912:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6467,"nodeType":"Block","src":"33522:148:24","statements":[{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"33532:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"33551:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6451,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:24","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6456,"nodeType":"ExpressionStatement","src":"33532:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"33571:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"33585:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"33567:97:24","trueBody":{"id":6465,"nodeType":"Block","src":"33592:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"33647:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"33613:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"RevertStatement","src":"33606:47:24"}]}}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"33138:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:24","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"33474:5:24","nodeType":"VariableDeclaration","scope":6468,"src":"33467:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6444,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:24"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:24","nodeType":"VariableDeclaration","scope":6468,"src":"33504:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6447,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:24"},"scope":6525,"src":"33450:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"34053:146:24","statements":[{"expression":{"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"34063:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"34081:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6477,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:24","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6482,"nodeType":"ExpressionStatement","src":"34063:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"34101:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"34115:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"34097:96:24","trueBody":{"id":6491,"nodeType":"Block","src":"34122:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"34176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"34143:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6490,"nodeType":"RevertStatement","src":"34136:46:24"}]}}]},"documentation":{"id":6469,"nodeType":"StructuredDocumentation","src":"33676:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:24","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"value","nameLocation":"34006:5:24","nodeType":"VariableDeclaration","scope":6494,"src":"33999:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:24"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:24","nodeType":"VariableDeclaration","scope":6494,"src":"34036:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6473,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:24"},"scope":6525,"src":"33983:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6523,"nodeType":"Block","src":"34439:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"34552:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6506,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6505,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:24","memberName":"max","nodeType":"MemberAccess","src":"34568:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:24","typeDescriptions":{}}},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"IfStatement","src":"34548:105:24","trueBody":{"id":6516,"nodeType":"Block","src":"34587:66:24","statements":[{"errorCall":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"34636:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6512,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"34608:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6515,"nodeType":"RevertStatement","src":"34601:41:24"}]}},{"expression":{"arguments":[{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"34676:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6518,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:24","typeDescriptions":{}}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6501,"id":6522,"nodeType":"Return","src":"34662:20:24"}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"34205:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:24","nodeType":"FunctionDefinition","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"value","nameLocation":"34401:5:24","nodeType":"VariableDeclaration","scope":6524,"src":"34393:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6496,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:24"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6524,"src":"34431:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6499,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:24"},"scope":6525,"src":"34375:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6526,"src":"764:33927:24","usedErrors":[4780,4785,4792,4797],"usedEvents":[]}],"src":"192:34500:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6630]},"id":6631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"135:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6630,"linearizedBaseContracts":[6630],"name":"SignedMath","nameLocation":"224:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":6545,"nodeType":"Block","src":"376:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"393:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"397:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"405:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:25","trueExpression":{"id":6541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"401:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6537,"id":6544,"nodeType":"Return","src":"386:20:25"}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"241:66:25","text":" @dev Returns the largest of two signed numbers."},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:25","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"a","nameLocation":"332:1:25","nodeType":"VariableDeclaration","scope":6546,"src":"325:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6533,"mutability":"mutable","name":"b","nameLocation":"342:1:25","nodeType":"VariableDeclaration","scope":6546,"src":"335:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6532,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:25"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6546,"src":"368:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6535,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:25"},"scope":6630,"src":"312:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6563,"nodeType":"Block","src":"555:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"572:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"584:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:25","trueExpression":{"id":6559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"580:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6555,"id":6562,"nodeType":"Return","src":"565:20:25"}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"419:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":6564,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:25","nodeType":"FunctionDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"a","nameLocation":"511:1:25","nodeType":"VariableDeclaration","scope":6564,"src":"504:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6551,"mutability":"mutable","name":"b","nameLocation":"521:1:25","nodeType":"VariableDeclaration","scope":6564,"src":"514:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6550,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:25"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6564,"src":"547:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6553,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:25"},"scope":6630,"src":"491:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6607,"nodeType":"Block","src":"797:162:25","statements":[{"assignments":[6575],"declarations":[{"constant":false,"id":6575,"mutability":"mutable","name":"x","nameLocation":"866:1:25","nodeType":"VariableDeclaration","scope":6607,"src":"859:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6574,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6588,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"871:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"875:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"882:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"886:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6589,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"911:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6594,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"931:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6592,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:25","typeDescriptions":{}}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:25","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"945:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"949:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6573,"id":6606,"nodeType":"Return","src":"904:48:25"}]},"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"598:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6608,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:25","nodeType":"FunctionDefinition","parameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"a","nameLocation":"753:1:25","nodeType":"VariableDeclaration","scope":6608,"src":"746:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6566,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6569,"mutability":"mutable","name":"b","nameLocation":"763:1:25","nodeType":"VariableDeclaration","scope":6608,"src":"756:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6568,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:25"},"returnParameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6608,"src":"789:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6571,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:25"},"scope":6630,"src":"729:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"1103:158:25","statements":[{"id":6627,"nodeType":"UncheckedBlock","src":"1113:142:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"1228:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:25","subExpression":{"id":6622,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"1242:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:25","trueExpression":{"id":6621,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"1237:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:25","typeDescriptions":{}}},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6615,"id":6626,"nodeType":"Return","src":"1213:31:25"}]}]},"documentation":{"id":6609,"nodeType":"StructuredDocumentation","src":"965:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:25","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"n","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":6629,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6610,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:25"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6629,"src":"1094:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:25"},"scope":6630,"src":"1048:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6631,"src":"216:1047:25","usedErrors":[],"usedEvents":[]}],"src":"109:1155:25"},"id":25},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[7243]},"id":7244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"231:1098:26","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":7243,"linearizedBaseContracts":[7243],"name":"EnumerableSet","nameLocation":"1338:13:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":6641,"members":[{"constant":false,"id":6636,"mutability":"mutable","name":"_values","nameLocation":"1862:7:26","nodeType":"VariableDeclaration","scope":6641,"src":"1852:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6635,"nodeType":"ArrayTypeName","src":"1852:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6640,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:26","nodeType":"VariableDeclaration","scope":6641,"src":"2020:44:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6639,"keyName":"value","keyNameLocation":"2036:5:26","keyType":{"id":6637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:26","nodeType":"StructDefinition","scope":7243,"src":"1798:273:26","visibility":"public"},{"body":{"id":6682,"nodeType":"Block","src":"2310:337:26","statements":[{"condition":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:26","subExpression":{"arguments":[{"id":6653,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2335:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"2340:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6652,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"2325:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6680,"nodeType":"Block","src":"2604:37:26","statements":[{"expression":{"hexValue":"66616c7365","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6651,"id":6679,"nodeType":"Return","src":"2618:12:26"}]},"id":6681,"nodeType":"IfStatement","src":"2320:321:26","trueBody":{"id":6677,"nodeType":"Block","src":"2348:250:26","statements":[{"expression":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"2379:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":6657,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2362:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"2362:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:26","memberName":"push","nodeType":"MemberAccess","src":"2362:16:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"ExpressionStatement","src":"2362:23:26"},{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6665,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2520:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:26","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"2520:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6669,"indexExpression":{"id":6667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"2535:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6670,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"2544:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"2544:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:26","memberName":"length","nodeType":"MemberAccess","src":"2544:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6674,"nodeType":"ExpressionStatement","src":"2520:42:26"},{"expression":{"hexValue":"74727565","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6651,"id":6676,"nodeType":"Return","src":"2576:11:26"}]}}]},"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"2077:159:26","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:26","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"set","nameLocation":"2267:3:26","nodeType":"VariableDeclaration","scope":6683,"src":"2255:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6644,"nodeType":"UserDefinedTypeName","pathNode":{"id":6643,"name":"Set","nameLocations":["2255:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"2255:3:26"},"referencedDeclaration":6641,"src":"2255:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6647,"mutability":"mutable","name":"value","nameLocation":"2280:5:26","nodeType":"VariableDeclaration","scope":6683,"src":"2272:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:26"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"2304:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6649,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:26"},"scope":7243,"src":"2241:406:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6766,"nodeType":"Block","src":"2887:1296:26","statements":[{"assignments":[6695],"declarations":[{"constant":false,"id":6695,"mutability":"mutable","name":"position","nameLocation":"2999:8:26","nodeType":"VariableDeclaration","scope":6766,"src":"2991:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6700,"initialValue":{"baseExpression":{"expression":{"id":6696,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3010:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:26","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"3010:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6699,"indexExpression":{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"3025:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"3046:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6764,"nodeType":"Block","src":"4140:37:26","statements":[{"expression":{"hexValue":"66616c7365","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6693,"id":6763,"nodeType":"Return","src":"4154:12:26"}]},"id":6765,"nodeType":"IfStatement","src":"3042:1135:26","trueBody":{"id":6761,"nodeType":"Block","src":"3061:1073:26","statements":[{"assignments":[6705],"declarations":[{"constant":false,"id":6705,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:26","nodeType":"VariableDeclaration","scope":6761,"src":"3413:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6709,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6706,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"3434:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:26"},{"assignments":[6711],"declarations":[{"constant":false,"id":6711,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:26","nodeType":"VariableDeclaration","scope":6761,"src":"3460:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6717,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3480:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"3480:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:26","memberName":"length","nodeType":"MemberAccess","src":"3480:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6718,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"3521:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6719,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"3535:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6745,"nodeType":"IfStatement","src":"3517:378:26","trueBody":{"id":6744,"nodeType":"Block","src":"3546:349:26","statements":[{"assignments":[6722],"declarations":[{"constant":false,"id":6722,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:26","nodeType":"VariableDeclaration","scope":6744,"src":"3564:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6727,"initialValue":{"baseExpression":{"expression":{"id":6723,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3584:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"3584:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6726,"indexExpression":{"id":6725,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"3596:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:26"},{"expression":{"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6728,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3705:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"3705:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6732,"indexExpression":{"id":6730,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"3717:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6733,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"3731:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6735,"nodeType":"ExpressionStatement","src":"3705:35:26"},{"expression":{"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6736,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3844:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:26","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"3844:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6740,"indexExpression":{"id":6738,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"3859:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6741,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"3872:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6743,"nodeType":"ExpressionStatement","src":"3844:36:26"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6746,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3973:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"3973:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:26","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:26","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"ExpressionStatement","src":"3973:17:26"},{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:26","subExpression":{"baseExpression":{"expression":{"id":6753,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"4076:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:26","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"4076:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6756,"indexExpression":{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"4091:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6758,"nodeType":"ExpressionStatement","src":"4069:28:26"},{"expression":{"hexValue":"74727565","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6693,"id":6760,"nodeType":"Return","src":"4112:11:26"}]}}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"2653:157:26","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:26","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"set","nameLocation":"2844:3:26","nodeType":"VariableDeclaration","scope":6767,"src":"2832:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6686,"nodeType":"UserDefinedTypeName","pathNode":{"id":6685,"name":"Set","nameLocations":["2832:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"2832:3:26"},"referencedDeclaration":6641,"src":"2832:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6689,"mutability":"mutable","name":"value","nameLocation":"2857:5:26","nodeType":"VariableDeclaration","scope":6767,"src":"2849:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:26"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"2881:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6691,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:26"},"scope":7243,"src":"2815:1368:26","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6785,"nodeType":"Block","src":"4343:50:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":6778,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"4360:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:26","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6640,"src":"4360:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6781,"indexExpression":{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"4375:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6777,"id":6784,"nodeType":"Return","src":"4353:33:26"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"4189:70:26","text":" @dev Returns true if the value is in the set. O(1)."},"id":6786,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:26","nodeType":"FunctionDefinition","parameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"set","nameLocation":"4295:3:26","nodeType":"VariableDeclaration","scope":6786,"src":"4283:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6770,"nodeType":"UserDefinedTypeName","pathNode":{"id":6769,"name":"Set","nameLocations":["4283:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"4283:3:26"},"referencedDeclaration":6641,"src":"4283:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6773,"mutability":"mutable","name":"value","nameLocation":"4308:5:26","nodeType":"VariableDeclaration","scope":6786,"src":"4300:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:26"},"returnParameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6786,"src":"4337:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6775,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:26"},"scope":7243,"src":"4264:129:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6799,"nodeType":"Block","src":"4539:42:26","statements":[{"expression":{"expression":{"expression":{"id":6795,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"4556:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"4556:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:26","memberName":"length","nodeType":"MemberAccess","src":"4556:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6794,"id":6798,"nodeType":"Return","src":"4549:25:26"}]},"documentation":{"id":6787,"nodeType":"StructuredDocumentation","src":"4399:70:26","text":" @dev Returns the number of values on the set. O(1)."},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:26","nodeType":"FunctionDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"set","nameLocation":"4503:3:26","nodeType":"VariableDeclaration","scope":6800,"src":"4491:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6789,"nodeType":"UserDefinedTypeName","pathNode":{"id":6788,"name":"Set","nameLocations":["4491:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"4491:3:26"},"referencedDeclaration":6641,"src":"4491:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:26"},"returnParameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6800,"src":"4530:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:26"},"scope":7243,"src":"4474:107:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6816,"nodeType":"Block","src":"4999:42:26","statements":[{"expression":{"baseExpression":{"expression":{"id":6811,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"5016:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"5016:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6814,"indexExpression":{"id":6813,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"5028:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6810,"id":6815,"nodeType":"Return","src":"5009:25:26"}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"4587:331:26","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:26","nodeType":"FunctionDefinition","parameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6804,"mutability":"mutable","name":"set","nameLocation":"4948:3:26","nodeType":"VariableDeclaration","scope":6817,"src":"4936:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6803,"nodeType":"UserDefinedTypeName","pathNode":{"id":6802,"name":"Set","nameLocations":["4936:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"4936:3:26"},"referencedDeclaration":6641,"src":"4936:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6806,"mutability":"mutable","name":"index","nameLocation":"4961:5:26","nodeType":"VariableDeclaration","scope":6817,"src":"4953:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6805,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:26"},"returnParameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"4990:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:26"},"scope":7243,"src":"4923:118:26","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6830,"nodeType":"Block","src":"5655:35:26","statements":[{"expression":{"expression":{"id":6827,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"5672:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:26","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6636,"src":"5672:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6826,"id":6829,"nodeType":"Return","src":"5665:18:26"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"5047:529:26","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:26","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"set","nameLocation":"5610:3:26","nodeType":"VariableDeclaration","scope":6831,"src":"5598:15:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6820,"nodeType":"UserDefinedTypeName","pathNode":{"id":6819,"name":"Set","nameLocations":["5598:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"5598:3:26"},"referencedDeclaration":6641,"src":"5598:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:26"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6831,"src":"5637:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6824,"nodeType":"ArrayTypeName","src":"5637:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:26"},"scope":7243,"src":"5581:109:26","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":6835,"members":[{"constant":false,"id":6834,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:26","nodeType":"VariableDeclaration","scope":6835,"src":"5743:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6833,"nodeType":"UserDefinedTypeName","pathNode":{"id":6832,"name":"Set","nameLocations":["5743:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"5743:3:26"},"referencedDeclaration":6641,"src":"5743:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:26","nodeType":"StructDefinition","scope":7243,"src":"5715:45:26","visibility":"public"},{"body":{"id":6852,"nodeType":"Block","src":"6006:47:26","statements":[{"expression":{"arguments":[{"expression":{"id":6847,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"6028:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"6028:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"6040:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6846,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"6023:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6845,"id":6851,"nodeType":"Return","src":"6016:30:26"}]},"documentation":{"id":6836,"nodeType":"StructuredDocumentation","src":"5766:159:26","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6853,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:26","nodeType":"FunctionDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"set","nameLocation":"5962:3:26","nodeType":"VariableDeclaration","scope":6853,"src":"5943:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6838,"nodeType":"UserDefinedTypeName","pathNode":{"id":6837,"name":"Bytes32Set","nameLocations":["5943:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"5943:10:26"},"referencedDeclaration":6835,"src":"5943:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6841,"mutability":"mutable","name":"value","nameLocation":"5975:5:26","nodeType":"VariableDeclaration","scope":6853,"src":"5967:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:26"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6853,"src":"6000:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6843,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:26"},"scope":7243,"src":"5930:123:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6870,"nodeType":"Block","src":"6300:50:26","statements":[{"expression":{"arguments":[{"expression":{"id":6865,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"6325:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"6325:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"6337:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6864,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"6317:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6863,"id":6869,"nodeType":"Return","src":"6310:33:26"}]},"documentation":{"id":6854,"nodeType":"StructuredDocumentation","src":"6059:157:26","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6871,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:26","nodeType":"FunctionDefinition","parameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"set","nameLocation":"6256:3:26","nodeType":"VariableDeclaration","scope":6871,"src":"6237:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6856,"nodeType":"UserDefinedTypeName","pathNode":{"id":6855,"name":"Bytes32Set","nameLocations":["6237:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"6237:10:26"},"referencedDeclaration":6835,"src":"6237:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6859,"mutability":"mutable","name":"value","nameLocation":"6269:5:26","nodeType":"VariableDeclaration","scope":6871,"src":"6261:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:26"},"returnParameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6871,"src":"6294:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6861,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:26"},"scope":7243,"src":"6221:129:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6888,"nodeType":"Block","src":"6517:52:26","statements":[{"expression":{"arguments":[{"expression":{"id":6883,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"6544:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"6544:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"6556:5:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6882,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"6534:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6881,"id":6887,"nodeType":"Return","src":"6527:35:26"}]},"documentation":{"id":6872,"nodeType":"StructuredDocumentation","src":"6356:70:26","text":" @dev Returns true if the value is in the set. O(1)."},"id":6889,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:26","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"set","nameLocation":"6468:3:26","nodeType":"VariableDeclaration","scope":6889,"src":"6449:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6874,"nodeType":"UserDefinedTypeName","pathNode":{"id":6873,"name":"Bytes32Set","nameLocations":["6449:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"6449:10:26"},"referencedDeclaration":6835,"src":"6449:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6877,"mutability":"mutable","name":"value","nameLocation":"6481:5:26","nodeType":"VariableDeclaration","scope":6889,"src":"6473:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:26"},"returnParameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6889,"src":"6511:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6879,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:26"},"scope":7243,"src":"6431:138:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"6722:43:26","statements":[{"expression":{"arguments":[{"expression":{"id":6899,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"6747:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"6747:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6898,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6739:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6897,"id":6902,"nodeType":"Return","src":"6732:26:26"}]},"documentation":{"id":6890,"nodeType":"StructuredDocumentation","src":"6575:70:26","text":" @dev Returns the number of values in the set. O(1)."},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:26","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"set","nameLocation":"6685:3:26","nodeType":"VariableDeclaration","scope":6904,"src":"6666:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6892,"nodeType":"UserDefinedTypeName","pathNode":{"id":6891,"name":"Bytes32Set","nameLocations":["6666:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"6666:10:26"},"referencedDeclaration":6835,"src":"6666:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:26"},"returnParameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6904,"src":"6713:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:26"},"scope":7243,"src":"6650:115:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"7190:46:26","statements":[{"expression":{"arguments":[{"expression":{"id":6916,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"7211:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"7211:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6918,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"7223:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6915,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"7207:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6914,"id":6920,"nodeType":"Return","src":"7200:29:26"}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"6771:331:26","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:26","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"set","nameLocation":"7138:3:26","nodeType":"VariableDeclaration","scope":6922,"src":"7119:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6907,"nodeType":"UserDefinedTypeName","pathNode":{"id":6906,"name":"Bytes32Set","nameLocations":["7119:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"7119:10:26"},"referencedDeclaration":6835,"src":"7119:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6910,"mutability":"mutable","name":"index","nameLocation":"7151:5:26","nodeType":"VariableDeclaration","scope":6922,"src":"7143:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:26"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6922,"src":"7181:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:26"},"scope":7243,"src":"7107:129:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6951,"nodeType":"Block","src":"7857:219:26","statements":[{"assignments":[6936],"declarations":[{"constant":false,"id":6936,"mutability":"mutable","name":"store","nameLocation":"7884:5:26","nodeType":"VariableDeclaration","scope":6951,"src":"7867:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6935,"nodeType":"ArrayTypeName","src":"7867:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6941,"initialValue":{"arguments":[{"expression":{"id":6938,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"7900:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"7900:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6937,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"7892:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:26"},{"assignments":[6946],"declarations":[{"constant":false,"id":6946,"mutability":"mutable","name":"result","nameLocation":"7938:6:26","nodeType":"VariableDeclaration","scope":6951,"src":"7921:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6945,"nodeType":"ArrayTypeName","src":"7921:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6947,"nodeType":"VariableDeclarationStatement","src":"7921:23:26"},{"AST":{"nativeSrc":"8007:39:26","nodeType":"YulBlock","src":"8007:39:26","statements":[{"nativeSrc":"8021:15:26","nodeType":"YulAssignment","src":"8021:15:26","value":{"name":"store","nativeSrc":"8031:5:26","nodeType":"YulIdentifier","src":"8031:5:26"},"variableNames":[{"name":"result","nativeSrc":"8021:6:26","nodeType":"YulIdentifier","src":"8021:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6946,"isOffset":false,"isSlot":false,"src":"8021:6:26","valueSize":1},{"declaration":6936,"isOffset":false,"isSlot":false,"src":"8031:5:26","valueSize":1}],"id":6948,"nodeType":"InlineAssembly","src":"7998:48:26"},{"expression":{"id":6949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"8063:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":6931,"id":6950,"nodeType":"Return","src":"8056:13:26"}]},"documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"7242:529:26","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6952,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:26","nodeType":"FunctionDefinition","parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"set","nameLocation":"7811:3:26","nodeType":"VariableDeclaration","scope":6952,"src":"7792:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6925,"nodeType":"UserDefinedTypeName","pathNode":{"id":6924,"name":"Bytes32Set","nameLocations":["7792:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"7792:10:26"},"referencedDeclaration":6835,"src":"7792:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6835_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:26"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6952,"src":"7839:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6929,"nodeType":"ArrayTypeName","src":"7839:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:26"},"scope":7243,"src":"7776:300:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":6956,"members":[{"constant":false,"id":6955,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:26","nodeType":"VariableDeclaration","scope":6956,"src":"8129:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6954,"nodeType":"UserDefinedTypeName","pathNode":{"id":6953,"name":"Set","nameLocations":["8129:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"8129:3:26"},"referencedDeclaration":6641,"src":"8129:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:26","nodeType":"StructDefinition","scope":7243,"src":"8101:45:26","visibility":"public"},{"body":{"id":6982,"nodeType":"Block","src":"8392:74:26","statements":[{"expression":{"arguments":[{"expression":{"id":6968,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"8414:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"8414:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"8450:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6974,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:26","typeDescriptions":{}}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:26","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:26","typeDescriptions":{}}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6967,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"8409:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6966,"id":6981,"nodeType":"Return","src":"8402:57:26"}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"8152:159:26","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6983,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:26","nodeType":"FunctionDefinition","parameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"set","nameLocation":"8348:3:26","nodeType":"VariableDeclaration","scope":6983,"src":"8329:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6959,"nodeType":"UserDefinedTypeName","pathNode":{"id":6958,"name":"AddressSet","nameLocations":["8329:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"8329:10:26"},"referencedDeclaration":6956,"src":"8329:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6962,"mutability":"mutable","name":"value","nameLocation":"8361:5:26","nodeType":"VariableDeclaration","scope":6983,"src":"8353:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6961,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:26"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6983,"src":"8386:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6964,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:26"},"scope":7243,"src":"8316:150:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7009,"nodeType":"Block","src":"8713:77:26","statements":[{"expression":{"arguments":[{"expression":{"id":6995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"8738:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"8738:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"8774:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7001,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:26","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6999,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:26","typeDescriptions":{}}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:26","typeDescriptions":{}}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6994,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"8730:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6993,"id":7008,"nodeType":"Return","src":"8723:60:26"}]},"documentation":{"id":6984,"nodeType":"StructuredDocumentation","src":"8472:157:26","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7010,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:26","nodeType":"FunctionDefinition","parameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"set","nameLocation":"8669:3:26","nodeType":"VariableDeclaration","scope":7010,"src":"8650:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6986,"nodeType":"UserDefinedTypeName","pathNode":{"id":6985,"name":"AddressSet","nameLocations":["8650:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"8650:10:26"},"referencedDeclaration":6956,"src":"8650:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6989,"mutability":"mutable","name":"value","nameLocation":"8682:5:26","nodeType":"VariableDeclaration","scope":7010,"src":"8674:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6988,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:26"},"returnParameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7010,"src":"8707:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6991,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:26"},"scope":7243,"src":"8634:156:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7036,"nodeType":"Block","src":"8957:79:26","statements":[{"expression":{"arguments":[{"expression":{"id":7022,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"8984:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"8984:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"9020:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7028,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:26","typeDescriptions":{}}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7026,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:26","typeDescriptions":{}}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:26","typeDescriptions":{}}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7021,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"8974:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7020,"id":7035,"nodeType":"Return","src":"8967:62:26"}]},"documentation":{"id":7011,"nodeType":"StructuredDocumentation","src":"8796:70:26","text":" @dev Returns true if the value is in the set. O(1)."},"id":7037,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:26","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"set","nameLocation":"8908:3:26","nodeType":"VariableDeclaration","scope":7037,"src":"8889:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7013,"nodeType":"UserDefinedTypeName","pathNode":{"id":7012,"name":"AddressSet","nameLocations":["8889:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"8889:10:26"},"referencedDeclaration":6956,"src":"8889:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"value","nameLocation":"8921:5:26","nodeType":"VariableDeclaration","scope":7037,"src":"8913:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7015,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:26"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7037,"src":"8951:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7018,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:26"},"scope":7243,"src":"8871:165:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7051,"nodeType":"Block","src":"9189:43:26","statements":[{"expression":{"arguments":[{"expression":{"id":7047,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"9214:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"9214:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7046,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"9206:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7045,"id":7050,"nodeType":"Return","src":"9199:26:26"}]},"documentation":{"id":7038,"nodeType":"StructuredDocumentation","src":"9042:70:26","text":" @dev Returns the number of values in the set. O(1)."},"id":7052,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:26","nodeType":"FunctionDefinition","parameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"set","nameLocation":"9152:3:26","nodeType":"VariableDeclaration","scope":7052,"src":"9133:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7040,"nodeType":"UserDefinedTypeName","pathNode":{"id":7039,"name":"AddressSet","nameLocations":["9133:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"9133:10:26"},"referencedDeclaration":6956,"src":"9133:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:26"},"returnParameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7052,"src":"9180:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:26"},"scope":7243,"src":"9117:115:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7078,"nodeType":"Block","src":"9657:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":7070,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"9702:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"9702:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7072,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"9714:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7069,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"9698:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:26","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7065,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:26","typeDescriptions":{}}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7063,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:26","typeDescriptions":{}}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7062,"id":7077,"nodeType":"Return","src":"9667:56:26"}]},"documentation":{"id":7053,"nodeType":"StructuredDocumentation","src":"9238:331:26","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7079,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:26","nodeType":"FunctionDefinition","parameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"set","nameLocation":"9605:3:26","nodeType":"VariableDeclaration","scope":7079,"src":"9586:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7055,"nodeType":"UserDefinedTypeName","pathNode":{"id":7054,"name":"AddressSet","nameLocations":["9586:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"9586:10:26"},"referencedDeclaration":6956,"src":"9586:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7058,"mutability":"mutable","name":"index","nameLocation":"9618:5:26","nodeType":"VariableDeclaration","scope":7079,"src":"9610:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7057,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:26"},"returnParameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7079,"src":"9648:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7060,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:26"},"scope":7243,"src":"9574:156:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7108,"nodeType":"Block","src":"10351:219:26","statements":[{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"store","nameLocation":"10378:5:26","nodeType":"VariableDeclaration","scope":7108,"src":"10361:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7092,"nodeType":"ArrayTypeName","src":"10361:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7098,"initialValue":{"arguments":[{"expression":{"id":7095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"10394:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6955,"src":"10394:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7094,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"10386:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:26"},{"assignments":[7103],"declarations":[{"constant":false,"id":7103,"mutability":"mutable","name":"result","nameLocation":"10432:6:26","nodeType":"VariableDeclaration","scope":7108,"src":"10415:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7101,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7102,"nodeType":"ArrayTypeName","src":"10415:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7104,"nodeType":"VariableDeclarationStatement","src":"10415:23:26"},{"AST":{"nativeSrc":"10501:39:26","nodeType":"YulBlock","src":"10501:39:26","statements":[{"nativeSrc":"10515:15:26","nodeType":"YulAssignment","src":"10515:15:26","value":{"name":"store","nativeSrc":"10525:5:26","nodeType":"YulIdentifier","src":"10525:5:26"},"variableNames":[{"name":"result","nativeSrc":"10515:6:26","nodeType":"YulIdentifier","src":"10515:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":7103,"isOffset":false,"isSlot":false,"src":"10515:6:26","valueSize":1},{"declaration":7093,"isOffset":false,"isSlot":false,"src":"10525:5:26","valueSize":1}],"id":7105,"nodeType":"InlineAssembly","src":"10492:48:26"},{"expression":{"id":7106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"10557:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":7088,"id":7107,"nodeType":"Return","src":"10550:13:26"}]},"documentation":{"id":7080,"nodeType":"StructuredDocumentation","src":"9736:529:26","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7109,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:26","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"set","nameLocation":"10305:3:26","nodeType":"VariableDeclaration","scope":7109,"src":"10286:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7082,"nodeType":"UserDefinedTypeName","pathNode":{"id":7081,"name":"AddressSet","nameLocations":["10286:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"10286:10:26"},"referencedDeclaration":6956,"src":"10286:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:26"},"returnParameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7109,"src":"10333:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7085,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7086,"nodeType":"ArrayTypeName","src":"10333:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:26"},"scope":7243,"src":"10270:300:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":7113,"members":[{"constant":false,"id":7112,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:26","nodeType":"VariableDeclaration","scope":7113,"src":"10617:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7111,"nodeType":"UserDefinedTypeName","pathNode":{"id":7110,"name":"Set","nameLocations":["10617:3:26"],"nodeType":"IdentifierPath","referencedDeclaration":6641,"src":"10617:3:26"},"referencedDeclaration":6641,"src":"10617:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:26","nodeType":"StructDefinition","scope":7243,"src":"10592:42:26","visibility":"public"},{"body":{"id":7133,"nodeType":"Block","src":"10877:56:26","statements":[{"expression":{"arguments":[{"expression":{"id":7125,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"10899:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"10899:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"10919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:26","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7124,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"10894:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7123,"id":7132,"nodeType":"Return","src":"10887:39:26"}]},"documentation":{"id":7114,"nodeType":"StructuredDocumentation","src":"10640:159:26","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7134,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:26","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"set","nameLocation":"10833:3:26","nodeType":"VariableDeclaration","scope":7134,"src":"10817:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7116,"nodeType":"UserDefinedTypeName","pathNode":{"id":7115,"name":"UintSet","nameLocations":["10817:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"10817:7:26"},"referencedDeclaration":7113,"src":"10817:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"value","nameLocation":"10846:5:26","nodeType":"VariableDeclaration","scope":7134,"src":"10838:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:26"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7134,"src":"10871:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7121,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:26"},"scope":7243,"src":"10804:129:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7154,"nodeType":"Block","src":"11177:59:26","statements":[{"expression":{"arguments":[{"expression":{"id":7146,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"11202:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"11202:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"11222:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:26","typeDescriptions":{}}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7145,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"11194:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7144,"id":7153,"nodeType":"Return","src":"11187:42:26"}]},"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"10939:157:26","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7155,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:26","nodeType":"FunctionDefinition","parameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"set","nameLocation":"11133:3:26","nodeType":"VariableDeclaration","scope":7155,"src":"11117:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7137,"nodeType":"UserDefinedTypeName","pathNode":{"id":7136,"name":"UintSet","nameLocations":["11117:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"11117:7:26"},"referencedDeclaration":7113,"src":"11117:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7140,"mutability":"mutable","name":"value","nameLocation":"11146:5:26","nodeType":"VariableDeclaration","scope":7155,"src":"11138:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:26"},"returnParameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7155,"src":"11171:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7142,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:26"},"scope":7243,"src":"11101:135:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7175,"nodeType":"Block","src":"11400:61:26","statements":[{"expression":{"arguments":[{"expression":{"id":7167,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"11427:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"11427:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"11447:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:26","typeDescriptions":{}}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7166,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"11417:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7165,"id":7174,"nodeType":"Return","src":"11410:44:26"}]},"documentation":{"id":7156,"nodeType":"StructuredDocumentation","src":"11242:70:26","text":" @dev Returns true if the value is in the set. O(1)."},"id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:26","nodeType":"FunctionDefinition","parameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7159,"mutability":"mutable","name":"set","nameLocation":"11351:3:26","nodeType":"VariableDeclaration","scope":7176,"src":"11335:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7158,"nodeType":"UserDefinedTypeName","pathNode":{"id":7157,"name":"UintSet","nameLocations":["11335:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"11335:7:26"},"referencedDeclaration":7113,"src":"11335:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7161,"mutability":"mutable","name":"value","nameLocation":"11364:5:26","nodeType":"VariableDeclaration","scope":7176,"src":"11356:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7160,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:26"},"returnParameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7176,"src":"11394:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7163,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:26"},"scope":7243,"src":"11317:144:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7190,"nodeType":"Block","src":"11611:43:26","statements":[{"expression":{"arguments":[{"expression":{"id":7186,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"11636:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"11636:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7185,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11628:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7184,"id":7189,"nodeType":"Return","src":"11621:26:26"}]},"documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"11467:70:26","text":" @dev Returns the number of values in the set. O(1)."},"id":7191,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:26","nodeType":"FunctionDefinition","parameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"set","nameLocation":"11574:3:26","nodeType":"VariableDeclaration","scope":7191,"src":"11558:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7179,"nodeType":"UserDefinedTypeName","pathNode":{"id":7178,"name":"UintSet","nameLocations":["11558:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"11558:7:26"},"referencedDeclaration":7113,"src":"11558:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:26"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7191,"src":"11602:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7182,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:26"},"scope":7243,"src":"11542:112:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7211,"nodeType":"Block","src":"12076:55:26","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7205,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"12105:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"12105:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7207,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"12117:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7204,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"12101:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:26","typeDescriptions":{}}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7201,"id":7210,"nodeType":"Return","src":"12086:38:26"}]},"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"11660:331:26","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:26","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"set","nameLocation":"12024:3:26","nodeType":"VariableDeclaration","scope":7212,"src":"12008:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7194,"nodeType":"UserDefinedTypeName","pathNode":{"id":7193,"name":"UintSet","nameLocations":["12008:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"12008:7:26"},"referencedDeclaration":7113,"src":"12008:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"index","nameLocation":"12037:5:26","nodeType":"VariableDeclaration","scope":7212,"src":"12029:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:26"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7212,"src":"12067:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:26"},"scope":7243,"src":"11996:135:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7241,"nodeType":"Block","src":"12749:219:26","statements":[{"assignments":[7226],"declarations":[{"constant":false,"id":7226,"mutability":"mutable","name":"store","nameLocation":"12776:5:26","nodeType":"VariableDeclaration","scope":7241,"src":"12759:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7225,"nodeType":"ArrayTypeName","src":"12759:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7231,"initialValue":{"arguments":[{"expression":{"id":7228,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"12792:3:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:26","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"12792:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6641_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7227,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"12784:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6641_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:26"},{"assignments":[7236],"declarations":[{"constant":false,"id":7236,"mutability":"mutable","name":"result","nameLocation":"12830:6:26","nodeType":"VariableDeclaration","scope":7241,"src":"12813:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7234,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7235,"nodeType":"ArrayTypeName","src":"12813:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7237,"nodeType":"VariableDeclarationStatement","src":"12813:23:26"},{"AST":{"nativeSrc":"12899:39:26","nodeType":"YulBlock","src":"12899:39:26","statements":[{"nativeSrc":"12913:15:26","nodeType":"YulAssignment","src":"12913:15:26","value":{"name":"store","nativeSrc":"12923:5:26","nodeType":"YulIdentifier","src":"12923:5:26"},"variableNames":[{"name":"result","nativeSrc":"12913:6:26","nodeType":"YulIdentifier","src":"12913:6:26"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":7236,"isOffset":false,"isSlot":false,"src":"12913:6:26","valueSize":1},{"declaration":7226,"isOffset":false,"isSlot":false,"src":"12923:5:26","valueSize":1}],"id":7238,"nodeType":"InlineAssembly","src":"12890:48:26"},{"expression":{"id":7239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"12955:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7221,"id":7240,"nodeType":"Return","src":"12948:13:26"}]},"documentation":{"id":7213,"nodeType":"StructuredDocumentation","src":"12137:529:26","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7242,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:26","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"set","nameLocation":"12703:3:26","nodeType":"VariableDeclaration","scope":7242,"src":"12687:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7215,"nodeType":"UserDefinedTypeName","pathNode":{"id":7214,"name":"UintSet","nameLocations":["12687:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"12687:7:26"},"referencedDeclaration":7113,"src":"12687:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7113_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:26"},"returnParameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7242,"src":"12731:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7219,"nodeType":"ArrayTypeName","src":"12731:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:26"},"scope":7243,"src":"12671:297:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7244,"src":"1330:11640:26","usedErrors":[],"usedEvents":[]}],"src":"205:12766:26"},"id":26},"contracts/AraraCoin.sol":{"ast":{"absolutePath":"contracts/AraraCoin.sol","exportedSymbols":{"AccessControl":[295],"AraraCoin":[8042],"Context":[2381],"ECDSA":[3379],"EIP712":[3606],"ERC165":[3704],"ERC20":[1514],"ERC20Permit":[1746],"EnumerableSet":[7243],"IAccessControl":[378],"IERC20":[1592],"IERC20Errors":[904],"IERC20Metadata":[1772],"IERC20Permit":[1808],"Nonces":[2449]},"id":8043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7245,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":1515,"src":"218:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":1747,"src":"274:72:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":7248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":7244,"src":"347:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":296,"src":"413:58:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7250,"name":"ERC20","nameLocations":["540:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1514,"src":"540:5:27"},"id":7251,"nodeType":"InheritanceSpecifier","src":"540:5:27"},{"baseName":{"id":7252,"name":"ERC20Permit","nameLocations":["547:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"547:11:27"},"id":7253,"nodeType":"InheritanceSpecifier","src":"547:11:27"},{"baseName":{"id":7254,"name":"AccessControl","nameLocations":["560:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"560:13:27"},"id":7255,"nodeType":"InheritanceSpecifier","src":"560:13:27"}],"canonicalName":"AraraCoin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8042,"linearizedBaseContracts":[8042,295,3704,3716,378,1746,2449,3606,862,1808,1514,904,1772,1592,2381],"name":"AraraCoin","nameLocation":"527:9:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"ec87621c","id":7260,"mutability":"constant","name":"MANAGER_ROLE","nameLocation":"680:12:27","nodeType":"VariableDeclaration","scope":8042,"src":"656:64:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"656:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e414745525f524f4c45","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"705:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""},"value":"MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""}],"id":7257,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"695:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"695:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"id":7263,"mutability":"constant","name":"FEE_DENOMINATOR","nameLocation":"821:15:27","nodeType":"VariableDeclaration","scope":8042,"src":"796:49:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7261,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f303030","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"839:6:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"visibility":"private"},{"constant":true,"id":7266,"mutability":"constant","name":"marketingWallet","nameLocation":"955:15:27","nodeType":"VariableDeclaration","scope":8042,"src":"930:85:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7264,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307832333631386538314533663563644637663534433364363566374642633061426635423231453866","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"973:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f"},"visibility":"private"},{"constant":true,"id":7269,"mutability":"constant","name":"consultingWallet","nameLocation":"1046:16:27","nodeType":"VariableDeclaration","scope":8042,"src":"1021:86:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7267,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307861304565374131343264323637433166333637313445346138463735363132463230613739373230","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1065:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"},"visibility":"private"},{"constant":true,"id":7272,"mutability":"constant","name":"auditWallet","nameLocation":"1138:11:27","nodeType":"VariableDeclaration","scope":8042,"src":"1113:81:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7270,"name":"address","nodeType":"ElementaryTypeName","src":"1113:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837303939373937304335313831326463334130313043376430316235306530643137646337394338","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1152:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x70997970C51812dc3A010C7d01b50e0d17dc79C8"},"visibility":"private"},{"constant":true,"id":7275,"mutability":"constant","name":"preSaleWallet","nameLocation":"1225:13:27","nodeType":"VariableDeclaration","scope":8042,"src":"1200:83:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7273,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1241:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"},"visibility":"private"},{"constant":true,"id":7278,"mutability":"constant","name":"launchWallet","nameLocation":"1314:12:27","nodeType":"VariableDeclaration","scope":8042,"src":"1289:82:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7276,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839304637396266364542326334663837303336354537383539383245316631303145393362393036","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1329:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x90F79bf6EB2c4f870365E785982E1f101E93b906"},"visibility":"private"},{"constant":true,"id":7281,"mutability":"constant","name":"investorsWallet","nameLocation":"1402:15:27","nodeType":"VariableDeclaration","scope":8042,"src":"1377:85:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7279,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831356433344141663534323637444237443763333637383339414166373141303061324336413635","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65"},"visibility":"private"},{"constant":true,"id":7284,"mutability":"constant","name":"investorsYearOneVestingWallet","nameLocation":"1493:29:27","nodeType":"VariableDeclaration","scope":8042,"src":"1468:99:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7282,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837316245363366333338346635666239383939353839384138364230324662323432366335373838","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x71bE63f3384f5fb98995898A86B02Fb2426c5788"},"visibility":"private"},{"constant":true,"id":7287,"mutability":"constant","name":"investorsYearTwoVestingWallet","nameLocation":"1598:29:27","nodeType":"VariableDeclaration","scope":8042,"src":"1573:99:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7285,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307846414242306163396436384230423434356642373335373237324666323032433536353136393461","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xFABB0ac9d68B0B445fB7357272Ff202C5651694a"},"visibility":"private"},{"constant":true,"id":7290,"mutability":"constant","name":"teamVestingWallet","nameLocation":"1703:17:27","nodeType":"VariableDeclaration","scope":8042,"src":"1678:87:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7288,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839393635353037443161353562634332363935433538626131364642333764383139423041346463","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc"},"visibility":"private"},{"constant":true,"id":7293,"mutability":"constant","name":"foundersVestingWallet","nameLocation":"1796:21:27","nodeType":"VariableDeclaration","scope":8042,"src":"1771:91:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7291,"name":"address","nodeType":"ElementaryTypeName","src":"1771:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831434264336232373730393039443465313066313537634142433834433732363430373343394563","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1820:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec"},"visibility":"private"},{"constant":true,"id":7296,"mutability":"constant","name":"companyVestingWallet","nameLocation":"1893:20:27","nodeType":"VariableDeclaration","scope":8042,"src":"1868:90:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7294,"name":"address","nodeType":"ElementaryTypeName","src":"1868:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307864463365313864363442433641393833663637334162333139434361453466316135374337303937","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1916:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097"},"visibility":"private"},{"constant":true,"id":7299,"mutability":"constant","name":"preservationProjectsVestingWallet","nameLocation":"1989:33:27","nodeType":"VariableDeclaration","scope":8042,"src":"1964:103:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7297,"name":"address","nodeType":"ElementaryTypeName","src":"1964:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839373645413734303236453732363535346442363537664135343736336162643043336130616139","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2025:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x976EA74026E726554dB657fA54763abd0C3a0aa9"},"visibility":"private"},{"constant":false,"id":7301,"mutability":"mutable","name":"managerWallet1","nameLocation":"2143:14:27","nodeType":"VariableDeclaration","scope":8042,"src":"2127:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":7304,"mutability":"constant","name":"managerWallet2","nameLocation":"2188:14:27","nodeType":"VariableDeclaration","scope":8042,"src":"2163:84:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7302,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307842636434303432444534393944313465353530303143636242323461353531463362393534303936","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBcd4042DE499D14e55001CcbB24a551F3b954096"},"visibility":"private"},{"constant":true,"id":7307,"mutability":"constant","name":"managerWallet3","nameLocation":"2278:14:27","nodeType":"VariableDeclaration","scope":8042,"src":"2253:84:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7305,"name":"address","nodeType":"ElementaryTypeName","src":"2253:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831346443373939363464613243303862323336393842334433636337436133323139336439393535","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2295:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x14dC79964da2C08b23698B3D3cc7Ca32193d9955"},"visibility":"private"},{"constant":true,"id":7314,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"2451:12:27","nodeType":"VariableDeclaration","scope":8042,"src":"2426:66:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"},"id":7313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f3030305f3030305f303030","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2466:15:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"100_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2490:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2484:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2466:26:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"}},"visibility":"private"},{"constant":false,"functionSelector":"2dc0562d","id":7317,"mutability":"mutable","name":"taxWallet","nameLocation":"2562:9:27","nodeType":"VariableDeclaration","scope":8042,"src":"2547:69:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7315,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307862444135373437624644363546303864656235346362343635654238374434306535314231393745","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2574:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbDA5747bFD65F08deb54cb465eB87D40e51B197E"},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":7319,"mutability":"mutable","name":"tradingEnabled","nameLocation":"2700:14:27","nodeType":"VariableDeclaration","scope":8042,"src":"2688:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7318,"name":"bool","nodeType":"ElementaryTypeName","src":"2688:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"global":false,"id":7323,"libraryName":{"id":7320,"name":"EnumerableSet","nameLocations":["2820:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7243,"src":"2820:13:27"},"nodeType":"UsingForDirective","src":"2814:49:27","typeName":{"id":7322,"nodeType":"UserDefinedTypeName","pathNode":{"id":7321,"name":"EnumerableSet.AddressSet","nameLocations":["2838:13:27","2852:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"2838:24:27"},"referencedDeclaration":6956,"src":"2838:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":7326,"mutability":"mutable","name":"_canTrade","nameLocation":"2901:9:27","nodeType":"VariableDeclaration","scope":8042,"src":"2868:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7325,"nodeType":"UserDefinedTypeName","pathNode":{"id":7324,"name":"EnumerableSet.AddressSet","nameLocations":["2868:13:27","2882:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"2868:24:27"},"referencedDeclaration":6956,"src":"2868:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"id":7329,"mutability":"mutable","name":"_exempted","nameLocation":"3010:9:27","nodeType":"VariableDeclaration","scope":8042,"src":"2977:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7328,"nodeType":"UserDefinedTypeName","pathNode":{"id":7327,"name":"EnumerableSet.AddressSet","nameLocations":["2977:13:27","2991:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":6956,"src":"2977:24:27"},"referencedDeclaration":6956,"src":"2977:24:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"ae7b6d16","id":7331,"mutability":"mutable","name":"taxPercentage","nameLocation":"3040:13:27","nodeType":"VariableDeclaration","scope":8042,"src":"3025:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c7","id":7333,"name":"TradingEnabled","nameLocation":"3111:14:27","nodeType":"EventDefinition","parameters":{"id":7332,"nodeType":"ParameterList","parameters":[],"src":"3125:2:27"},"src":"3105:23:27"},{"anonymous":false,"eventSelector":"4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a5","id":7339,"name":"TaxPercentageUpdated","nameLocation":"3179:20:27","nodeType":"EventDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"indexed":false,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"3208:16:27","nodeType":"VariableDeclaration","scope":7339,"src":"3200:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7337,"indexed":false,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"3234:16:27","nodeType":"VariableDeclaration","scope":7339,"src":"3226:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3199:52:27"},"src":"3173:79:27"},{"anonymous":false,"eventSelector":"36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d","id":7345,"name":"TaxExemptionUpdated","nameLocation":"3350:19:27","nodeType":"EventDefinition","parameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"3386:6:27","nodeType":"VariableDeclaration","scope":7345,"src":"3370:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7340,"name":"address","nodeType":"ElementaryTypeName","src":"3370:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7343,"indexed":false,"mutability":"mutable","name":"exempted","nameLocation":"3399:8:27","nodeType":"VariableDeclaration","scope":7345,"src":"3394:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7342,"name":"bool","nodeType":"ElementaryTypeName","src":"3394:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:39:27"},"src":"3344:65:27"},{"anonymous":false,"eventSelector":"0a3568000da48cc6e5e2c8e7a94d1bfa3607d1734c7dbd7b04ac9d77316b471a","id":7351,"name":"TaxWalletChanged","nameLocation":"3472:16:27","nodeType":"EventDefinition","parameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"indexed":false,"mutability":"mutable","name":"oldAddress","nameLocation":"3497:10:27","nodeType":"VariableDeclaration","scope":7351,"src":"3489:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7346,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7349,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"3517:10:27","nodeType":"VariableDeclaration","scope":7351,"src":"3509:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7348,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3488:40:27"},"src":"3466:63:27"},{"canonicalName":"AraraCoin.ApprovalInfo","id":7360,"members":[{"constant":false,"id":7353,"mutability":"mutable","name":"count","nameLocation":"3649:5:27","nodeType":"VariableDeclaration","scope":7360,"src":"3641:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7355,"mutability":"mutable","name":"expiration","nameLocation":"3672:10:27","nodeType":"VariableDeclaration","scope":7360,"src":"3664:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7359,"mutability":"mutable","name":"approvedBy","nameLocation":"3717:10:27","nodeType":"VariableDeclaration","scope":7360,"src":"3692:35:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7358,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7356,"name":"address","nodeType":"ElementaryTypeName","src":"3700:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3692:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7357,"name":"bool","nodeType":"ElementaryTypeName","src":"3711:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ApprovalInfo","nameLocation":"3618:12:27","nodeType":"StructDefinition","scope":8042,"src":"3611:162:27","visibility":"public"},{"constant":false,"id":7365,"mutability":"mutable","name":"_approvals","nameLocation":"3823:10:27","nodeType":"VariableDeclaration","scope":8042,"src":"3782:51:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo)"},"typeName":{"id":7364,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3782:32:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7363,"nodeType":"UserDefinedTypeName","pathNode":{"id":7362,"name":"ApprovalInfo","nameLocations":["3801:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7360,"src":"3801:12:27"},"referencedDeclaration":7360,"src":"3801:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo"}}},"visibility":"private"},{"constant":true,"id":7368,"mutability":"constant","name":"_requiredApprovals","nameLocation":"3941:18:27","nodeType":"VariableDeclaration","scope":8042,"src":"3916:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3916:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":7371,"mutability":"constant","name":"_approvalExpirationTime","nameLocation":"3994:23:27","nodeType":"VariableDeclaration","scope":8042,"src":"3969:55:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33363030","id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:4:27","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"3600"},"visibility":"private"},{"body":{"id":7561,"nodeType":"Block","src":"4416:1986:27","statements":[{"expression":{"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7385,"name":"managerWallet1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"4468:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7386,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"4485:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4468:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7388,"nodeType":"ExpressionStatement","src":"4468:29:27"},{"expression":{"arguments":[{"id":7390,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"4518:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7391,"name":"managerWallet1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"4532:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7389,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4507:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"ExpressionStatement","src":"4507:40:27"},{"expression":{"arguments":[{"id":7395,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"4568:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7396,"name":"managerWallet2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4582:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7394,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4557:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4557:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7398,"nodeType":"ExpressionStatement","src":"4557:40:27"},{"expression":{"arguments":[{"id":7400,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"4618:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7401,"name":"managerWallet3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4632:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7399,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4607:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7403,"nodeType":"ExpressionStatement","src":"4607:40:27"},{"expression":{"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7404,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"4658:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4674:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4658:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7407,"nodeType":"ExpressionStatement","src":"4658:17:27"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4854:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7411,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:27","typeDescriptions":{}}},"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4854:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7408,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"4840:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4850:3:27","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6983,"src":"4840:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4840:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"nodeType":"ExpressionStatement","src":"4840:25:27"},{"expression":{"arguments":[{"id":7420,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"4890:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7417,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"4876:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4886:3:27","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6983,"src":"4876:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7422,"nodeType":"ExpressionStatement","src":"4876:27:27"},{"expression":{"arguments":[{"expression":{"id":7424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4985:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4989:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4985:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7426,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"4997:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7423,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"4979:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4979:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7428,"nodeType":"ExpressionStatement","src":"4979:31:27"},{"expression":{"arguments":[{"expression":{"id":7430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5111:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5115:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5111:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7432,"name":"marketingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"5123:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"},"id":7437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"335f3030305f3030305f303030","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5140:13:27","typeDescriptions":{"typeIdentifier":"t_rational_3000000000_by_1","typeString":"int_const 3000000000"},"value":"3_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5156:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5162:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5156:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5140:24:27","typeDescriptions":{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"}],"id":7429,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5101:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5101:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7439,"nodeType":"ExpressionStatement","src":"5101:64:27"},{"expression":{"arguments":[{"expression":{"id":7441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5214:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5218:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5214:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7443,"name":"consultingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"5226:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"},"id":7448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3235305f3030305f303030","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5244:13:27","typeDescriptions":{"typeIdentifier":"t_rational_1250000000_by_1","typeString":"int_const 1250000000"},"value":"1_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5260:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5266:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5260:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5244:24:27","typeDescriptions":{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"}],"id":7440,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5204:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7450,"nodeType":"ExpressionStatement","src":"5204:65:27"},{"expression":{"arguments":[{"expression":{"id":7452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5322:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5326:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5322:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7454,"name":"auditWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"5334:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"},"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3735305f3030305f303030","id":7455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5347:11:27","typeDescriptions":{"typeIdentifier":"t_rational_750000000_by_1","typeString":"int_const 750000000"},"value":"750_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5361:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5367:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5361:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5347:22:27","typeDescriptions":{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"}],"id":7451,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5312:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7461,"nodeType":"ExpressionStatement","src":"5312:58:27"},{"expression":{"arguments":[{"expression":{"id":7463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5417:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5421:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5417:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7465,"name":"preSaleWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"5429:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7466,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"5444:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5459:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"5444:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5464:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5444:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7462,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5407:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7472,"nodeType":"ExpressionStatement","src":"5407:61:27"},{"expression":{"arguments":[{"expression":{"id":7474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5507:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5511:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5507:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7476,"name":"launchWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"5519:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7477,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"5533:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5548:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"5533:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5553:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5533:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5497:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5497:60:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7483,"nodeType":"ExpressionStatement","src":"5497:60:27"},{"expression":{"arguments":[{"expression":{"id":7485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5594:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5598:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5594:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7487,"name":"investorsWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"5606:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"},"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"365f3235305f3030305f303030","id":7488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5623:13:27","typeDescriptions":{"typeIdentifier":"t_rational_6250000000_by_1","typeString":"int_const 6250000000"},"value":"6_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5645:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5639:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5623:24:27","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}],"id":7484,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5584:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5584:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7494,"nodeType":"ExpressionStatement","src":"5584:64:27"},{"expression":{"arguments":[{"expression":{"id":7496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5699:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5703:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5699:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7498,"name":"investorsYearOneVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"5711:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"},"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"365f3235305f3030305f303030","id":7499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5742:13:27","typeDescriptions":{"typeIdentifier":"t_rational_6250000000_by_1","typeString":"int_const 6250000000"},"value":"6_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5764:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5758:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5742:24:27","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}],"id":7495,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5689:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7505,"nodeType":"ExpressionStatement","src":"5689:78:27"},{"expression":{"arguments":[{"expression":{"id":7507,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5836:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5840:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5836:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7509,"name":"investorsYearTwoVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"5848:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"},"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31325f3530305f3030305f303030","id":7510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5879:14:27","typeDescriptions":{"typeIdentifier":"t_rational_12500000000_by_1","typeString":"int_const 12500000000"},"value":"12_500_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5896:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5896:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"5879:25:27","typeDescriptions":{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"}],"id":7506,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5826:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5826:79:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"5826:79:27"},{"expression":{"arguments":[{"expression":{"id":7518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5974:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5978:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5974:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7520,"name":"companyVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"5986:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"},"id":7525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"395f3630305f3030305f303030","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:13:27","typeDescriptions":{"typeIdentifier":"t_rational_9600000000_by_1","typeString":"int_const 9600000000"},"value":"9_600_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6024:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6030:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6024:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6008:24:27","typeDescriptions":{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"}],"id":7517,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5964:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5964:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7527,"nodeType":"ExpressionStatement","src":"5964:69:27"},{"expression":{"arguments":[{"expression":{"id":7529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6081:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6085:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6081:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7531,"name":"foundersVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"6093:21:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"},"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"355f3630305f3030305f303030","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6116:13:27","typeDescriptions":{"typeIdentifier":"t_rational_5600000000_by_1","typeString":"int_const 5600000000"},"value":"5_600_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6132:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6138:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6132:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6116:24:27","typeDescriptions":{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"}],"id":7528,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6071:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7538,"nodeType":"ExpressionStatement","src":"6071:70:27"},{"expression":{"arguments":[{"expression":{"id":7540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6189:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6189:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7542,"name":"teamVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"6201:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"},"id":7547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"345f3830305f3030305f303030","id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:13:27","typeDescriptions":{"typeIdentifier":"t_rational_4800000000_by_1","typeString":"int_const 4800000000"},"value":"4_800_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6236:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6242:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6236:8:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6220:24:27","typeDescriptions":{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"}],"id":7539,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6179:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6179:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7549,"nodeType":"ExpressionStatement","src":"6179:66:27"},{"expression":{"arguments":[{"expression":{"id":7551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6290:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6294:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6290:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7553,"name":"preservationProjectsVestingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"6302:35:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7554,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"6339:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":7555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6339:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6359:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6339:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7550,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6280:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7560,"nodeType":"ExpressionStatement","src":"6280:83:27"}]},"id":7562,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4172617261636f696e","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4245:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_41526a4d9c160f61cf87b2cc71406a3fbddfce00df1163f1c54f14e429f8567d","typeString":"literal_string \"Araracoin\""},"value":"Araracoin"},{"hexValue":"4152415241","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4258:7:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6fbf0df9669579bc041acad852827b4fd3e60d7c49ffc02601612dc0ae75d22f","typeString":"literal_string \"ARARA\""},"value":"ARARA"}],"id":7380,"kind":"baseConstructorSpecifier","modifierName":{"id":7377,"name":"ERC20","nameLocations":["4239:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1514,"src":"4239:5:27"},"nodeType":"ModifierInvocation","src":"4239:27:27"},{"arguments":[{"hexValue":"4172617261636f696e","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4340:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_41526a4d9c160f61cf87b2cc71406a3fbddfce00df1163f1c54f14e429f8567d","typeString":"literal_string \"Araracoin\""},"value":"Araracoin"}],"id":7383,"kind":"baseConstructorSpecifier","modifierName":{"id":7381,"name":"ERC20Permit","nameLocations":["4328:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"4328:11:27"},"nodeType":"ModifierInvocation","src":"4328:24:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"defaultAdmin","nameLocation":"4172:12:27","nodeType":"VariableDeclaration","scope":7562,"src":"4164:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7372,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7375,"mutability":"mutable","name":"preservationProjectsVestingContract","nameLocation":"4194:35:27","nodeType":"VariableDeclaration","scope":7562,"src":"4186:43:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7374,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4163:67:27"},"returnParameters":{"id":7384,"nodeType":"ParameterList","parameters":[],"src":"4416:0:27"},"scope":8042,"src":"4152:2250:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7616,"nodeType":"Block","src":"6518:394:27","statements":[{"assignments":[7569],"declarations":[{"constant":false,"id":7569,"mutability":"mutable","name":"approval","nameLocation":"6549:8:27","nodeType":"VariableDeclaration","scope":7616,"src":"6528:29:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo"},"typeName":{"id":7568,"nodeType":"UserDefinedTypeName","pathNode":{"id":7567,"name":"ApprovalInfo","nameLocations":["6528:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7360,"src":"6528:12:27"},"referencedDeclaration":7360,"src":"6528:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo"}},"visibility":"internal"}],"id":7573,"initialValue":{"baseExpression":{"id":7570,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"6560:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7572,"indexExpression":{"id":7571,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"6571:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6560:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6528:50:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7574,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6592:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6601:10:27","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":7355,"src":"6592:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6614:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6592:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7578,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6619:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6625:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"6619:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7580,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6637:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6646:10:27","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":7355,"src":"6637:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6619:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6592:64:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"IfStatement","src":"6588:318:27","trueBody":{"id":7614,"nodeType":"Block","src":"6658:248:27","statements":[{"expression":{"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7584,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6672:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6681:5:27","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"6672:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6689:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6672:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7589,"nodeType":"ExpressionStatement","src":"6672:18:27"},{"expression":{"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7590,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6704:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6713:10:27","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":7355,"src":"6704:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6726:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6704:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7595,"nodeType":"ExpressionStatement","src":"6704:23:27"},{"expression":{"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6741:42:27","subExpression":{"baseExpression":{"expression":{"id":7596,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6748:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6757:10:27","memberName":"approvedBy","nodeType":"MemberAccess","referencedDeclaration":7359,"src":"6748:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7599,"indexExpression":{"id":7598,"name":"managerWallet1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"6768:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6748:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7601,"nodeType":"ExpressionStatement","src":"6741:42:27"},{"expression":{"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6797:42:27","subExpression":{"baseExpression":{"expression":{"id":7602,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6804:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6813:10:27","memberName":"approvedBy","nodeType":"MemberAccess","referencedDeclaration":7359,"src":"6804:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7605,"indexExpression":{"id":7604,"name":"managerWallet2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"6824:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6804:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7607,"nodeType":"ExpressionStatement","src":"6797:42:27"},{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6853:42:27","subExpression":{"baseExpression":{"expression":{"id":7608,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"6860:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6869:10:27","memberName":"approvedBy","nodeType":"MemberAccess","referencedDeclaration":7359,"src":"6860:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7611,"indexExpression":{"id":7610,"name":"managerWallet3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"6880:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6860:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7613,"nodeType":"ExpressionStatement","src":"6853:42:27"}]}}]},"id":7617,"implemented":true,"kind":"function","modifiers":[],"name":"_resetApprovalIfExpired","nameLocation":"6470:23:27","nodeType":"FunctionDefinition","parameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"txHash","nameLocation":"6502:6:27","nodeType":"VariableDeclaration","scope":7617,"src":"6494:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6494:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6493:16:27"},"returnParameters":{"id":7566,"nodeType":"ParameterList","parameters":[],"src":"6518:0:27"},"scope":8042,"src":"6461:451:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7669,"nodeType":"Block","src":"7017:377:27","statements":[{"expression":{"arguments":[{"id":7623,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"7051:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7622,"name":"_resetApprovalIfExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"7027:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7625,"nodeType":"ExpressionStatement","src":"7027:31:27"},{"expression":{"arguments":[{"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7076:42:27","subExpression":{"baseExpression":{"expression":{"baseExpression":{"id":7627,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"7077:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7629,"indexExpression":{"id":7628,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"7088:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7077:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"id":7630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7096:10:27","memberName":"approvedBy","nodeType":"MemberAccess","referencedDeclaration":7359,"src":"7077:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7633,"indexExpression":{"expression":{"id":7631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7107:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7111:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7107:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7077:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a20596f75206861766520616c726561647920617070726f7665642074686973207472616e73616374696f6e2e","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7120:56:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2","typeString":"literal_string \"AraraCoin: You have already approved this transaction.\""},"value":"AraraCoin: You have already approved this transaction."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2","typeString":"literal_string \"AraraCoin: You have already approved this transaction.\""}],"id":7626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7068:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:109:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7637,"nodeType":"ExpressionStatement","src":"7068:109:27"},{"assignments":[7640],"declarations":[{"constant":false,"id":7640,"mutability":"mutable","name":"approval","nameLocation":"7208:8:27","nodeType":"VariableDeclaration","scope":7669,"src":"7187:29:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo"},"typeName":{"id":7639,"nodeType":"UserDefinedTypeName","pathNode":{"id":7638,"name":"ApprovalInfo","nameLocations":["7187:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7360,"src":"7187:12:27"},"referencedDeclaration":7360,"src":"7187:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo"}},"visibility":"internal"}],"id":7644,"initialValue":{"baseExpression":{"id":7641,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"7219:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7643,"indexExpression":{"id":7642,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"7230:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7219:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7187:50:27"},{"expression":{"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7645,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"7247:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7256:10:27","memberName":"approvedBy","nodeType":"MemberAccess","referencedDeclaration":7359,"src":"7247:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7650,"indexExpression":{"expression":{"id":7647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7267:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7271:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7267:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7247:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7281:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7247:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7653,"nodeType":"ExpressionStatement","src":"7247:38:27"},{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7654,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"7295:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7304:5:27","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"7295:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7313:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7295:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7659,"nodeType":"ExpressionStatement","src":"7295:19:27"},{"expression":{"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7660,"name":"approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"7324:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage_ptr","typeString":"struct AraraCoin.ApprovalInfo storage pointer"}},"id":7662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7333:10:27","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":7355,"src":"7324:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7663,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7346:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7352:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7346:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7665,"name":"_approvalExpirationTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"7364:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7346:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7324:63:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7668,"nodeType":"ExpressionStatement","src":"7324:63:27"}]},"id":7670,"implemented":true,"kind":"function","modifiers":[],"name":"_processApproval","nameLocation":"6976:16:27","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"txHash","nameLocation":"7001:6:27","nodeType":"VariableDeclaration","scope":7670,"src":"6993:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:16:27"},"returnParameters":{"id":7621,"nodeType":"ParameterList","parameters":[],"src":"7017:0:27"},"scope":8042,"src":"6967:427:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7710,"nodeType":"Block","src":"7531:501:27","statements":[{"expression":{"arguments":[{"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7549:15:27","subExpression":{"id":7677,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7550:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a2074726164696e6720616c726561647920656e61626c6564","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7566:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816","typeString":"literal_string \"AraraCoin: trading already enabled\""},"value":"AraraCoin: trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816","typeString":"literal_string \"AraraCoin: trading already enabled\""}],"id":7676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7541:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7541:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7681,"nodeType":"ExpressionStatement","src":"7541:62:27"},{"assignments":[7683],"declarations":[{"constant":false,"id":7683,"mutability":"mutable","name":"txHash","nameLocation":"7664:6:27","nodeType":"VariableDeclaration","scope":7710,"src":"7656:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7656:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7690,"initialValue":{"arguments":[{"arguments":[{"hexValue":"456e61626c6554726164696e67","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7700:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61","typeString":"literal_string \"EnableTrading\""},"value":"EnableTrading"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61","typeString":"literal_string \"EnableTrading\""}],"expression":{"id":7685,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7683:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7687:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"7683:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7673:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7673:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7656:61:27"},{"expression":{"arguments":[{"id":7692,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"7796:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7691,"name":"_processApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"7779:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7779:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7694,"nodeType":"ExpressionStatement","src":"7779:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7695,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"7826:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7697,"indexExpression":{"id":7696,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"7837:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7826:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"id":7698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7845:5:27","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"7826:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7699,"name":"_requiredApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"7854:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7709,"nodeType":"IfStatement","src":"7822:203:27","trueBody":{"id":7708,"nodeType":"Block","src":"7874:151:27","statements":[{"expression":{"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7701,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7888:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7905:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7888:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7704,"nodeType":"ExpressionStatement","src":"7888:21:27"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7705,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"7954:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7954:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7707,"nodeType":"EmitStatement","src":"7949:21:27"}]}}]},"functionSelector":"8a8c523c","id":7711,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7673,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"7517:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7674,"kind":"modifierInvocation","modifierName":{"id":7672,"name":"onlyRole","nameLocations":["7508:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7508:8:27"},"nodeType":"ModifierInvocation","src":"7508:22:27"}],"name":"enableTrading","nameLocation":"7485:13:27","nodeType":"FunctionDefinition","parameters":{"id":7671,"nodeType":"ParameterList","parameters":[],"src":"7498:2:27"},"returnParameters":{"id":7675,"nodeType":"ParameterList","parameters":[],"src":"7531:0:27"},"scope":8042,"src":"7476:556:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7772,"nodeType":"Block","src":"8204:715:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7720,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8284:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8304:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8284:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8309:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":7724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8329:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8309:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8284:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a205461782070657263656e74616765206d757374206265206265747765656e203020616e642031303020626173697320706f696e747320286d6178203125292e","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8334:76:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c","typeString":"literal_string \"AraraCoin: Tax percentage must be between 0 and 100 basis points (max 1%).\""},"value":"AraraCoin: Tax percentage must be between 0 and 100 basis points (max 1%)."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c","typeString":"literal_string \"AraraCoin: Tax percentage must be between 0 and 100 basis points (max 1%).\""}],"id":7719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8276:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:135:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7729,"nodeType":"ExpressionStatement","src":"8276:135:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7731,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"8429:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7732,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8446:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8429:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a204e6577207461782070657263656e74616765206d75737420626520646966666572656e742066726f6d207468652063757272656e742076616c75652e","id":7734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8464:73:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78","typeString":"literal_string \"AraraCoin: New tax percentage must be different from the current value.\""},"value":"AraraCoin: New tax percentage must be different from the current value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78","typeString":"literal_string \"AraraCoin: New tax percentage must be different from the current value.\""}],"id":7730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8421:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8421:117:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7736,"nodeType":"ExpressionStatement","src":"8421:117:27"},{"assignments":[7738],"declarations":[{"constant":false,"id":7738,"mutability":"mutable","name":"txHash","nameLocation":"8565:6:27","nodeType":"VariableDeclaration","scope":7772,"src":"8557:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8557:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7746,"initialValue":{"arguments":[{"arguments":[{"hexValue":"4e6577546178","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8601:8:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354","typeString":"literal_string \"NewTax\""},"value":"NewTax"},{"id":7743,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8611:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354","typeString":"literal_string \"NewTax\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7740,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8584:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8588:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"8584:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7739,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8574:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8574:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8557:72:27"},{"expression":{"arguments":[{"id":7748,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"8656:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7747,"name":"_processApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"8639:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8639:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7750,"nodeType":"ExpressionStatement","src":"8639:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7751,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"8678:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7753,"indexExpression":{"id":7752,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"8689:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8678:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"id":7754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8697:5:27","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"8678:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7755,"name":"_requiredApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"8706:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8678:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"IfStatement","src":"8674:239:27","trueBody":{"id":7770,"nodeType":"Block","src":"8726:187:27","statements":[{"assignments":[7758],"declarations":[{"constant":false,"id":7758,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"8748:16:27","nodeType":"VariableDeclaration","scope":7770,"src":"8740:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint256","nodeType":"ElementaryTypeName","src":"8740:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7760,"initialValue":{"id":7759,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"8767:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8740:40:27"},{"expression":{"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7761,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"8794:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7762,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8810:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8794:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7764,"nodeType":"ExpressionStatement","src":"8794:32:27"},{"eventCall":{"arguments":[{"id":7766,"name":"oldTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"8867:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7767,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"8885:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7765,"name":"TaxPercentageUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"8846:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8846:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7769,"nodeType":"EmitStatement","src":"8841:61:27"}]}}]},"functionSelector":"699abb3c","id":7773,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7716,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"8190:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7717,"kind":"modifierInvocation","modifierName":{"id":7715,"name":"onlyRole","nameLocations":["8181:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8181:8:27"},"nodeType":"ModifierInvocation","src":"8181:22:27"}],"name":"setTaxPercentage","nameLocation":"8131:16:27","nodeType":"FunctionDefinition","parameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7713,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"8156:16:27","nodeType":"VariableDeclaration","scope":7773,"src":"8148:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7712,"name":"uint256","nodeType":"ElementaryTypeName","src":"8148:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8147:26:27"},"returnParameters":{"id":7718,"nodeType":"ParameterList","parameters":[],"src":"8204:0:27"},"scope":8042,"src":"8122:797:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7816,"nodeType":"Block","src":"9094:540:27","statements":[{"assignments":[7782],"declarations":[{"constant":false,"id":7782,"mutability":"mutable","name":"txHash","nameLocation":"9112:6:27","nodeType":"VariableDeclaration","scope":7816,"src":"9104:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9104:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7790,"initialValue":{"arguments":[{"arguments":[{"hexValue":"54617857616c6c6574","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9148:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7","typeString":"literal_string \"TaxWallet\""},"value":"TaxWallet"},{"id":7787,"name":"taxWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"9161:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7","typeString":"literal_string \"TaxWallet\""},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7784,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9131:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9135:12:27","memberName":"encodePacked","nodeType":"MemberAccess","src":"9131:16:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7783,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9121:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9121:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9104:75:27"},{"expression":{"arguments":[{"id":7792,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"9258:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7791,"name":"_processApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"9241:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"ExpressionStatement","src":"9241:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7795,"name":"_approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"9280:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ApprovalInfo_$7360_storage_$","typeString":"mapping(bytes32 => struct AraraCoin.ApprovalInfo storage ref)"}},"id":7797,"indexExpression":{"id":7796,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"9291:6:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9280:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_ApprovalInfo_$7360_storage","typeString":"struct AraraCoin.ApprovalInfo storage ref"}},"id":7798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9299:5:27","memberName":"count","nodeType":"MemberAccess","referencedDeclaration":7353,"src":"9280:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7799,"name":"_requiredApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"9308:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9280:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7815,"nodeType":"IfStatement","src":"9276:352:27","trueBody":{"id":7814,"nodeType":"Block","src":"9328:300:27","statements":[{"assignments":[7802],"declarations":[{"constant":false,"id":7802,"mutability":"mutable","name":"oldTaxWalletAddress","nameLocation":"9350:19:27","nodeType":"VariableDeclaration","scope":7814,"src":"9342:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7801,"name":"address","nodeType":"ElementaryTypeName","src":"9342:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7804,"initialValue":{"id":7803,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"9372:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9342:39:27"},{"expression":{"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7805,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"9435:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7806,"name":"taxWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"9447:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9435:28:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7808,"nodeType":"ExpressionStatement","src":"9435:28:27"},{"eventCall":{"arguments":[{"id":7810,"name":"oldTaxWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7802,"src":"9534:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7811,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"9555:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7809,"name":"TaxWalletChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"9517:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9517:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7813,"nodeType":"EmitStatement","src":"9512:53:27"}]}}]},"functionSelector":"ea414b28","id":7817,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7778,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"9080:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7779,"kind":"modifierInvocation","modifierName":{"id":7777,"name":"onlyRole","nameLocations":["9071:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9071:8:27"},"nodeType":"ModifierInvocation","src":"9071:22:27"}],"name":"setTaxWallet","nameLocation":"9025:12:27","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"taxWalletAddress","nameLocation":"9046:16:27","nodeType":"VariableDeclaration","scope":7817,"src":"9038:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7774,"name":"address","nodeType":"ElementaryTypeName","src":"9038:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9037:26:27"},"returnParameters":{"id":7780,"nodeType":"ParameterList","parameters":[],"src":"9094:0:27"},"scope":8042,"src":"9016:618:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7838,"nodeType":"Block","src":"9785:165:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7828,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"9817:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7826,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"9803:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9813:3:27","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6983,"src":"9803:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a204164647265737320616c72656164792065786973747320696e20746865206578656d7074696f6e73","id":7830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9829:53:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402","typeString":"literal_string \"AraraCoin: Address already exists in the exemptions\""},"value":"AraraCoin: Address already exists in the exemptions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402","typeString":"literal_string \"AraraCoin: Address already exists in the exemptions\""}],"id":7825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9795:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9795:88:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7832,"nodeType":"ExpressionStatement","src":"9795:88:27"},{"eventCall":{"arguments":[{"id":7834,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"9919:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9930:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7833,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"9899:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9899:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7837,"nodeType":"EmitStatement","src":"9894:41:27"}]},"functionSelector":"705931fa","id":7839,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7822,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"9771:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7823,"kind":"modifierInvocation","modifierName":{"id":7821,"name":"onlyRole","nameLocations":["9762:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9762:8:27"},"nodeType":"ModifierInvocation","src":"9762:22:27"}],"name":"addExemption","nameLocation":"9723:12:27","nodeType":"FunctionDefinition","parameters":{"id":7820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7819,"mutability":"mutable","name":"exemption","nameLocation":"9744:9:27","nodeType":"VariableDeclaration","scope":7839,"src":"9736:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7818,"name":"address","nodeType":"ElementaryTypeName","src":"9736:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9735:19:27"},"returnParameters":{"id":7824,"nodeType":"ParameterList","parameters":[],"src":"9785:0:27"},"scope":8042,"src":"9714:236:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7860,"nodeType":"Block","src":"10095:156:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7850,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"10130:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7848,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"10113:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10123:6:27","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7010,"src":"10113:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10113:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a2041646472657373206e6f7420666f756e6420696e20746865206578656d7074696f6e73","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10142:48:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a","typeString":"literal_string \"AraraCoin: Address not found in the exemptions\""},"value":"AraraCoin: Address not found in the exemptions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a","typeString":"literal_string \"AraraCoin: Address not found in the exemptions\""}],"id":7847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10105:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10105:86:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7854,"nodeType":"ExpressionStatement","src":"10105:86:27"},{"eventCall":{"arguments":[{"id":7856,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"10227:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10238:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7855,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"10207:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10207:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7859,"nodeType":"EmitStatement","src":"10202:42:27"}]},"functionSelector":"0ed9cc4c","id":7861,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7844,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"10081:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7845,"kind":"modifierInvocation","modifierName":{"id":7843,"name":"onlyRole","nameLocations":["10072:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10072:8:27"},"nodeType":"ModifierInvocation","src":"10072:22:27"}],"name":"removeExemption","nameLocation":"10030:15:27","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"exemption","nameLocation":"10054:9:27","nodeType":"VariableDeclaration","scope":7861,"src":"10046:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"10046:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10045:19:27"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[],"src":"10095:0:27"},"scope":8042,"src":"10021:230:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7905,"nodeType":"Block","src":"10475:469:27","statements":[{"expression":{"arguments":[{"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10493:15:27","subExpression":{"id":7871,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"10494:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a2054726164696e6720616c726561647920656e61626c6564","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10510:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","typeString":"literal_string \"AraraCoin: Trading already enabled\""},"value":"AraraCoin: Trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","typeString":"literal_string \"AraraCoin: Trading already enabled\""}],"id":7870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10485:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10485:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7875,"nodeType":"ExpressionStatement","src":"10485:62:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7877,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"10601:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10618:6:27","memberName":"length","nodeType":"MemberAccess","src":"10601:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10628:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10601:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a204c697374206f6620616c6c6f776564206164647265737365732063616e6e6f7420626520656d7074792e","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10631:55:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","typeString":"literal_string \"AraraCoin: List of allowed addresses cannot be empty.\""},"value":"AraraCoin: List of allowed addresses cannot be empty."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","typeString":"literal_string \"AraraCoin: List of allowed addresses cannot be empty.\""}],"id":7876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10593:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10593:94:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7883,"nodeType":"ExpressionStatement","src":"10593:94:27"},{"body":{"id":7903,"nodeType":"Block","src":"10879:59:27","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7898,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"10907:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7900,"indexExpression":{"id":7899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"10924:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10907:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7895,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"10893:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:3:27","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6983,"src":"10893:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10893:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7902,"nodeType":"ExpressionStatement","src":"10893:34:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"10845:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7889,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"10849:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10866:6:27","memberName":"length","nodeType":"MemberAccess","src":"10849:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10845:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7904,"initializationExpression":{"assignments":[7885],"declarations":[{"constant":false,"id":7885,"mutability":"mutable","name":"i","nameLocation":"10838:1:27","nodeType":"VariableDeclaration","scope":7904,"src":"10830:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7887,"initialValue":{"hexValue":"30","id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10842:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10830:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10874:3:27","subExpression":{"id":7892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"10874:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7894,"nodeType":"ExpressionStatement","src":"10874:3:27"},"nodeType":"ForStatement","src":"10825:113:27"}]},"functionSelector":"ca40f1c4","id":7906,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7867,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"10461:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7868,"kind":"modifierInvocation","modifierName":{"id":7866,"name":"onlyRole","nameLocations":["10452:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10452:8:27"},"nodeType":"ModifierInvocation","src":"10452:22:27"}],"name":"addCanTrade","nameLocation":"10382:11:27","nodeType":"FunctionDefinition","parameters":{"id":7865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7864,"mutability":"mutable","name":"allowedAddresses","nameLocation":"10422:16:27","nodeType":"VariableDeclaration","scope":7906,"src":"10403:35:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7862,"name":"address","nodeType":"ElementaryTypeName","src":"10403:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7863,"nodeType":"ArrayTypeName","src":"10403:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10393:51:27"},"returnParameters":{"id":7869,"nodeType":"ParameterList","parameters":[],"src":"10475:0:27"},"scope":8042,"src":"10373:571:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7950,"nodeType":"Block","src":"11185:472:27","statements":[{"expression":{"arguments":[{"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11203:15:27","subExpression":{"id":7916,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"11204:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a2054726164696e6720616c726561647920656e61626c6564","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11220:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","typeString":"literal_string \"AraraCoin: Trading already enabled\""},"value":"AraraCoin: Trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","typeString":"literal_string \"AraraCoin: Trading already enabled\""}],"id":7915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11195:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11195:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7920,"nodeType":"ExpressionStatement","src":"11195:62:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7922,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"11311:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11328:6:27","memberName":"length","nodeType":"MemberAccess","src":"11311:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11311:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a204c697374206f6620616c6c6f776564206164647265737365732063616e6e6f7420626520656d7074792e","id":7926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11341:55:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","typeString":"literal_string \"AraraCoin: List of allowed addresses cannot be empty.\""},"value":"AraraCoin: List of allowed addresses cannot be empty."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","typeString":"literal_string \"AraraCoin: List of allowed addresses cannot be empty.\""}],"id":7921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11303:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11303:94:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7928,"nodeType":"ExpressionStatement","src":"11303:94:27"},{"body":{"id":7948,"nodeType":"Block","src":"11589:62:27","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7943,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"11620:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7945,"indexExpression":{"id":7944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"11637:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11620:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7940,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"11603:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11613:6:27","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7010,"src":"11603:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11603:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7947,"nodeType":"ExpressionStatement","src":"11603:37:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"11555:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7934,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"11559:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11576:6:27","memberName":"length","nodeType":"MemberAccess","src":"11559:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11555:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7949,"initializationExpression":{"assignments":[7930],"declarations":[{"constant":false,"id":7930,"mutability":"mutable","name":"i","nameLocation":"11548:1:27","nodeType":"VariableDeclaration","scope":7949,"src":"11540:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7929,"name":"uint256","nodeType":"ElementaryTypeName","src":"11540:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7932,"initialValue":{"hexValue":"30","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11552:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11540:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11584:3:27","subExpression":{"id":7937,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"11584:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7939,"nodeType":"ExpressionStatement","src":"11584:3:27"},"nodeType":"ForStatement","src":"11535:116:27"}]},"functionSelector":"7ac93119","id":7951,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7912,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"11171:12:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7913,"kind":"modifierInvocation","modifierName":{"id":7911,"name":"onlyRole","nameLocations":["11162:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"11162:8:27"},"nodeType":"ModifierInvocation","src":"11162:22:27"}],"name":"removeCanTrade","nameLocation":"11089:14:27","nodeType":"FunctionDefinition","parameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"allowedAddresses","nameLocation":"11132:16:27","nodeType":"VariableDeclaration","scope":7951,"src":"11113:35:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7907,"name":"address","nodeType":"ElementaryTypeName","src":"11113:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7908,"nodeType":"ArrayTypeName","src":"11113:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11103:51:27"},"returnParameters":{"id":7914,"nodeType":"ParameterList","parameters":[],"src":"11185:0:27"},"scope":8042,"src":"11080:577:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1321],"body":{"id":8009,"nodeType":"Block","src":"11836:629:27","statements":[{"condition":{"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11930:15:27","subExpression":{"id":7962,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"11931:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7973,"nodeType":"IfStatement","src":"11926:111:27","trueBody":{"id":7972,"nodeType":"Block","src":"11947:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7967,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"11988:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7965,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"11969:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11979:8:27","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"11969:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11969:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e3a2054726164652069732064697361626c6564","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11995:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","typeString":"literal_string \"AraraCoin: Trade is disabled\""},"value":"AraraCoin: Trade is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","typeString":"literal_string \"AraraCoin: Trade is disabled\""}],"id":7964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11961:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11961:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7971,"nodeType":"ExpressionStatement","src":"11961:65:27"}]}},{"assignments":[7975],"declarations":[{"constant":false,"id":7975,"mutability":"mutable","name":"tax","nameLocation":"12126:3:27","nodeType":"VariableDeclaration","scope":8009,"src":"12118:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7974,"name":"uint256","nodeType":"ElementaryTypeName","src":"12118:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7981,"initialValue":{"arguments":[{"id":7977,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"12140:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"12146:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"12150:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7976,"name":"_getTax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"12132:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12132:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12118:38:27"},{"assignments":[7983],"declarations":[{"constant":false,"id":7983,"mutability":"mutable","name":"taxedAmount","nameLocation":"12174:11:27","nodeType":"VariableDeclaration","scope":8009,"src":"12166:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7982,"name":"uint256","nodeType":"ElementaryTypeName","src":"12166:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7987,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"12188:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7985,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"12196:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12188:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12166:33:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7988,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"12286:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12286:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8000,"nodeType":"IfStatement","src":"12282:73:27","trueBody":{"id":7999,"nodeType":"Block","src":"12295:60:27","statements":[{"expression":{"arguments":[{"id":7994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"12323:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7995,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"12329:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7996,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"12340:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7991,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12309:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$8042_$","typeString":"type(contract super AraraCoin)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12315:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1321,"src":"12309:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12309:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7998,"nodeType":"ExpressionStatement","src":"12309:35:27"}]}},{"expression":{"arguments":[{"id":8004,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"12436:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"12442:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8006,"name":"taxedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"12446:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8001,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12422:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$8042_$","typeString":"type(contract super AraraCoin)"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12428:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1321,"src":"12422:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12422:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8008,"nodeType":"ExpressionStatement","src":"12422:36:27"}]},"id":8010,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"11740:7:27","nodeType":"FunctionDefinition","overrides":{"id":7960,"nodeType":"OverrideSpecifier","overrides":[{"id":7959,"name":"ERC20","nameLocations":["11824:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":1514,"src":"11824:5:27"}],"src":"11815:15:27"},"parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7953,"mutability":"mutable","name":"from","nameLocation":"11756:4:27","nodeType":"VariableDeclaration","scope":8010,"src":"11748:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7952,"name":"address","nodeType":"ElementaryTypeName","src":"11748:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7955,"mutability":"mutable","name":"to","nameLocation":"11770:2:27","nodeType":"VariableDeclaration","scope":8010,"src":"11762:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7954,"name":"address","nodeType":"ElementaryTypeName","src":"11762:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7957,"mutability":"mutable","name":"value","nameLocation":"11782:5:27","nodeType":"VariableDeclaration","scope":8010,"src":"11774:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7956,"name":"uint256","nodeType":"ElementaryTypeName","src":"11774:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11747:41:27"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[],"src":"11836:0:27"},"scope":8042,"src":"11731:734:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8040,"nodeType":"Block","src":"12696:322:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8023,"name":"benefactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"12795:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8021,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"12776:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":8022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12786:8:27","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"12776:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12776:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8027,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"12829:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8025,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"12810:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6956_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":8026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12820:8:27","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7037,"src":"12810:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6956_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6956_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12810:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12776:65:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8033,"nodeType":"IfStatement","src":"12772:104:27","trueBody":{"id":8032,"nodeType":"Block","src":"12843:33:27","statements":[{"expression":{"hexValue":"30","id":8030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12864:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8020,"id":8031,"nodeType":"Return","src":"12857:8:27"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"12971:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8035,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"12980:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12971:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8037,"name":"FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"12996:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12971:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8020,"id":8039,"nodeType":"Return","src":"12964:47:27"}]},"id":8041,"implemented":true,"kind":"function","modifiers":[],"name":"_getTax","nameLocation":"12570:7:27","nodeType":"FunctionDefinition","parameters":{"id":8017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"benefactor","nameLocation":"12595:10:27","nodeType":"VariableDeclaration","scope":8041,"src":"12587:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8011,"name":"address","nodeType":"ElementaryTypeName","src":"12587:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8014,"mutability":"mutable","name":"beneficiary","nameLocation":"12623:11:27","nodeType":"VariableDeclaration","scope":8041,"src":"12615:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8013,"name":"address","nodeType":"ElementaryTypeName","src":"12615:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8016,"mutability":"mutable","name":"amount","nameLocation":"12652:6:27","nodeType":"VariableDeclaration","scope":8041,"src":"12644:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8015,"name":"uint256","nodeType":"ElementaryTypeName","src":"12644:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12577:87:27"},"returnParameters":{"id":8020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8041,"src":"12687:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8018,"name":"uint256","nodeType":"ElementaryTypeName","src":"12687:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12686:9:27"},"scope":8042,"src":"12561:457:27","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":8043,"src":"518:12502:27","usedErrors":[305,308,874,879,884,893,898,903,1623,1630,2391,2463,2465,3042,3047,3052],"usedEvents":[317,326,335,842,1526,1535,7333,7339,7345,7351]}],"src":"106:12915:27"},"id":27},"contracts/MyVestingWallet.sol":{"ast":{"absolutePath":"contracts/MyVestingWallet.sol","exportedSymbols":{"Address":[2351],"Context":[2381],"IERC20":[1592],"MyVestingWallet":[8102],"Ownable":[526],"SafeERC20":[2098],"VestingWallet":[837],"VestingWalletCliff":[8186]},"id":8103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8044,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","file":"@openzeppelin/contracts/finance/VestingWallet.sol","id":8045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8103,"sourceUnit":838,"src":"58:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/abstract/VestingWalletCliff.sol","file":"./abstract/VestingWalletCliff.sol","id":8047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8103,"sourceUnit":8187,"src":"118:69:28","symbolAliases":[{"foreign":{"id":8046,"name":"VestingWalletCliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"126:18:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8048,"name":"VestingWalletCliff","nameLocations":["217:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":8186,"src":"217:18:28"},"id":8049,"nodeType":"InheritanceSpecifier","src":"217:18:28"}],"canonicalName":"MyVestingWallet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8102,"linearizedBaseContracts":[8102,8186,837,526,2381],"name":"MyVestingWallet","nameLocation":"198:15:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":8100,"nodeType":"Block","src":"494:380:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8069,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"512:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"535:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"527:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8070,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:28","typeDescriptions":{}}},"id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"527:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42656e656669636961727920616464726573732063616e6e6f74206265207a65726f","id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"539:36:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf","typeString":"literal_string \"Beneficiary address cannot be zero\""},"value":"Beneficiary address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf","typeString":"literal_string \"Beneficiary address cannot be zero\""}],"id":8068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"504:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"504:72:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8077,"nodeType":"ExpressionStatement","src":"504:72:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8079,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"594:14:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8080,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"611:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"617:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"611:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"594:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d657374616d70206d75737420626520696e2074686520667574757265","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"628:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5","typeString":"literal_string \"Start timestamp must be in the future\""},"value":"Start timestamp must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5","typeString":"literal_string \"Start timestamp must be in the future\""}],"id":8078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"586:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"586:82:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8085,"nodeType":"ExpressionStatement","src":"586:82:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8087,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"686:15:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"704:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"686:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56657374696e67206475726174696f6e206d7573742062652067726561746572207468616e207a65726f","id":8090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"707:44:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0","typeString":"literal_string \"Vesting duration must be greater than zero\""},"value":"Vesting duration must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0","typeString":"literal_string \"Vesting duration must be greater than zero\""}],"id":8086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"678:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:74:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8092,"nodeType":"ExpressionStatement","src":"678:74:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8094,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"770:12:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8095,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"786:15:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"770:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c696666206475726174696f6e206d757374206265206c657373207468616e206f7220657175616c20746f2076657374696e67206475726174696f6e","id":8097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"803:63:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b","typeString":"literal_string \"Cliff duration must be less than or equal to vesting duration\""},"value":"Cliff duration must be less than or equal to vesting duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b","typeString":"literal_string \"Cliff duration must be less than or equal to vesting duration\""}],"id":8093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"762:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"762:105:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8099,"nodeType":"ExpressionStatement","src":"762:105:28"}]},"id":8101,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8060,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"403:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8061,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"416:14:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":8062,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"432:15:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8063,"kind":"baseConstructorSpecifier","modifierName":{"id":8059,"name":"VestingWallet","nameLocations":["389:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":837,"src":"389:13:28"},"nodeType":"ModifierInvocation","src":"389:59:28"},{"arguments":[{"id":8065,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"476:12:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8066,"kind":"baseConstructorSpecifier","modifierName":{"id":8064,"name":"VestingWalletCliff","nameLocations":["457:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":8186,"src":"457:18:28"},"nodeType":"ModifierInvocation","src":"457:32:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8051,"mutability":"mutable","name":"beneficiary","nameLocation":"271:11:28","nodeType":"VariableDeclaration","scope":8101,"src":"263:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8050,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8053,"mutability":"mutable","name":"startTimestamp","nameLocation":"299:14:28","nodeType":"VariableDeclaration","scope":8101,"src":"292:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8052,"name":"uint64","nodeType":"ElementaryTypeName","src":"292:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":8055,"mutability":"mutable","name":"durationSeconds","nameLocation":"330:15:28","nodeType":"VariableDeclaration","scope":8101,"src":"323:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8054,"name":"uint64","nodeType":"ElementaryTypeName","src":"323:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"cliffSeconds","nameLocation":"362:12:28","nodeType":"VariableDeclaration","scope":8101,"src":"355:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8056,"name":"uint64","nodeType":"ElementaryTypeName","src":"355:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"253:127:28"},"returnParameters":{"id":8067,"nodeType":"ParameterList","parameters":[],"src":"494:0:28"},"scope":8102,"src":"242:632:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8103,"src":"189:687:28","usedErrors":[392,397,1825,2106,2111,2114,4780,8122],"usedEvents":[403,547,553]}],"src":"32:844:28"},"id":28},"contracts/abstract/VestingWalletCliff.sol":{"ast":{"absolutePath":"contracts/abstract/VestingWalletCliff.sol","exportedSymbols":{"SafeCast":[6525],"VestingWallet":[837],"VestingWalletCliff":[8186]},"id":8187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8104,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":8106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8187,"sourceUnit":6526,"src":"59:73:29","symbolAliases":[{"foreign":{"id":8105,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"67:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","file":"@openzeppelin/contracts/finance/VestingWallet.sol","id":8108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8187,"sourceUnit":838,"src":"133:80:29","symbolAliases":[{"foreign":{"id":8107,"name":"VestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"141:13:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8110,"name":"VestingWallet","nameLocations":["343:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":837,"src":"343:13:29"},"id":8111,"nodeType":"InheritanceSpecifier","src":"343:13:29"}],"canonicalName":"VestingWalletCliff","contractDependencies":[],"contractKind":"contract","documentation":{"id":8109,"nodeType":"StructuredDocumentation","src":"215:87:29","text":" @dev Extension of {VestingWallet} that adds a cliff to the vesting schedule."},"fullyImplemented":true,"id":8186,"linearizedBaseContracts":[8186,837,526,2381],"name":"VestingWalletCliff","nameLocation":"321:18:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8113,"libraryName":{"id":8112,"name":"SafeCast","nameLocations":["369:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6525,"src":"369:8:29"},"nodeType":"UsingForDirective","src":"363:21:29"},{"constant":false,"id":8115,"mutability":"immutable","name":"_cliff","nameLocation":"415:6:29","nodeType":"VariableDeclaration","scope":8186,"src":"390:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8114,"name":"uint64","nodeType":"ElementaryTypeName","src":"390:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"documentation":{"id":8116,"nodeType":"StructuredDocumentation","src":"428:74:29","text":"@dev The specified cliff duration is larger than the vesting duration."},"errorSelector":"3be3ef50","id":8122,"name":"InvalidCliffDuration","nameLocation":"513:20:29","nodeType":"ErrorDefinition","parameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"cliffSeconds","nameLocation":"541:12:29","nodeType":"VariableDeclaration","scope":8122,"src":"534:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8117,"name":"uint64","nodeType":"ElementaryTypeName","src":"534:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":8120,"mutability":"mutable","name":"durationSeconds","nameLocation":"562:15:29","nodeType":"VariableDeclaration","scope":8122,"src":"555:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8119,"name":"uint64","nodeType":"ElementaryTypeName","src":"555:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"533:45:29"},"src":"507:72:29"},{"body":{"id":8151,"nodeType":"Block","src":"699:188:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8128,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"713:12:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8129,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"728:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"713:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8141,"nodeType":"IfStatement","src":"709:120:29","trueBody":{"id":8140,"nodeType":"Block","src":"740:89:29","statements":[{"errorCall":{"arguments":[{"id":8133,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"782:12:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8134,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"796:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"807:8:29","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":5469,"src":"796:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":8132,"name":"InvalidCliffDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"761:20:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (uint64,uint64) pure"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:57:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8139,"nodeType":"RevertStatement","src":"754:64:29"}]}},{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8142,"name":"_cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"838:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8143,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"847:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"855:8:29","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":5469,"src":"847:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8147,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"868:12:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"847:33:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"838:42:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":8150,"nodeType":"ExpressionStatement","src":"838:42:29"}]},"documentation":{"id":8123,"nodeType":"StructuredDocumentation","src":"585:76:29","text":" @dev Set the start timestamp of the vesting wallet cliff."},"id":8152,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"cliffSeconds","nameLocation":"685:12:29","nodeType":"VariableDeclaration","scope":8152,"src":"678:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8124,"name":"uint64","nodeType":"ElementaryTypeName","src":"678:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"677:21:29"},"returnParameters":{"id":8127,"nodeType":"ParameterList","parameters":[],"src":"699:0:29"},"scope":8186,"src":"666:221:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8160,"nodeType":"Block","src":"1008:30:29","statements":[{"expression":{"id":8158,"name":"_cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"1025:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8157,"id":8159,"nodeType":"Return","src":"1018:13:29"}]},"documentation":{"id":8153,"nodeType":"StructuredDocumentation","src":"893:55:29","text":" @dev Getter for the cliff timestamp."},"functionSelector":"13d033c0","id":8161,"implemented":true,"kind":"function","modifiers":[],"name":"cliff","nameLocation":"962:5:29","nodeType":"FunctionDefinition","parameters":{"id":8154,"nodeType":"ParameterList","parameters":[],"src":"967:2:29"},"returnParameters":{"id":8157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8161,"src":"999:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8155,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"998:9:29"},"scope":8186,"src":"953:85:29","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[836],"body":{"id":8184,"nodeType":"Block","src":"1757:100:29","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1774:9:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8173,"name":"cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"1786:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1786:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1774:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":8179,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"1823:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8180,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1840:9:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":8177,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1800:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VestingWalletCliff_$8186_$","typeString":"type(contract super VestingWalletCliff)"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1806:16:29","memberName":"_vestingSchedule","nodeType":"MemberAccess","referencedDeclaration":836,"src":"1800:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1774:76:29","trueExpression":{"hexValue":"30","id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1796:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8171,"id":8183,"nodeType":"Return","src":"1767:83:29"}]},"documentation":{"id":8162,"nodeType":"StructuredDocumentation","src":"1044:568:29","text":" @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation. Returns 0 if the {cliff} timestamp is not met.\n IMPORTANT: The cliff not only makes the schedule return 0, but it also ignores every possible side\n effect from calling the inherited implementation (i.e. `super._vestingSchedule`). Carefully consider\n this caveat if the overridden implementation of this function has any (e.g. writing to memory or reverting)."},"id":8185,"implemented":true,"kind":"function","modifiers":[],"name":"_vestingSchedule","nameLocation":"1626:16:29","nodeType":"FunctionDefinition","overrides":{"id":8168,"nodeType":"OverrideSpecifier","overrides":[],"src":"1730:8:29"},"parameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8164,"mutability":"mutable","name":"totalAllocation","nameLocation":"1660:15:29","nodeType":"VariableDeclaration","scope":8185,"src":"1652:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8166,"mutability":"mutable","name":"timestamp","nameLocation":"1692:9:29","nodeType":"VariableDeclaration","scope":8185,"src":"1685:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8165,"name":"uint64","nodeType":"ElementaryTypeName","src":"1685:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1642:65:29"},"returnParameters":{"id":8171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8185,"src":"1748:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1748:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1747:9:29"},"scope":8186,"src":"1617:240:29","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":8187,"src":"303:1556:29","usedErrors":[392,397,1825,2106,2111,2114,4780,8122],"usedEvents":[403,547,553]}],"src":"33:1826:29"},"id":29}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/finance/VestingWallet.sol":{"VestingWallet":{"abi":[{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint64","name":"startTimestamp","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_585":{"entryPoint":null,"id":585,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":242,"id":525,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory":{"entryPoint":613,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":705,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":443,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":438,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":495,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":564,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2239:30","nodeType":"YulBlock","src":"0:2239:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"379:81:30","nodeType":"YulBlock","src":"379:81:30","statements":[{"nativeSrc":"389:65:30","nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nativeSrc":"404:5:30","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nativeSrc":"411:42:30","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:30","nodeType":"YulIdentifier","src":"400:3:30"},"nativeSrc":"400:54:30","nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:30","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:30","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:30","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nativeSrc":"511:51:30","nodeType":"YulBlock","src":"511:51:30","statements":[{"nativeSrc":"521:35:30","nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nativeSrc":"550:5:30","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:30","nodeType":"YulIdentifier","src":"532:17:30"},"nativeSrc":"532:24:30","nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:30","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:30","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:30","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nativeSrc":"611:79:30","nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nativeSrc":"668:16:30","nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:30","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:30","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:30","nodeType":"YulIdentifier","src":"670:6:30"},"nativeSrc":"670:12:30","nodeType":"YulFunctionCall","src":"670:12:30"},"nativeSrc":"670:12:30","nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:30","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nativeSrc":"659:5:30","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:30","nodeType":"YulIdentifier","src":"641:17:30"},"nativeSrc":"641:24:30","nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nativeSrc":"631:2:30","nodeType":"YulIdentifier","src":"631:2:30"},"nativeSrc":"631:35:30","nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nativeSrc":"624:6:30","nodeType":"YulIdentifier","src":"624:6:30"},"nativeSrc":"624:43:30","nodeType":"YulFunctionCall","src":"624:43:30"},"nativeSrc":"621:63:30","nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:30","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nativeSrc":"759:80:30","nodeType":"YulBlock","src":"759:80:30","statements":[{"nativeSrc":"769:22:30","nodeType":"YulAssignment","src":"769:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:30","nodeType":"YulIdentifier","src":"784:6:30"}],"functionName":{"name":"mload","nativeSrc":"778:5:30","nodeType":"YulIdentifier","src":"778:5:30"},"nativeSrc":"778:13:30","nodeType":"YulFunctionCall","src":"778:13:30"},"variableNames":[{"name":"value","nativeSrc":"769:5:30","nodeType":"YulIdentifier","src":"769:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:30","nodeType":"YulIdentifier","src":"827:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:30","nodeType":"YulIdentifier","src":"800:26:30"},"nativeSrc":"800:33:30","nodeType":"YulFunctionCall","src":"800:33:30"},"nativeSrc":"800:33:30","nodeType":"YulExpressionStatement","src":"800:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:30","nodeType":"YulTypedName","src":"737:6:30","type":""},{"name":"end","nativeSrc":"745:3:30","nodeType":"YulTypedName","src":"745:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:30","nodeType":"YulTypedName","src":"753:5:30","type":""}],"src":"696:143:30"},{"body":{"nativeSrc":"889:57:30","nodeType":"YulBlock","src":"889:57:30","statements":[{"nativeSrc":"899:41:30","nodeType":"YulAssignment","src":"899:41:30","value":{"arguments":[{"name":"value","nativeSrc":"914:5:30","nodeType":"YulIdentifier","src":"914:5:30"},{"kind":"number","nativeSrc":"921:18:30","nodeType":"YulLiteral","src":"921:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"910:3:30","nodeType":"YulIdentifier","src":"910:3:30"},"nativeSrc":"910:30:30","nodeType":"YulFunctionCall","src":"910:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"899:7:30","nodeType":"YulIdentifier","src":"899:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"845:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"871:5:30","nodeType":"YulTypedName","src":"871:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"881:7:30","nodeType":"YulTypedName","src":"881:7:30","type":""}],"src":"845:101:30"},{"body":{"nativeSrc":"994:78:30","nodeType":"YulBlock","src":"994:78:30","statements":[{"body":{"nativeSrc":"1050:16:30","nodeType":"YulBlock","src":"1050:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1059:1:30","nodeType":"YulLiteral","src":"1059:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1062:1:30","nodeType":"YulLiteral","src":"1062:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1052:6:30","nodeType":"YulIdentifier","src":"1052:6:30"},"nativeSrc":"1052:12:30","nodeType":"YulFunctionCall","src":"1052:12:30"},"nativeSrc":"1052:12:30","nodeType":"YulExpressionStatement","src":"1052:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1017:5:30","nodeType":"YulIdentifier","src":"1017:5:30"},{"arguments":[{"name":"value","nativeSrc":"1041:5:30","nodeType":"YulIdentifier","src":"1041:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1024:16:30","nodeType":"YulIdentifier","src":"1024:16:30"},"nativeSrc":"1024:23:30","nodeType":"YulFunctionCall","src":"1024:23:30"}],"functionName":{"name":"eq","nativeSrc":"1014:2:30","nodeType":"YulIdentifier","src":"1014:2:30"},"nativeSrc":"1014:34:30","nodeType":"YulFunctionCall","src":"1014:34:30"}],"functionName":{"name":"iszero","nativeSrc":"1007:6:30","nodeType":"YulIdentifier","src":"1007:6:30"},"nativeSrc":"1007:42:30","nodeType":"YulFunctionCall","src":"1007:42:30"},"nativeSrc":"1004:62:30","nodeType":"YulIf","src":"1004:62:30"}]},"name":"validator_revert_t_uint64","nativeSrc":"952:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"987:5:30","nodeType":"YulTypedName","src":"987:5:30","type":""}],"src":"952:120:30"},{"body":{"nativeSrc":"1140:79:30","nodeType":"YulBlock","src":"1140:79:30","statements":[{"nativeSrc":"1150:22:30","nodeType":"YulAssignment","src":"1150:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"1165:6:30","nodeType":"YulIdentifier","src":"1165:6:30"}],"functionName":{"name":"mload","nativeSrc":"1159:5:30","nodeType":"YulIdentifier","src":"1159:5:30"},"nativeSrc":"1159:13:30","nodeType":"YulFunctionCall","src":"1159:13:30"},"variableNames":[{"name":"value","nativeSrc":"1150:5:30","nodeType":"YulIdentifier","src":"1150:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1207:5:30","nodeType":"YulIdentifier","src":"1207:5:30"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"1181:25:30","nodeType":"YulIdentifier","src":"1181:25:30"},"nativeSrc":"1181:32:30","nodeType":"YulFunctionCall","src":"1181:32:30"},"nativeSrc":"1181:32:30","nodeType":"YulExpressionStatement","src":"1181:32:30"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1078:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1118:6:30","nodeType":"YulTypedName","src":"1118:6:30","type":""},{"name":"end","nativeSrc":"1126:3:30","nodeType":"YulTypedName","src":"1126:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1134:5:30","nodeType":"YulTypedName","src":"1134:5:30","type":""}],"src":"1078:141:30"},{"body":{"nativeSrc":"1334:550:30","nodeType":"YulBlock","src":"1334:550:30","statements":[{"body":{"nativeSrc":"1380:83:30","nodeType":"YulBlock","src":"1380:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1382:77:30","nodeType":"YulIdentifier","src":"1382:77:30"},"nativeSrc":"1382:79:30","nodeType":"YulFunctionCall","src":"1382:79:30"},"nativeSrc":"1382:79:30","nodeType":"YulExpressionStatement","src":"1382:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1355:7:30","nodeType":"YulIdentifier","src":"1355:7:30"},{"name":"headStart","nativeSrc":"1364:9:30","nodeType":"YulIdentifier","src":"1364:9:30"}],"functionName":{"name":"sub","nativeSrc":"1351:3:30","nodeType":"YulIdentifier","src":"1351:3:30"},"nativeSrc":"1351:23:30","nodeType":"YulFunctionCall","src":"1351:23:30"},{"kind":"number","nativeSrc":"1376:2:30","nodeType":"YulLiteral","src":"1376:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1347:3:30","nodeType":"YulIdentifier","src":"1347:3:30"},"nativeSrc":"1347:32:30","nodeType":"YulFunctionCall","src":"1347:32:30"},"nativeSrc":"1344:119:30","nodeType":"YulIf","src":"1344:119:30"},{"nativeSrc":"1473:128:30","nodeType":"YulBlock","src":"1473:128:30","statements":[{"nativeSrc":"1488:15:30","nodeType":"YulVariableDeclaration","src":"1488:15:30","value":{"kind":"number","nativeSrc":"1502:1:30","nodeType":"YulLiteral","src":"1502:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1492:6:30","nodeType":"YulTypedName","src":"1492:6:30","type":""}]},{"nativeSrc":"1517:74:30","nodeType":"YulAssignment","src":"1517:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1563:9:30","nodeType":"YulIdentifier","src":"1563:9:30"},{"name":"offset","nativeSrc":"1574:6:30","nodeType":"YulIdentifier","src":"1574:6:30"}],"functionName":{"name":"add","nativeSrc":"1559:3:30","nodeType":"YulIdentifier","src":"1559:3:30"},"nativeSrc":"1559:22:30","nodeType":"YulFunctionCall","src":"1559:22:30"},{"name":"dataEnd","nativeSrc":"1583:7:30","nodeType":"YulIdentifier","src":"1583:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1527:31:30","nodeType":"YulIdentifier","src":"1527:31:30"},"nativeSrc":"1527:64:30","nodeType":"YulFunctionCall","src":"1527:64:30"},"variableNames":[{"name":"value0","nativeSrc":"1517:6:30","nodeType":"YulIdentifier","src":"1517:6:30"}]}]},{"nativeSrc":"1611:128:30","nodeType":"YulBlock","src":"1611:128:30","statements":[{"nativeSrc":"1626:16:30","nodeType":"YulVariableDeclaration","src":"1626:16:30","value":{"kind":"number","nativeSrc":"1640:2:30","nodeType":"YulLiteral","src":"1640:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1630:6:30","nodeType":"YulTypedName","src":"1630:6:30","type":""}]},{"nativeSrc":"1656:73:30","nodeType":"YulAssignment","src":"1656:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1701:9:30","nodeType":"YulIdentifier","src":"1701:9:30"},{"name":"offset","nativeSrc":"1712:6:30","nodeType":"YulIdentifier","src":"1712:6:30"}],"functionName":{"name":"add","nativeSrc":"1697:3:30","nodeType":"YulIdentifier","src":"1697:3:30"},"nativeSrc":"1697:22:30","nodeType":"YulFunctionCall","src":"1697:22:30"},{"name":"dataEnd","nativeSrc":"1721:7:30","nodeType":"YulIdentifier","src":"1721:7:30"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1666:30:30","nodeType":"YulIdentifier","src":"1666:30:30"},"nativeSrc":"1666:63:30","nodeType":"YulFunctionCall","src":"1666:63:30"},"variableNames":[{"name":"value1","nativeSrc":"1656:6:30","nodeType":"YulIdentifier","src":"1656:6:30"}]}]},{"nativeSrc":"1749:128:30","nodeType":"YulBlock","src":"1749:128:30","statements":[{"nativeSrc":"1764:16:30","nodeType":"YulVariableDeclaration","src":"1764:16:30","value":{"kind":"number","nativeSrc":"1778:2:30","nodeType":"YulLiteral","src":"1778:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1768:6:30","nodeType":"YulTypedName","src":"1768:6:30","type":""}]},{"nativeSrc":"1794:73:30","nodeType":"YulAssignment","src":"1794:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1839:9:30","nodeType":"YulIdentifier","src":"1839:9:30"},{"name":"offset","nativeSrc":"1850:6:30","nodeType":"YulIdentifier","src":"1850:6:30"}],"functionName":{"name":"add","nativeSrc":"1835:3:30","nodeType":"YulIdentifier","src":"1835:3:30"},"nativeSrc":"1835:22:30","nodeType":"YulFunctionCall","src":"1835:22:30"},{"name":"dataEnd","nativeSrc":"1859:7:30","nodeType":"YulIdentifier","src":"1859:7:30"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1804:30:30","nodeType":"YulIdentifier","src":"1804:30:30"},"nativeSrc":"1804:63:30","nodeType":"YulFunctionCall","src":"1804:63:30"},"variableNames":[{"name":"value2","nativeSrc":"1794:6:30","nodeType":"YulIdentifier","src":"1794:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory","nativeSrc":"1225:659:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1288:9:30","nodeType":"YulTypedName","src":"1288:9:30","type":""},{"name":"dataEnd","nativeSrc":"1299:7:30","nodeType":"YulTypedName","src":"1299:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1311:6:30","nodeType":"YulTypedName","src":"1311:6:30","type":""},{"name":"value1","nativeSrc":"1319:6:30","nodeType":"YulTypedName","src":"1319:6:30","type":""},{"name":"value2","nativeSrc":"1327:6:30","nodeType":"YulTypedName","src":"1327:6:30","type":""}],"src":"1225:659:30"},{"body":{"nativeSrc":"1955:53:30","nodeType":"YulBlock","src":"1955:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1972:3:30","nodeType":"YulIdentifier","src":"1972:3:30"},{"arguments":[{"name":"value","nativeSrc":"1995:5:30","nodeType":"YulIdentifier","src":"1995:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1977:17:30","nodeType":"YulIdentifier","src":"1977:17:30"},"nativeSrc":"1977:24:30","nodeType":"YulFunctionCall","src":"1977:24:30"}],"functionName":{"name":"mstore","nativeSrc":"1965:6:30","nodeType":"YulIdentifier","src":"1965:6:30"},"nativeSrc":"1965:37:30","nodeType":"YulFunctionCall","src":"1965:37:30"},"nativeSrc":"1965:37:30","nodeType":"YulExpressionStatement","src":"1965:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1890:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1943:5:30","nodeType":"YulTypedName","src":"1943:5:30","type":""},{"name":"pos","nativeSrc":"1950:3:30","nodeType":"YulTypedName","src":"1950:3:30","type":""}],"src":"1890:118:30"},{"body":{"nativeSrc":"2112:124:30","nodeType":"YulBlock","src":"2112:124:30","statements":[{"nativeSrc":"2122:26:30","nodeType":"YulAssignment","src":"2122:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2134:9:30","nodeType":"YulIdentifier","src":"2134:9:30"},{"kind":"number","nativeSrc":"2145:2:30","nodeType":"YulLiteral","src":"2145:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2130:3:30","nodeType":"YulIdentifier","src":"2130:3:30"},"nativeSrc":"2130:18:30","nodeType":"YulFunctionCall","src":"2130:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2122:4:30","nodeType":"YulIdentifier","src":"2122:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2202:6:30","nodeType":"YulIdentifier","src":"2202:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"2215:9:30","nodeType":"YulIdentifier","src":"2215:9:30"},{"kind":"number","nativeSrc":"2226:1:30","nodeType":"YulLiteral","src":"2226:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2211:3:30","nodeType":"YulIdentifier","src":"2211:3:30"},"nativeSrc":"2211:17:30","nodeType":"YulFunctionCall","src":"2211:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2158:43:30","nodeType":"YulIdentifier","src":"2158:43:30"},"nativeSrc":"2158:71:30","nodeType":"YulFunctionCall","src":"2158:71:30"},"nativeSrc":"2158:71:30","nodeType":"YulExpressionStatement","src":"2158:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2014:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2084:9:30","nodeType":"YulTypedName","src":"2084:9:30","type":""},{"name":"value0","nativeSrc":"2096:6:30","nodeType":"YulTypedName","src":"2096:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2107:4:30","nodeType":"YulTypedName","src":"2107:4:30","type":""}],"src":"2014:222:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526040516200149f3803806200149f833981810160405281019062000029919062000265565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000969190620002d2565b60405180910390fd5b620000b081620000f260201b60201c565b508167ffffffffffffffff1660808167ffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff1681525050505050620002ef565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e882620001bb565b9050919050565b620001fa81620001db565b81146200020657600080fd5b50565b6000815190506200021a81620001ef565b92915050565b600067ffffffffffffffff82169050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b600080600060608486031215620002815762000280620001b6565b5b6000620002918682870162000209565b9350506020620002a4868287016200024e565b9250506040620002b7868287016200024e565b9150509250925092565b620002cc81620001db565b82525050565b6000602082019050620002e96000830184620002c1565b92915050565b60805160a05161118a62000315600039600061038c0152600061064b015261118a6000f3fe6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212202bb56f1f9348c000eea4ff0f22e80af2c473cfba2642417c6b4a02bf5c1b54c564736f6c63430008180033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x149F CODESIZE SUB DUP1 PUSH3 0x149F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB0 DUP2 PUSH3 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E8 DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FA DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 EQ PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21A DUP2 PUSH3 0x1EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x281 JUMPI PUSH3 0x280 PUSH3 0x1B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x291 DUP7 DUP3 DUP8 ADD PUSH3 0x209 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2A4 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2B7 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x118A PUSH3 0x315 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x38C ADD MSTORE PUSH1 0x0 PUSH2 0x64B ADD MSTORE PUSH2 0x118A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xB5 PUSH16 0x1F9348C000EEA4FF0F22E80AF2C473CF 0xBA 0x26 TIMESTAMP COINBASE PUSH29 0x6B4A02BF5C1B54C564736F6C6343000818003300000000000000000000 ","sourceMap":"1638:4032:3:-:0;;;2143:186;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2239:11;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2271:14:3::1;2262:23;;;;;;;;::::0;::::1;2307:15;2295:27;;;;;;;;::::0;::::1;2143:186:::0;;;1638:4032;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:30:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:659::-;1311:6;1319;1327;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:63;1721:7;1712:6;1701:9;1697:22;1666:63;:::i;:::-;1656:73;;1611:128;1778:2;1804:63;1859:7;1850:6;1839:9;1835:22;1804:63;:::i;:::-;1794:73;;1749:128;1225:659;;;;;:::o;1890:118::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1890:118;;:::o;2014:222::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2158:71;2226:1;2215:9;2211:17;2202:6;2158:71;:::i;:::-;2014:222;;;;:::o;1638:4032:3:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_590":{"entryPoint":null,"id":590,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_2048":{"entryPoint":2688,"id":2048,"parameterSlots":2,"returnSlots":0},"@_checkOwner_463":{"entryPoint":2120,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_2363":{"entryPoint":2839,"id":2363,"parameterSlots":0,"returnSlots":1},"@_revert_2350":{"entryPoint":3217,"id":2350,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":2255,"id":525,"parameterSlots":1,"returnSlots":0},"@_vestingSchedule_836":{"entryPoint":1858,"id":836,"parameterSlots":2,"returnSlots":1},"@duration_608":{"entryPoint":904,"id":608,"parameterSlots":0,"returnSlots":1},"@end_621":{"entryPoint":1657,"id":621,"parameterSlots":0,"returnSlots":1},"@functionCallWithValue_2218":{"entryPoint":2869,"id":2218,"parameterSlots":3,"returnSlots":1},"@functionCall_2172":{"entryPoint":2847,"id":2172,"parameterSlots":2,"returnSlots":1},"@owner_446":{"entryPoint":1445,"id":446,"parameterSlots":0,"returnSlots":1},"@releasable_661":{"entryPoint":1824,"id":661,"parameterSlots":0,"returnSlots":1},"@releasable_683":{"entryPoint":1569,"id":683,"parameterSlots":1,"returnSlots":1},"@release_712":{"entryPoint":1333,"id":712,"parameterSlots":0,"returnSlots":0},"@release_747":{"entryPoint":954,"id":747,"parameterSlots":1,"returnSlots":0},"@released_630":{"entryPoint":1486,"id":630,"parameterSlots":0,"returnSlots":1},"@released_643":{"entryPoint":1496,"id":643,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1153,"id":477,"parameterSlots":0,"returnSlots":0},"@safeTransfer_1858":{"entryPoint":1993,"id":1858,"parameterSlots":3,"returnSlots":0},"@sendValue_2155":{"entryPoint":2451,"id":2155,"parameterSlots":2,"returnSlots":0},"@start_599":{"entryPoint":1607,"id":599,"parameterSlots":0,"returnSlots":1},"@transferOwnership_505":{"entryPoint":1690,"id":505,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2310":{"entryPoint":3074,"id":2310,"parameterSlots":3,"returnSlots":1},"@vestedAmount_768":{"entryPoint":867,"id":768,"parameterSlots":1,"returnSlots":1},"@vestedAmount_796":{"entryPoint":1173,"id":796,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":3334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":3591,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":3355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4154,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3410,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4099,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3425,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4311,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4140,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3744,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4050,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3937,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3885,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3452,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3400,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3291,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4322,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":3697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4003,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3286,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4151,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3502,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4222,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":3311,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8294:30","nodeType":"YulBlock","src":"0:8294:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"378:57:30","nodeType":"YulBlock","src":"378:57:30","statements":[{"nativeSrc":"388:41:30","nodeType":"YulAssignment","src":"388:41:30","value":{"arguments":[{"name":"value","nativeSrc":"403:5:30","nodeType":"YulIdentifier","src":"403:5:30"},{"kind":"number","nativeSrc":"410:18:30","nodeType":"YulLiteral","src":"410:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"399:3:30","nodeType":"YulIdentifier","src":"399:3:30"},"nativeSrc":"399:30:30","nodeType":"YulFunctionCall","src":"399:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:30","nodeType":"YulIdentifier","src":"388:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"334:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:30","nodeType":"YulTypedName","src":"360:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:30","nodeType":"YulTypedName","src":"370:7:30","type":""}],"src":"334:101:30"},{"body":{"nativeSrc":"483:78:30","nodeType":"YulBlock","src":"483:78:30","statements":[{"body":{"nativeSrc":"539:16:30","nodeType":"YulBlock","src":"539:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"548:1:30","nodeType":"YulLiteral","src":"548:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"551:1:30","nodeType":"YulLiteral","src":"551:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"541:6:30","nodeType":"YulIdentifier","src":"541:6:30"},"nativeSrc":"541:12:30","nodeType":"YulFunctionCall","src":"541:12:30"},"nativeSrc":"541:12:30","nodeType":"YulExpressionStatement","src":"541:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"506:5:30","nodeType":"YulIdentifier","src":"506:5:30"},{"arguments":[{"name":"value","nativeSrc":"530:5:30","nodeType":"YulIdentifier","src":"530:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"513:16:30","nodeType":"YulIdentifier","src":"513:16:30"},"nativeSrc":"513:23:30","nodeType":"YulFunctionCall","src":"513:23:30"}],"functionName":{"name":"eq","nativeSrc":"503:2:30","nodeType":"YulIdentifier","src":"503:2:30"},"nativeSrc":"503:34:30","nodeType":"YulFunctionCall","src":"503:34:30"}],"functionName":{"name":"iszero","nativeSrc":"496:6:30","nodeType":"YulIdentifier","src":"496:6:30"},"nativeSrc":"496:42:30","nodeType":"YulFunctionCall","src":"496:42:30"},"nativeSrc":"493:62:30","nodeType":"YulIf","src":"493:62:30"}]},"name":"validator_revert_t_uint64","nativeSrc":"441:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"476:5:30","nodeType":"YulTypedName","src":"476:5:30","type":""}],"src":"441:120:30"},{"body":{"nativeSrc":"618:86:30","nodeType":"YulBlock","src":"618:86:30","statements":[{"nativeSrc":"628:29:30","nodeType":"YulAssignment","src":"628:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"650:6:30","nodeType":"YulIdentifier","src":"650:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"637:12:30","nodeType":"YulIdentifier","src":"637:12:30"},"nativeSrc":"637:20:30","nodeType":"YulFunctionCall","src":"637:20:30"},"variableNames":[{"name":"value","nativeSrc":"628:5:30","nodeType":"YulIdentifier","src":"628:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"692:5:30","nodeType":"YulIdentifier","src":"692:5:30"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"666:25:30","nodeType":"YulIdentifier","src":"666:25:30"},"nativeSrc":"666:32:30","nodeType":"YulFunctionCall","src":"666:32:30"},"nativeSrc":"666:32:30","nodeType":"YulExpressionStatement","src":"666:32:30"}]},"name":"abi_decode_t_uint64","nativeSrc":"567:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"596:6:30","nodeType":"YulTypedName","src":"596:6:30","type":""},{"name":"end","nativeSrc":"604:3:30","nodeType":"YulTypedName","src":"604:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"612:5:30","nodeType":"YulTypedName","src":"612:5:30","type":""}],"src":"567:137:30"},{"body":{"nativeSrc":"775:262:30","nodeType":"YulBlock","src":"775:262:30","statements":[{"body":{"nativeSrc":"821:83:30","nodeType":"YulBlock","src":"821:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"823:77:30","nodeType":"YulIdentifier","src":"823:77:30"},"nativeSrc":"823:79:30","nodeType":"YulFunctionCall","src":"823:79:30"},"nativeSrc":"823:79:30","nodeType":"YulExpressionStatement","src":"823:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"796:7:30","nodeType":"YulIdentifier","src":"796:7:30"},{"name":"headStart","nativeSrc":"805:9:30","nodeType":"YulIdentifier","src":"805:9:30"}],"functionName":{"name":"sub","nativeSrc":"792:3:30","nodeType":"YulIdentifier","src":"792:3:30"},"nativeSrc":"792:23:30","nodeType":"YulFunctionCall","src":"792:23:30"},{"kind":"number","nativeSrc":"817:2:30","nodeType":"YulLiteral","src":"817:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"788:3:30","nodeType":"YulIdentifier","src":"788:3:30"},"nativeSrc":"788:32:30","nodeType":"YulFunctionCall","src":"788:32:30"},"nativeSrc":"785:119:30","nodeType":"YulIf","src":"785:119:30"},{"nativeSrc":"914:116:30","nodeType":"YulBlock","src":"914:116:30","statements":[{"nativeSrc":"929:15:30","nodeType":"YulVariableDeclaration","src":"929:15:30","value":{"kind":"number","nativeSrc":"943:1:30","nodeType":"YulLiteral","src":"943:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"933:6:30","nodeType":"YulTypedName","src":"933:6:30","type":""}]},{"nativeSrc":"958:62:30","nodeType":"YulAssignment","src":"958:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"992:9:30","nodeType":"YulIdentifier","src":"992:9:30"},{"name":"offset","nativeSrc":"1003:6:30","nodeType":"YulIdentifier","src":"1003:6:30"}],"functionName":{"name":"add","nativeSrc":"988:3:30","nodeType":"YulIdentifier","src":"988:3:30"},"nativeSrc":"988:22:30","nodeType":"YulFunctionCall","src":"988:22:30"},{"name":"dataEnd","nativeSrc":"1012:7:30","nodeType":"YulIdentifier","src":"1012:7:30"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"968:19:30","nodeType":"YulIdentifier","src":"968:19:30"},"nativeSrc":"968:52:30","nodeType":"YulFunctionCall","src":"968:52:30"},"variableNames":[{"name":"value0","nativeSrc":"958:6:30","nodeType":"YulIdentifier","src":"958:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"710:327:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"745:9:30","nodeType":"YulTypedName","src":"745:9:30","type":""},{"name":"dataEnd","nativeSrc":"756:7:30","nodeType":"YulTypedName","src":"756:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"768:6:30","nodeType":"YulTypedName","src":"768:6:30","type":""}],"src":"710:327:30"},{"body":{"nativeSrc":"1088:32:30","nodeType":"YulBlock","src":"1088:32:30","statements":[{"nativeSrc":"1098:16:30","nodeType":"YulAssignment","src":"1098:16:30","value":{"name":"value","nativeSrc":"1109:5:30","nodeType":"YulIdentifier","src":"1109:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1098:7:30","nodeType":"YulIdentifier","src":"1098:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1043:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1070:5:30","nodeType":"YulTypedName","src":"1070:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1080:7:30","nodeType":"YulTypedName","src":"1080:7:30","type":""}],"src":"1043:77:30"},{"body":{"nativeSrc":"1191:53:30","nodeType":"YulBlock","src":"1191:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1208:3:30","nodeType":"YulIdentifier","src":"1208:3:30"},{"arguments":[{"name":"value","nativeSrc":"1231:5:30","nodeType":"YulIdentifier","src":"1231:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1213:17:30","nodeType":"YulIdentifier","src":"1213:17:30"},"nativeSrc":"1213:24:30","nodeType":"YulFunctionCall","src":"1213:24:30"}],"functionName":{"name":"mstore","nativeSrc":"1201:6:30","nodeType":"YulIdentifier","src":"1201:6:30"},"nativeSrc":"1201:37:30","nodeType":"YulFunctionCall","src":"1201:37:30"},"nativeSrc":"1201:37:30","nodeType":"YulExpressionStatement","src":"1201:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1126:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1179:5:30","nodeType":"YulTypedName","src":"1179:5:30","type":""},{"name":"pos","nativeSrc":"1186:3:30","nodeType":"YulTypedName","src":"1186:3:30","type":""}],"src":"1126:118:30"},{"body":{"nativeSrc":"1348:124:30","nodeType":"YulBlock","src":"1348:124:30","statements":[{"nativeSrc":"1358:26:30","nodeType":"YulAssignment","src":"1358:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1370:9:30","nodeType":"YulIdentifier","src":"1370:9:30"},{"kind":"number","nativeSrc":"1381:2:30","nodeType":"YulLiteral","src":"1381:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1366:3:30","nodeType":"YulIdentifier","src":"1366:3:30"},"nativeSrc":"1366:18:30","nodeType":"YulFunctionCall","src":"1366:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1358:4:30","nodeType":"YulIdentifier","src":"1358:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1438:6:30","nodeType":"YulIdentifier","src":"1438:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1451:9:30","nodeType":"YulIdentifier","src":"1451:9:30"},{"kind":"number","nativeSrc":"1462:1:30","nodeType":"YulLiteral","src":"1462:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1447:3:30","nodeType":"YulIdentifier","src":"1447:3:30"},"nativeSrc":"1447:17:30","nodeType":"YulFunctionCall","src":"1447:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1394:43:30","nodeType":"YulIdentifier","src":"1394:43:30"},"nativeSrc":"1394:71:30","nodeType":"YulFunctionCall","src":"1394:71:30"},"nativeSrc":"1394:71:30","nodeType":"YulExpressionStatement","src":"1394:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1250:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1320:9:30","nodeType":"YulTypedName","src":"1320:9:30","type":""},{"name":"value0","nativeSrc":"1332:6:30","nodeType":"YulTypedName","src":"1332:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1343:4:30","nodeType":"YulTypedName","src":"1343:4:30","type":""}],"src":"1250:222:30"},{"body":{"nativeSrc":"1523:81:30","nodeType":"YulBlock","src":"1523:81:30","statements":[{"nativeSrc":"1533:65:30","nodeType":"YulAssignment","src":"1533:65:30","value":{"arguments":[{"name":"value","nativeSrc":"1548:5:30","nodeType":"YulIdentifier","src":"1548:5:30"},{"kind":"number","nativeSrc":"1555:42:30","nodeType":"YulLiteral","src":"1555:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1544:3:30","nodeType":"YulIdentifier","src":"1544:3:30"},"nativeSrc":"1544:54:30","nodeType":"YulFunctionCall","src":"1544:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1533:7:30","nodeType":"YulIdentifier","src":"1533:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1478:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1505:5:30","nodeType":"YulTypedName","src":"1505:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1515:7:30","nodeType":"YulTypedName","src":"1515:7:30","type":""}],"src":"1478:126:30"},{"body":{"nativeSrc":"1655:51:30","nodeType":"YulBlock","src":"1655:51:30","statements":[{"nativeSrc":"1665:35:30","nodeType":"YulAssignment","src":"1665:35:30","value":{"arguments":[{"name":"value","nativeSrc":"1694:5:30","nodeType":"YulIdentifier","src":"1694:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1676:17:30","nodeType":"YulIdentifier","src":"1676:17:30"},"nativeSrc":"1676:24:30","nodeType":"YulFunctionCall","src":"1676:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1665:7:30","nodeType":"YulIdentifier","src":"1665:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"1610:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1637:5:30","nodeType":"YulTypedName","src":"1637:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1647:7:30","nodeType":"YulTypedName","src":"1647:7:30","type":""}],"src":"1610:96:30"},{"body":{"nativeSrc":"1755:79:30","nodeType":"YulBlock","src":"1755:79:30","statements":[{"body":{"nativeSrc":"1812:16:30","nodeType":"YulBlock","src":"1812:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1821:1:30","nodeType":"YulLiteral","src":"1821:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1824:1:30","nodeType":"YulLiteral","src":"1824:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1814:6:30","nodeType":"YulIdentifier","src":"1814:6:30"},"nativeSrc":"1814:12:30","nodeType":"YulFunctionCall","src":"1814:12:30"},"nativeSrc":"1814:12:30","nodeType":"YulExpressionStatement","src":"1814:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1778:5:30","nodeType":"YulIdentifier","src":"1778:5:30"},{"arguments":[{"name":"value","nativeSrc":"1803:5:30","nodeType":"YulIdentifier","src":"1803:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1785:17:30","nodeType":"YulIdentifier","src":"1785:17:30"},"nativeSrc":"1785:24:30","nodeType":"YulFunctionCall","src":"1785:24:30"}],"functionName":{"name":"eq","nativeSrc":"1775:2:30","nodeType":"YulIdentifier","src":"1775:2:30"},"nativeSrc":"1775:35:30","nodeType":"YulFunctionCall","src":"1775:35:30"}],"functionName":{"name":"iszero","nativeSrc":"1768:6:30","nodeType":"YulIdentifier","src":"1768:6:30"},"nativeSrc":"1768:43:30","nodeType":"YulFunctionCall","src":"1768:43:30"},"nativeSrc":"1765:63:30","nodeType":"YulIf","src":"1765:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"1712:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1748:5:30","nodeType":"YulTypedName","src":"1748:5:30","type":""}],"src":"1712:122:30"},{"body":{"nativeSrc":"1892:87:30","nodeType":"YulBlock","src":"1892:87:30","statements":[{"nativeSrc":"1902:29:30","nodeType":"YulAssignment","src":"1902:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1924:6:30","nodeType":"YulIdentifier","src":"1924:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1911:12:30","nodeType":"YulIdentifier","src":"1911:12:30"},"nativeSrc":"1911:20:30","nodeType":"YulFunctionCall","src":"1911:20:30"},"variableNames":[{"name":"value","nativeSrc":"1902:5:30","nodeType":"YulIdentifier","src":"1902:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1967:5:30","nodeType":"YulIdentifier","src":"1967:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1940:26:30","nodeType":"YulIdentifier","src":"1940:26:30"},"nativeSrc":"1940:33:30","nodeType":"YulFunctionCall","src":"1940:33:30"},"nativeSrc":"1940:33:30","nodeType":"YulExpressionStatement","src":"1940:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"1840:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1870:6:30","nodeType":"YulTypedName","src":"1870:6:30","type":""},{"name":"end","nativeSrc":"1878:3:30","nodeType":"YulTypedName","src":"1878:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1886:5:30","nodeType":"YulTypedName","src":"1886:5:30","type":""}],"src":"1840:139:30"},{"body":{"nativeSrc":"2051:263:30","nodeType":"YulBlock","src":"2051:263:30","statements":[{"body":{"nativeSrc":"2097:83:30","nodeType":"YulBlock","src":"2097:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2099:77:30","nodeType":"YulIdentifier","src":"2099:77:30"},"nativeSrc":"2099:79:30","nodeType":"YulFunctionCall","src":"2099:79:30"},"nativeSrc":"2099:79:30","nodeType":"YulExpressionStatement","src":"2099:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2072:7:30","nodeType":"YulIdentifier","src":"2072:7:30"},{"name":"headStart","nativeSrc":"2081:9:30","nodeType":"YulIdentifier","src":"2081:9:30"}],"functionName":{"name":"sub","nativeSrc":"2068:3:30","nodeType":"YulIdentifier","src":"2068:3:30"},"nativeSrc":"2068:23:30","nodeType":"YulFunctionCall","src":"2068:23:30"},{"kind":"number","nativeSrc":"2093:2:30","nodeType":"YulLiteral","src":"2093:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2064:3:30","nodeType":"YulIdentifier","src":"2064:3:30"},"nativeSrc":"2064:32:30","nodeType":"YulFunctionCall","src":"2064:32:30"},"nativeSrc":"2061:119:30","nodeType":"YulIf","src":"2061:119:30"},{"nativeSrc":"2190:117:30","nodeType":"YulBlock","src":"2190:117:30","statements":[{"nativeSrc":"2205:15:30","nodeType":"YulVariableDeclaration","src":"2205:15:30","value":{"kind":"number","nativeSrc":"2219:1:30","nodeType":"YulLiteral","src":"2219:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2209:6:30","nodeType":"YulTypedName","src":"2209:6:30","type":""}]},{"nativeSrc":"2234:63:30","nodeType":"YulAssignment","src":"2234:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2269:9:30","nodeType":"YulIdentifier","src":"2269:9:30"},{"name":"offset","nativeSrc":"2280:6:30","nodeType":"YulIdentifier","src":"2280:6:30"}],"functionName":{"name":"add","nativeSrc":"2265:3:30","nodeType":"YulIdentifier","src":"2265:3:30"},"nativeSrc":"2265:22:30","nodeType":"YulFunctionCall","src":"2265:22:30"},{"name":"dataEnd","nativeSrc":"2289:7:30","nodeType":"YulIdentifier","src":"2289:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2244:20:30","nodeType":"YulIdentifier","src":"2244:20:30"},"nativeSrc":"2244:53:30","nodeType":"YulFunctionCall","src":"2244:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2234:6:30","nodeType":"YulIdentifier","src":"2234:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1985:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2021:9:30","nodeType":"YulTypedName","src":"2021:9:30","type":""},{"name":"dataEnd","nativeSrc":"2032:7:30","nodeType":"YulTypedName","src":"2032:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2044:6:30","nodeType":"YulTypedName","src":"2044:6:30","type":""}],"src":"1985:329:30"},{"body":{"nativeSrc":"2402:390:30","nodeType":"YulBlock","src":"2402:390:30","statements":[{"body":{"nativeSrc":"2448:83:30","nodeType":"YulBlock","src":"2448:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2450:77:30","nodeType":"YulIdentifier","src":"2450:77:30"},"nativeSrc":"2450:79:30","nodeType":"YulFunctionCall","src":"2450:79:30"},"nativeSrc":"2450:79:30","nodeType":"YulExpressionStatement","src":"2450:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2423:7:30","nodeType":"YulIdentifier","src":"2423:7:30"},{"name":"headStart","nativeSrc":"2432:9:30","nodeType":"YulIdentifier","src":"2432:9:30"}],"functionName":{"name":"sub","nativeSrc":"2419:3:30","nodeType":"YulIdentifier","src":"2419:3:30"},"nativeSrc":"2419:23:30","nodeType":"YulFunctionCall","src":"2419:23:30"},{"kind":"number","nativeSrc":"2444:2:30","nodeType":"YulLiteral","src":"2444:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2415:3:30","nodeType":"YulIdentifier","src":"2415:3:30"},"nativeSrc":"2415:32:30","nodeType":"YulFunctionCall","src":"2415:32:30"},"nativeSrc":"2412:119:30","nodeType":"YulIf","src":"2412:119:30"},{"nativeSrc":"2541:117:30","nodeType":"YulBlock","src":"2541:117:30","statements":[{"nativeSrc":"2556:15:30","nodeType":"YulVariableDeclaration","src":"2556:15:30","value":{"kind":"number","nativeSrc":"2570:1:30","nodeType":"YulLiteral","src":"2570:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2560:6:30","nodeType":"YulTypedName","src":"2560:6:30","type":""}]},{"nativeSrc":"2585:63:30","nodeType":"YulAssignment","src":"2585:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2620:9:30","nodeType":"YulIdentifier","src":"2620:9:30"},{"name":"offset","nativeSrc":"2631:6:30","nodeType":"YulIdentifier","src":"2631:6:30"}],"functionName":{"name":"add","nativeSrc":"2616:3:30","nodeType":"YulIdentifier","src":"2616:3:30"},"nativeSrc":"2616:22:30","nodeType":"YulFunctionCall","src":"2616:22:30"},{"name":"dataEnd","nativeSrc":"2640:7:30","nodeType":"YulIdentifier","src":"2640:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2595:20:30","nodeType":"YulIdentifier","src":"2595:20:30"},"nativeSrc":"2595:53:30","nodeType":"YulFunctionCall","src":"2595:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2585:6:30","nodeType":"YulIdentifier","src":"2585:6:30"}]}]},{"nativeSrc":"2668:117:30","nodeType":"YulBlock","src":"2668:117:30","statements":[{"nativeSrc":"2683:16:30","nodeType":"YulVariableDeclaration","src":"2683:16:30","value":{"kind":"number","nativeSrc":"2697:2:30","nodeType":"YulLiteral","src":"2697:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2687:6:30","nodeType":"YulTypedName","src":"2687:6:30","type":""}]},{"nativeSrc":"2713:62:30","nodeType":"YulAssignment","src":"2713:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2747:9:30","nodeType":"YulIdentifier","src":"2747:9:30"},{"name":"offset","nativeSrc":"2758:6:30","nodeType":"YulIdentifier","src":"2758:6:30"}],"functionName":{"name":"add","nativeSrc":"2743:3:30","nodeType":"YulIdentifier","src":"2743:3:30"},"nativeSrc":"2743:22:30","nodeType":"YulFunctionCall","src":"2743:22:30"},{"name":"dataEnd","nativeSrc":"2767:7:30","nodeType":"YulIdentifier","src":"2767:7:30"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"2723:19:30","nodeType":"YulIdentifier","src":"2723:19:30"},"nativeSrc":"2723:52:30","nodeType":"YulFunctionCall","src":"2723:52:30"},"variableNames":[{"name":"value1","nativeSrc":"2713:6:30","nodeType":"YulIdentifier","src":"2713:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"2320:472:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2364:9:30","nodeType":"YulTypedName","src":"2364:9:30","type":""},{"name":"dataEnd","nativeSrc":"2375:7:30","nodeType":"YulTypedName","src":"2375:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2387:6:30","nodeType":"YulTypedName","src":"2387:6:30","type":""},{"name":"value1","nativeSrc":"2395:6:30","nodeType":"YulTypedName","src":"2395:6:30","type":""}],"src":"2320:472:30"},{"body":{"nativeSrc":"2863:53:30","nodeType":"YulBlock","src":"2863:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2880:3:30","nodeType":"YulIdentifier","src":"2880:3:30"},{"arguments":[{"name":"value","nativeSrc":"2903:5:30","nodeType":"YulIdentifier","src":"2903:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2885:17:30","nodeType":"YulIdentifier","src":"2885:17:30"},"nativeSrc":"2885:24:30","nodeType":"YulFunctionCall","src":"2885:24:30"}],"functionName":{"name":"mstore","nativeSrc":"2873:6:30","nodeType":"YulIdentifier","src":"2873:6:30"},"nativeSrc":"2873:37:30","nodeType":"YulFunctionCall","src":"2873:37:30"},"nativeSrc":"2873:37:30","nodeType":"YulExpressionStatement","src":"2873:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2798:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2851:5:30","nodeType":"YulTypedName","src":"2851:5:30","type":""},{"name":"pos","nativeSrc":"2858:3:30","nodeType":"YulTypedName","src":"2858:3:30","type":""}],"src":"2798:118:30"},{"body":{"nativeSrc":"3020:124:30","nodeType":"YulBlock","src":"3020:124:30","statements":[{"nativeSrc":"3030:26:30","nodeType":"YulAssignment","src":"3030:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3042:9:30","nodeType":"YulIdentifier","src":"3042:9:30"},{"kind":"number","nativeSrc":"3053:2:30","nodeType":"YulLiteral","src":"3053:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3038:3:30","nodeType":"YulIdentifier","src":"3038:3:30"},"nativeSrc":"3038:18:30","nodeType":"YulFunctionCall","src":"3038:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3030:4:30","nodeType":"YulIdentifier","src":"3030:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3110:6:30","nodeType":"YulIdentifier","src":"3110:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"3123:9:30","nodeType":"YulIdentifier","src":"3123:9:30"},{"kind":"number","nativeSrc":"3134:1:30","nodeType":"YulLiteral","src":"3134:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3119:3:30","nodeType":"YulIdentifier","src":"3119:3:30"},"nativeSrc":"3119:17:30","nodeType":"YulFunctionCall","src":"3119:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3066:43:30","nodeType":"YulIdentifier","src":"3066:43:30"},"nativeSrc":"3066:71:30","nodeType":"YulFunctionCall","src":"3066:71:30"},"nativeSrc":"3066:71:30","nodeType":"YulExpressionStatement","src":"3066:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2922:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2992:9:30","nodeType":"YulTypedName","src":"2992:9:30","type":""},{"name":"value0","nativeSrc":"3004:6:30","nodeType":"YulTypedName","src":"3004:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3015:4:30","nodeType":"YulTypedName","src":"3015:4:30","type":""}],"src":"2922:222:30"},{"body":{"nativeSrc":"3178:152:30","nodeType":"YulBlock","src":"3178:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3195:1:30","nodeType":"YulLiteral","src":"3195:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3198:77:30","nodeType":"YulLiteral","src":"3198:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3188:6:30","nodeType":"YulIdentifier","src":"3188:6:30"},"nativeSrc":"3188:88:30","nodeType":"YulFunctionCall","src":"3188:88:30"},"nativeSrc":"3188:88:30","nodeType":"YulExpressionStatement","src":"3188:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3292:1:30","nodeType":"YulLiteral","src":"3292:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"3295:4:30","nodeType":"YulLiteral","src":"3295:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3285:6:30","nodeType":"YulIdentifier","src":"3285:6:30"},"nativeSrc":"3285:15:30","nodeType":"YulFunctionCall","src":"3285:15:30"},"nativeSrc":"3285:15:30","nodeType":"YulExpressionStatement","src":"3285:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3316:1:30","nodeType":"YulLiteral","src":"3316:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3319:4:30","nodeType":"YulLiteral","src":"3319:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3309:6:30","nodeType":"YulIdentifier","src":"3309:6:30"},"nativeSrc":"3309:15:30","nodeType":"YulFunctionCall","src":"3309:15:30"},"nativeSrc":"3309:15:30","nodeType":"YulExpressionStatement","src":"3309:15:30"}]},"name":"panic_error_0x11","nativeSrc":"3150:180:30","nodeType":"YulFunctionDefinition","src":"3150:180:30"},{"body":{"nativeSrc":"3380:147:30","nodeType":"YulBlock","src":"3380:147:30","statements":[{"nativeSrc":"3390:25:30","nodeType":"YulAssignment","src":"3390:25:30","value":{"arguments":[{"name":"x","nativeSrc":"3413:1:30","nodeType":"YulIdentifier","src":"3413:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3395:17:30","nodeType":"YulIdentifier","src":"3395:17:30"},"nativeSrc":"3395:20:30","nodeType":"YulFunctionCall","src":"3395:20:30"},"variableNames":[{"name":"x","nativeSrc":"3390:1:30","nodeType":"YulIdentifier","src":"3390:1:30"}]},{"nativeSrc":"3424:25:30","nodeType":"YulAssignment","src":"3424:25:30","value":{"arguments":[{"name":"y","nativeSrc":"3447:1:30","nodeType":"YulIdentifier","src":"3447:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3429:17:30","nodeType":"YulIdentifier","src":"3429:17:30"},"nativeSrc":"3429:20:30","nodeType":"YulFunctionCall","src":"3429:20:30"},"variableNames":[{"name":"y","nativeSrc":"3424:1:30","nodeType":"YulIdentifier","src":"3424:1:30"}]},{"nativeSrc":"3458:16:30","nodeType":"YulAssignment","src":"3458:16:30","value":{"arguments":[{"name":"x","nativeSrc":"3469:1:30","nodeType":"YulIdentifier","src":"3469:1:30"},{"name":"y","nativeSrc":"3472:1:30","nodeType":"YulIdentifier","src":"3472:1:30"}],"functionName":{"name":"add","nativeSrc":"3465:3:30","nodeType":"YulIdentifier","src":"3465:3:30"},"nativeSrc":"3465:9:30","nodeType":"YulFunctionCall","src":"3465:9:30"},"variableNames":[{"name":"sum","nativeSrc":"3458:3:30","nodeType":"YulIdentifier","src":"3458:3:30"}]},{"body":{"nativeSrc":"3498:22:30","nodeType":"YulBlock","src":"3498:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3500:16:30","nodeType":"YulIdentifier","src":"3500:16:30"},"nativeSrc":"3500:18:30","nodeType":"YulFunctionCall","src":"3500:18:30"},"nativeSrc":"3500:18:30","nodeType":"YulExpressionStatement","src":"3500:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3490:1:30","nodeType":"YulIdentifier","src":"3490:1:30"},{"name":"sum","nativeSrc":"3493:3:30","nodeType":"YulIdentifier","src":"3493:3:30"}],"functionName":{"name":"gt","nativeSrc":"3487:2:30","nodeType":"YulIdentifier","src":"3487:2:30"},"nativeSrc":"3487:10:30","nodeType":"YulFunctionCall","src":"3487:10:30"},"nativeSrc":"3484:36:30","nodeType":"YulIf","src":"3484:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"3336:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3367:1:30","nodeType":"YulTypedName","src":"3367:1:30","type":""},{"name":"y","nativeSrc":"3370:1:30","nodeType":"YulTypedName","src":"3370:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3376:3:30","nodeType":"YulTypedName","src":"3376:3:30","type":""}],"src":"3336:191:30"},{"body":{"nativeSrc":"3576:79:30","nodeType":"YulBlock","src":"3576:79:30","statements":[{"body":{"nativeSrc":"3633:16:30","nodeType":"YulBlock","src":"3633:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3642:1:30","nodeType":"YulLiteral","src":"3642:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3645:1:30","nodeType":"YulLiteral","src":"3645:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3635:6:30","nodeType":"YulIdentifier","src":"3635:6:30"},"nativeSrc":"3635:12:30","nodeType":"YulFunctionCall","src":"3635:12:30"},"nativeSrc":"3635:12:30","nodeType":"YulExpressionStatement","src":"3635:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3599:5:30","nodeType":"YulIdentifier","src":"3599:5:30"},{"arguments":[{"name":"value","nativeSrc":"3624:5:30","nodeType":"YulIdentifier","src":"3624:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3606:17:30","nodeType":"YulIdentifier","src":"3606:17:30"},"nativeSrc":"3606:24:30","nodeType":"YulFunctionCall","src":"3606:24:30"}],"functionName":{"name":"eq","nativeSrc":"3596:2:30","nodeType":"YulIdentifier","src":"3596:2:30"},"nativeSrc":"3596:35:30","nodeType":"YulFunctionCall","src":"3596:35:30"}],"functionName":{"name":"iszero","nativeSrc":"3589:6:30","nodeType":"YulIdentifier","src":"3589:6:30"},"nativeSrc":"3589:43:30","nodeType":"YulFunctionCall","src":"3589:43:30"},"nativeSrc":"3586:63:30","nodeType":"YulIf","src":"3586:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"3533:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3569:5:30","nodeType":"YulTypedName","src":"3569:5:30","type":""}],"src":"3533:122:30"},{"body":{"nativeSrc":"3724:80:30","nodeType":"YulBlock","src":"3724:80:30","statements":[{"nativeSrc":"3734:22:30","nodeType":"YulAssignment","src":"3734:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"3749:6:30","nodeType":"YulIdentifier","src":"3749:6:30"}],"functionName":{"name":"mload","nativeSrc":"3743:5:30","nodeType":"YulIdentifier","src":"3743:5:30"},"nativeSrc":"3743:13:30","nodeType":"YulFunctionCall","src":"3743:13:30"},"variableNames":[{"name":"value","nativeSrc":"3734:5:30","nodeType":"YulIdentifier","src":"3734:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3792:5:30","nodeType":"YulIdentifier","src":"3792:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3765:26:30","nodeType":"YulIdentifier","src":"3765:26:30"},"nativeSrc":"3765:33:30","nodeType":"YulFunctionCall","src":"3765:33:30"},"nativeSrc":"3765:33:30","nodeType":"YulExpressionStatement","src":"3765:33:30"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3661:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3702:6:30","nodeType":"YulTypedName","src":"3702:6:30","type":""},{"name":"end","nativeSrc":"3710:3:30","nodeType":"YulTypedName","src":"3710:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3718:5:30","nodeType":"YulTypedName","src":"3718:5:30","type":""}],"src":"3661:143:30"},{"body":{"nativeSrc":"3887:274:30","nodeType":"YulBlock","src":"3887:274:30","statements":[{"body":{"nativeSrc":"3933:83:30","nodeType":"YulBlock","src":"3933:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3935:77:30","nodeType":"YulIdentifier","src":"3935:77:30"},"nativeSrc":"3935:79:30","nodeType":"YulFunctionCall","src":"3935:79:30"},"nativeSrc":"3935:79:30","nodeType":"YulExpressionStatement","src":"3935:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:30","nodeType":"YulIdentifier","src":"3908:7:30"},{"name":"headStart","nativeSrc":"3917:9:30","nodeType":"YulIdentifier","src":"3917:9:30"}],"functionName":{"name":"sub","nativeSrc":"3904:3:30","nodeType":"YulIdentifier","src":"3904:3:30"},"nativeSrc":"3904:23:30","nodeType":"YulFunctionCall","src":"3904:23:30"},{"kind":"number","nativeSrc":"3929:2:30","nodeType":"YulLiteral","src":"3929:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:30","nodeType":"YulIdentifier","src":"3900:3:30"},"nativeSrc":"3900:32:30","nodeType":"YulFunctionCall","src":"3900:32:30"},"nativeSrc":"3897:119:30","nodeType":"YulIf","src":"3897:119:30"},{"nativeSrc":"4026:128:30","nodeType":"YulBlock","src":"4026:128:30","statements":[{"nativeSrc":"4041:15:30","nodeType":"YulVariableDeclaration","src":"4041:15:30","value":{"kind":"number","nativeSrc":"4055:1:30","nodeType":"YulLiteral","src":"4055:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4045:6:30","nodeType":"YulTypedName","src":"4045:6:30","type":""}]},{"nativeSrc":"4070:74:30","nodeType":"YulAssignment","src":"4070:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:30","nodeType":"YulIdentifier","src":"4116:9:30"},{"name":"offset","nativeSrc":"4127:6:30","nodeType":"YulIdentifier","src":"4127:6:30"}],"functionName":{"name":"add","nativeSrc":"4112:3:30","nodeType":"YulIdentifier","src":"4112:3:30"},"nativeSrc":"4112:22:30","nodeType":"YulFunctionCall","src":"4112:22:30"},{"name":"dataEnd","nativeSrc":"4136:7:30","nodeType":"YulIdentifier","src":"4136:7:30"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4080:31:30","nodeType":"YulIdentifier","src":"4080:31:30"},"nativeSrc":"4080:64:30","nodeType":"YulFunctionCall","src":"4080:64:30"},"variableNames":[{"name":"value0","nativeSrc":"4070:6:30","nodeType":"YulIdentifier","src":"4070:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3810:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3857:9:30","nodeType":"YulTypedName","src":"3857:9:30","type":""},{"name":"dataEnd","nativeSrc":"3868:7:30","nodeType":"YulTypedName","src":"3868:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3880:6:30","nodeType":"YulTypedName","src":"3880:6:30","type":""}],"src":"3810:351:30"},{"body":{"nativeSrc":"4212:149:30","nodeType":"YulBlock","src":"4212:149:30","statements":[{"nativeSrc":"4222:25:30","nodeType":"YulAssignment","src":"4222:25:30","value":{"arguments":[{"name":"x","nativeSrc":"4245:1:30","nodeType":"YulIdentifier","src":"4245:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4227:17:30","nodeType":"YulIdentifier","src":"4227:17:30"},"nativeSrc":"4227:20:30","nodeType":"YulFunctionCall","src":"4227:20:30"},"variableNames":[{"name":"x","nativeSrc":"4222:1:30","nodeType":"YulIdentifier","src":"4222:1:30"}]},{"nativeSrc":"4256:25:30","nodeType":"YulAssignment","src":"4256:25:30","value":{"arguments":[{"name":"y","nativeSrc":"4279:1:30","nodeType":"YulIdentifier","src":"4279:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4261:17:30","nodeType":"YulIdentifier","src":"4261:17:30"},"nativeSrc":"4261:20:30","nodeType":"YulFunctionCall","src":"4261:20:30"},"variableNames":[{"name":"y","nativeSrc":"4256:1:30","nodeType":"YulIdentifier","src":"4256:1:30"}]},{"nativeSrc":"4290:17:30","nodeType":"YulAssignment","src":"4290:17:30","value":{"arguments":[{"name":"x","nativeSrc":"4302:1:30","nodeType":"YulIdentifier","src":"4302:1:30"},{"name":"y","nativeSrc":"4305:1:30","nodeType":"YulIdentifier","src":"4305:1:30"}],"functionName":{"name":"sub","nativeSrc":"4298:3:30","nodeType":"YulIdentifier","src":"4298:3:30"},"nativeSrc":"4298:9:30","nodeType":"YulFunctionCall","src":"4298:9:30"},"variableNames":[{"name":"diff","nativeSrc":"4290:4:30","nodeType":"YulIdentifier","src":"4290:4:30"}]},{"body":{"nativeSrc":"4332:22:30","nodeType":"YulBlock","src":"4332:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4334:16:30","nodeType":"YulIdentifier","src":"4334:16:30"},"nativeSrc":"4334:18:30","nodeType":"YulFunctionCall","src":"4334:18:30"},"nativeSrc":"4334:18:30","nodeType":"YulExpressionStatement","src":"4334:18:30"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"4323:4:30","nodeType":"YulIdentifier","src":"4323:4:30"},{"name":"x","nativeSrc":"4329:1:30","nodeType":"YulIdentifier","src":"4329:1:30"}],"functionName":{"name":"gt","nativeSrc":"4320:2:30","nodeType":"YulIdentifier","src":"4320:2:30"},"nativeSrc":"4320:11:30","nodeType":"YulFunctionCall","src":"4320:11:30"},"nativeSrc":"4317:37:30","nodeType":"YulIf","src":"4317:37:30"}]},"name":"checked_sub_t_uint256","nativeSrc":"4167:194:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4198:1:30","nodeType":"YulTypedName","src":"4198:1:30","type":""},{"name":"y","nativeSrc":"4201:1:30","nodeType":"YulTypedName","src":"4201:1:30","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4207:4:30","nodeType":"YulTypedName","src":"4207:4:30","type":""}],"src":"4167:194:30"},{"body":{"nativeSrc":"4415:362:30","nodeType":"YulBlock","src":"4415:362:30","statements":[{"nativeSrc":"4425:25:30","nodeType":"YulAssignment","src":"4425:25:30","value":{"arguments":[{"name":"x","nativeSrc":"4448:1:30","nodeType":"YulIdentifier","src":"4448:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4430:17:30","nodeType":"YulIdentifier","src":"4430:17:30"},"nativeSrc":"4430:20:30","nodeType":"YulFunctionCall","src":"4430:20:30"},"variableNames":[{"name":"x","nativeSrc":"4425:1:30","nodeType":"YulIdentifier","src":"4425:1:30"}]},{"nativeSrc":"4459:25:30","nodeType":"YulAssignment","src":"4459:25:30","value":{"arguments":[{"name":"y","nativeSrc":"4482:1:30","nodeType":"YulIdentifier","src":"4482:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4464:17:30","nodeType":"YulIdentifier","src":"4464:17:30"},"nativeSrc":"4464:20:30","nodeType":"YulFunctionCall","src":"4464:20:30"},"variableNames":[{"name":"y","nativeSrc":"4459:1:30","nodeType":"YulIdentifier","src":"4459:1:30"}]},{"nativeSrc":"4493:28:30","nodeType":"YulVariableDeclaration","src":"4493:28:30","value":{"arguments":[{"name":"x","nativeSrc":"4516:1:30","nodeType":"YulIdentifier","src":"4516:1:30"},{"name":"y","nativeSrc":"4519:1:30","nodeType":"YulIdentifier","src":"4519:1:30"}],"functionName":{"name":"mul","nativeSrc":"4512:3:30","nodeType":"YulIdentifier","src":"4512:3:30"},"nativeSrc":"4512:9:30","nodeType":"YulFunctionCall","src":"4512:9:30"},"variables":[{"name":"product_raw","nativeSrc":"4497:11:30","nodeType":"YulTypedName","src":"4497:11:30","type":""}]},{"nativeSrc":"4530:41:30","nodeType":"YulAssignment","src":"4530:41:30","value":{"arguments":[{"name":"product_raw","nativeSrc":"4559:11:30","nodeType":"YulIdentifier","src":"4559:11:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4541:17:30","nodeType":"YulIdentifier","src":"4541:17:30"},"nativeSrc":"4541:30:30","nodeType":"YulFunctionCall","src":"4541:30:30"},"variableNames":[{"name":"product","nativeSrc":"4530:7:30","nodeType":"YulIdentifier","src":"4530:7:30"}]},{"body":{"nativeSrc":"4748:22:30","nodeType":"YulBlock","src":"4748:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4750:16:30","nodeType":"YulIdentifier","src":"4750:16:30"},"nativeSrc":"4750:18:30","nodeType":"YulFunctionCall","src":"4750:18:30"},"nativeSrc":"4750:18:30","nodeType":"YulExpressionStatement","src":"4750:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4681:1:30","nodeType":"YulIdentifier","src":"4681:1:30"}],"functionName":{"name":"iszero","nativeSrc":"4674:6:30","nodeType":"YulIdentifier","src":"4674:6:30"},"nativeSrc":"4674:9:30","nodeType":"YulFunctionCall","src":"4674:9:30"},{"arguments":[{"name":"y","nativeSrc":"4704:1:30","nodeType":"YulIdentifier","src":"4704:1:30"},{"arguments":[{"name":"product","nativeSrc":"4711:7:30","nodeType":"YulIdentifier","src":"4711:7:30"},{"name":"x","nativeSrc":"4720:1:30","nodeType":"YulIdentifier","src":"4720:1:30"}],"functionName":{"name":"div","nativeSrc":"4707:3:30","nodeType":"YulIdentifier","src":"4707:3:30"},"nativeSrc":"4707:15:30","nodeType":"YulFunctionCall","src":"4707:15:30"}],"functionName":{"name":"eq","nativeSrc":"4701:2:30","nodeType":"YulIdentifier","src":"4701:2:30"},"nativeSrc":"4701:22:30","nodeType":"YulFunctionCall","src":"4701:22:30"}],"functionName":{"name":"or","nativeSrc":"4654:2:30","nodeType":"YulIdentifier","src":"4654:2:30"},"nativeSrc":"4654:83:30","nodeType":"YulFunctionCall","src":"4654:83:30"}],"functionName":{"name":"iszero","nativeSrc":"4634:6:30","nodeType":"YulIdentifier","src":"4634:6:30"},"nativeSrc":"4634:113:30","nodeType":"YulFunctionCall","src":"4634:113:30"},"nativeSrc":"4631:139:30","nodeType":"YulIf","src":"4631:139:30"}]},"name":"checked_mul_t_uint256","nativeSrc":"4367:410:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4398:1:30","nodeType":"YulTypedName","src":"4398:1:30","type":""},{"name":"y","nativeSrc":"4401:1:30","nodeType":"YulTypedName","src":"4401:1:30","type":""}],"returnVariables":[{"name":"product","nativeSrc":"4407:7:30","nodeType":"YulTypedName","src":"4407:7:30","type":""}],"src":"4367:410:30"},{"body":{"nativeSrc":"4811:152:30","nodeType":"YulBlock","src":"4811:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4828:1:30","nodeType":"YulLiteral","src":"4828:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4831:77:30","nodeType":"YulLiteral","src":"4831:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4821:6:30","nodeType":"YulIdentifier","src":"4821:6:30"},"nativeSrc":"4821:88:30","nodeType":"YulFunctionCall","src":"4821:88:30"},"nativeSrc":"4821:88:30","nodeType":"YulExpressionStatement","src":"4821:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4925:1:30","nodeType":"YulLiteral","src":"4925:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"4928:4:30","nodeType":"YulLiteral","src":"4928:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"4918:6:30","nodeType":"YulIdentifier","src":"4918:6:30"},"nativeSrc":"4918:15:30","nodeType":"YulFunctionCall","src":"4918:15:30"},"nativeSrc":"4918:15:30","nodeType":"YulExpressionStatement","src":"4918:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4949:1:30","nodeType":"YulLiteral","src":"4949:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4952:4:30","nodeType":"YulLiteral","src":"4952:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4942:6:30","nodeType":"YulIdentifier","src":"4942:6:30"},"nativeSrc":"4942:15:30","nodeType":"YulFunctionCall","src":"4942:15:30"},"nativeSrc":"4942:15:30","nodeType":"YulExpressionStatement","src":"4942:15:30"}]},"name":"panic_error_0x12","nativeSrc":"4783:180:30","nodeType":"YulFunctionDefinition","src":"4783:180:30"},{"body":{"nativeSrc":"5011:143:30","nodeType":"YulBlock","src":"5011:143:30","statements":[{"nativeSrc":"5021:25:30","nodeType":"YulAssignment","src":"5021:25:30","value":{"arguments":[{"name":"x","nativeSrc":"5044:1:30","nodeType":"YulIdentifier","src":"5044:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5026:17:30","nodeType":"YulIdentifier","src":"5026:17:30"},"nativeSrc":"5026:20:30","nodeType":"YulFunctionCall","src":"5026:20:30"},"variableNames":[{"name":"x","nativeSrc":"5021:1:30","nodeType":"YulIdentifier","src":"5021:1:30"}]},{"nativeSrc":"5055:25:30","nodeType":"YulAssignment","src":"5055:25:30","value":{"arguments":[{"name":"y","nativeSrc":"5078:1:30","nodeType":"YulIdentifier","src":"5078:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5060:17:30","nodeType":"YulIdentifier","src":"5060:17:30"},"nativeSrc":"5060:20:30","nodeType":"YulFunctionCall","src":"5060:20:30"},"variableNames":[{"name":"y","nativeSrc":"5055:1:30","nodeType":"YulIdentifier","src":"5055:1:30"}]},{"body":{"nativeSrc":"5102:22:30","nodeType":"YulBlock","src":"5102:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"5104:16:30","nodeType":"YulIdentifier","src":"5104:16:30"},"nativeSrc":"5104:18:30","nodeType":"YulFunctionCall","src":"5104:18:30"},"nativeSrc":"5104:18:30","nodeType":"YulExpressionStatement","src":"5104:18:30"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"5099:1:30","nodeType":"YulIdentifier","src":"5099:1:30"}],"functionName":{"name":"iszero","nativeSrc":"5092:6:30","nodeType":"YulIdentifier","src":"5092:6:30"},"nativeSrc":"5092:9:30","nodeType":"YulFunctionCall","src":"5092:9:30"},"nativeSrc":"5089:35:30","nodeType":"YulIf","src":"5089:35:30"},{"nativeSrc":"5134:14:30","nodeType":"YulAssignment","src":"5134:14:30","value":{"arguments":[{"name":"x","nativeSrc":"5143:1:30","nodeType":"YulIdentifier","src":"5143:1:30"},{"name":"y","nativeSrc":"5146:1:30","nodeType":"YulIdentifier","src":"5146:1:30"}],"functionName":{"name":"div","nativeSrc":"5139:3:30","nodeType":"YulIdentifier","src":"5139:3:30"},"nativeSrc":"5139:9:30","nodeType":"YulFunctionCall","src":"5139:9:30"},"variableNames":[{"name":"r","nativeSrc":"5134:1:30","nodeType":"YulIdentifier","src":"5134:1:30"}]}]},"name":"checked_div_t_uint256","nativeSrc":"4969:185:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5000:1:30","nodeType":"YulTypedName","src":"5000:1:30","type":""},{"name":"y","nativeSrc":"5003:1:30","nodeType":"YulTypedName","src":"5003:1:30","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5009:1:30","nodeType":"YulTypedName","src":"5009:1:30","type":""}],"src":"4969:185:30"},{"body":{"nativeSrc":"5286:206:30","nodeType":"YulBlock","src":"5286:206:30","statements":[{"nativeSrc":"5296:26:30","nodeType":"YulAssignment","src":"5296:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5308:9:30","nodeType":"YulIdentifier","src":"5308:9:30"},{"kind":"number","nativeSrc":"5319:2:30","nodeType":"YulLiteral","src":"5319:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5304:3:30","nodeType":"YulIdentifier","src":"5304:3:30"},"nativeSrc":"5304:18:30","nodeType":"YulFunctionCall","src":"5304:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5296:4:30","nodeType":"YulIdentifier","src":"5296:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5376:6:30","nodeType":"YulIdentifier","src":"5376:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5389:9:30","nodeType":"YulIdentifier","src":"5389:9:30"},{"kind":"number","nativeSrc":"5400:1:30","nodeType":"YulLiteral","src":"5400:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5385:3:30","nodeType":"YulIdentifier","src":"5385:3:30"},"nativeSrc":"5385:17:30","nodeType":"YulFunctionCall","src":"5385:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5332:43:30","nodeType":"YulIdentifier","src":"5332:43:30"},"nativeSrc":"5332:71:30","nodeType":"YulFunctionCall","src":"5332:71:30"},"nativeSrc":"5332:71:30","nodeType":"YulExpressionStatement","src":"5332:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5457:6:30","nodeType":"YulIdentifier","src":"5457:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5470:9:30","nodeType":"YulIdentifier","src":"5470:9:30"},{"kind":"number","nativeSrc":"5481:2:30","nodeType":"YulLiteral","src":"5481:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5466:3:30","nodeType":"YulIdentifier","src":"5466:3:30"},"nativeSrc":"5466:18:30","nodeType":"YulFunctionCall","src":"5466:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5413:43:30","nodeType":"YulIdentifier","src":"5413:43:30"},"nativeSrc":"5413:72:30","nodeType":"YulFunctionCall","src":"5413:72:30"},"nativeSrc":"5413:72:30","nodeType":"YulExpressionStatement","src":"5413:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"5160:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5250:9:30","nodeType":"YulTypedName","src":"5250:9:30","type":""},{"name":"value1","nativeSrc":"5262:6:30","nodeType":"YulTypedName","src":"5262:6:30","type":""},{"name":"value0","nativeSrc":"5270:6:30","nodeType":"YulTypedName","src":"5270:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5281:4:30","nodeType":"YulTypedName","src":"5281:4:30","type":""}],"src":"5160:332:30"},{"body":{"nativeSrc":"5611:34:30","nodeType":"YulBlock","src":"5611:34:30","statements":[{"nativeSrc":"5621:18:30","nodeType":"YulAssignment","src":"5621:18:30","value":{"name":"pos","nativeSrc":"5636:3:30","nodeType":"YulIdentifier","src":"5636:3:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"5621:11:30","nodeType":"YulIdentifier","src":"5621:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5498:147:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5583:3:30","nodeType":"YulTypedName","src":"5583:3:30","type":""},{"name":"length","nativeSrc":"5588:6:30","nodeType":"YulTypedName","src":"5588:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5599:11:30","nodeType":"YulTypedName","src":"5599:11:30","type":""}],"src":"5498:147:30"},{"body":{"nativeSrc":"5757:8:30","nodeType":"YulBlock","src":"5757:8:30","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5651:114:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5749:6:30","nodeType":"YulTypedName","src":"5749:6:30","type":""}],"src":"5651:114:30"},{"body":{"nativeSrc":"5934:235:30","nodeType":"YulBlock","src":"5934:235:30","statements":[{"nativeSrc":"5944:90:30","nodeType":"YulAssignment","src":"5944:90:30","value":{"arguments":[{"name":"pos","nativeSrc":"6027:3:30","nodeType":"YulIdentifier","src":"6027:3:30"},{"kind":"number","nativeSrc":"6032:1:30","nodeType":"YulLiteral","src":"6032:1:30","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5951:75:30","nodeType":"YulIdentifier","src":"5951:75:30"},"nativeSrc":"5951:83:30","nodeType":"YulFunctionCall","src":"5951:83:30"},"variableNames":[{"name":"pos","nativeSrc":"5944:3:30","nodeType":"YulIdentifier","src":"5944:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6132:3:30","nodeType":"YulIdentifier","src":"6132:3:30"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"6043:88:30","nodeType":"YulIdentifier","src":"6043:88:30"},"nativeSrc":"6043:93:30","nodeType":"YulFunctionCall","src":"6043:93:30"},"nativeSrc":"6043:93:30","nodeType":"YulExpressionStatement","src":"6043:93:30"},{"nativeSrc":"6145:18:30","nodeType":"YulAssignment","src":"6145:18:30","value":{"arguments":[{"name":"pos","nativeSrc":"6156:3:30","nodeType":"YulIdentifier","src":"6156:3:30"},{"kind":"number","nativeSrc":"6161:1:30","nodeType":"YulLiteral","src":"6161:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6152:3:30","nodeType":"YulIdentifier","src":"6152:3:30"},"nativeSrc":"6152:11:30","nodeType":"YulFunctionCall","src":"6152:11:30"},"variableNames":[{"name":"end","nativeSrc":"6145:3:30","nodeType":"YulIdentifier","src":"6145:3:30"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5771:398:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5922:3:30","nodeType":"YulTypedName","src":"5922:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5930:3:30","nodeType":"YulTypedName","src":"5930:3:30","type":""}],"src":"5771:398:30"},{"body":{"nativeSrc":"6363:191:30","nodeType":"YulBlock","src":"6363:191:30","statements":[{"nativeSrc":"6374:154:30","nodeType":"YulAssignment","src":"6374:154:30","value":{"arguments":[{"name":"pos","nativeSrc":"6524:3:30","nodeType":"YulIdentifier","src":"6524:3:30"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"6381:141:30","nodeType":"YulIdentifier","src":"6381:141:30"},"nativeSrc":"6381:147:30","nodeType":"YulFunctionCall","src":"6381:147:30"},"variableNames":[{"name":"pos","nativeSrc":"6374:3:30","nodeType":"YulIdentifier","src":"6374:3:30"}]},{"nativeSrc":"6538:10:30","nodeType":"YulAssignment","src":"6538:10:30","value":{"name":"pos","nativeSrc":"6545:3:30","nodeType":"YulIdentifier","src":"6545:3:30"},"variableNames":[{"name":"end","nativeSrc":"6538:3:30","nodeType":"YulIdentifier","src":"6538:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"6175:379:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6350:3:30","nodeType":"YulTypedName","src":"6350:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6359:3:30","nodeType":"YulTypedName","src":"6359:3:30","type":""}],"src":"6175:379:30"},{"body":{"nativeSrc":"6602:48:30","nodeType":"YulBlock","src":"6602:48:30","statements":[{"nativeSrc":"6612:32:30","nodeType":"YulAssignment","src":"6612:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6637:5:30","nodeType":"YulIdentifier","src":"6637:5:30"}],"functionName":{"name":"iszero","nativeSrc":"6630:6:30","nodeType":"YulIdentifier","src":"6630:6:30"},"nativeSrc":"6630:13:30","nodeType":"YulFunctionCall","src":"6630:13:30"}],"functionName":{"name":"iszero","nativeSrc":"6623:6:30","nodeType":"YulIdentifier","src":"6623:6:30"},"nativeSrc":"6623:21:30","nodeType":"YulFunctionCall","src":"6623:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"6612:7:30","nodeType":"YulIdentifier","src":"6612:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"6560:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6584:5:30","nodeType":"YulTypedName","src":"6584:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6594:7:30","nodeType":"YulTypedName","src":"6594:7:30","type":""}],"src":"6560:90:30"},{"body":{"nativeSrc":"6696:76:30","nodeType":"YulBlock","src":"6696:76:30","statements":[{"body":{"nativeSrc":"6750:16:30","nodeType":"YulBlock","src":"6750:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6759:1:30","nodeType":"YulLiteral","src":"6759:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6762:1:30","nodeType":"YulLiteral","src":"6762:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6752:6:30","nodeType":"YulIdentifier","src":"6752:6:30"},"nativeSrc":"6752:12:30","nodeType":"YulFunctionCall","src":"6752:12:30"},"nativeSrc":"6752:12:30","nodeType":"YulExpressionStatement","src":"6752:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6719:5:30","nodeType":"YulIdentifier","src":"6719:5:30"},{"arguments":[{"name":"value","nativeSrc":"6741:5:30","nodeType":"YulIdentifier","src":"6741:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6726:14:30","nodeType":"YulIdentifier","src":"6726:14:30"},"nativeSrc":"6726:21:30","nodeType":"YulFunctionCall","src":"6726:21:30"}],"functionName":{"name":"eq","nativeSrc":"6716:2:30","nodeType":"YulIdentifier","src":"6716:2:30"},"nativeSrc":"6716:32:30","nodeType":"YulFunctionCall","src":"6716:32:30"}],"functionName":{"name":"iszero","nativeSrc":"6709:6:30","nodeType":"YulIdentifier","src":"6709:6:30"},"nativeSrc":"6709:40:30","nodeType":"YulFunctionCall","src":"6709:40:30"},"nativeSrc":"6706:60:30","nodeType":"YulIf","src":"6706:60:30"}]},"name":"validator_revert_t_bool","nativeSrc":"6656:116:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6689:5:30","nodeType":"YulTypedName","src":"6689:5:30","type":""}],"src":"6656:116:30"},{"body":{"nativeSrc":"6838:77:30","nodeType":"YulBlock","src":"6838:77:30","statements":[{"nativeSrc":"6848:22:30","nodeType":"YulAssignment","src":"6848:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"6863:6:30","nodeType":"YulIdentifier","src":"6863:6:30"}],"functionName":{"name":"mload","nativeSrc":"6857:5:30","nodeType":"YulIdentifier","src":"6857:5:30"},"nativeSrc":"6857:13:30","nodeType":"YulFunctionCall","src":"6857:13:30"},"variableNames":[{"name":"value","nativeSrc":"6848:5:30","nodeType":"YulIdentifier","src":"6848:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6903:5:30","nodeType":"YulIdentifier","src":"6903:5:30"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6879:23:30","nodeType":"YulIdentifier","src":"6879:23:30"},"nativeSrc":"6879:30:30","nodeType":"YulFunctionCall","src":"6879:30:30"},"nativeSrc":"6879:30:30","nodeType":"YulExpressionStatement","src":"6879:30:30"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"6778:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6816:6:30","nodeType":"YulTypedName","src":"6816:6:30","type":""},{"name":"end","nativeSrc":"6824:3:30","nodeType":"YulTypedName","src":"6824:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6832:5:30","nodeType":"YulTypedName","src":"6832:5:30","type":""}],"src":"6778:137:30"},{"body":{"nativeSrc":"6995:271:30","nodeType":"YulBlock","src":"6995:271:30","statements":[{"body":{"nativeSrc":"7041:83:30","nodeType":"YulBlock","src":"7041:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7043:77:30","nodeType":"YulIdentifier","src":"7043:77:30"},"nativeSrc":"7043:79:30","nodeType":"YulFunctionCall","src":"7043:79:30"},"nativeSrc":"7043:79:30","nodeType":"YulExpressionStatement","src":"7043:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7016:7:30","nodeType":"YulIdentifier","src":"7016:7:30"},{"name":"headStart","nativeSrc":"7025:9:30","nodeType":"YulIdentifier","src":"7025:9:30"}],"functionName":{"name":"sub","nativeSrc":"7012:3:30","nodeType":"YulIdentifier","src":"7012:3:30"},"nativeSrc":"7012:23:30","nodeType":"YulFunctionCall","src":"7012:23:30"},{"kind":"number","nativeSrc":"7037:2:30","nodeType":"YulLiteral","src":"7037:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7008:3:30","nodeType":"YulIdentifier","src":"7008:3:30"},"nativeSrc":"7008:32:30","nodeType":"YulFunctionCall","src":"7008:32:30"},"nativeSrc":"7005:119:30","nodeType":"YulIf","src":"7005:119:30"},{"nativeSrc":"7134:125:30","nodeType":"YulBlock","src":"7134:125:30","statements":[{"nativeSrc":"7149:15:30","nodeType":"YulVariableDeclaration","src":"7149:15:30","value":{"kind":"number","nativeSrc":"7163:1:30","nodeType":"YulLiteral","src":"7163:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7153:6:30","nodeType":"YulTypedName","src":"7153:6:30","type":""}]},{"nativeSrc":"7178:71:30","nodeType":"YulAssignment","src":"7178:71:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7221:9:30","nodeType":"YulIdentifier","src":"7221:9:30"},{"name":"offset","nativeSrc":"7232:6:30","nodeType":"YulIdentifier","src":"7232:6:30"}],"functionName":{"name":"add","nativeSrc":"7217:3:30","nodeType":"YulIdentifier","src":"7217:3:30"},"nativeSrc":"7217:22:30","nodeType":"YulFunctionCall","src":"7217:22:30"},{"name":"dataEnd","nativeSrc":"7241:7:30","nodeType":"YulIdentifier","src":"7241:7:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"7188:28:30","nodeType":"YulIdentifier","src":"7188:28:30"},"nativeSrc":"7188:61:30","nodeType":"YulFunctionCall","src":"7188:61:30"},"variableNames":[{"name":"value0","nativeSrc":"7178:6:30","nodeType":"YulIdentifier","src":"7178:6:30"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6921:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6965:9:30","nodeType":"YulTypedName","src":"6965:9:30","type":""},{"name":"dataEnd","nativeSrc":"6976:7:30","nodeType":"YulTypedName","src":"6976:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6988:6:30","nodeType":"YulTypedName","src":"6988:6:30","type":""}],"src":"6921:345:30"},{"body":{"nativeSrc":"7330:40:30","nodeType":"YulBlock","src":"7330:40:30","statements":[{"nativeSrc":"7341:22:30","nodeType":"YulAssignment","src":"7341:22:30","value":{"arguments":[{"name":"value","nativeSrc":"7357:5:30","nodeType":"YulIdentifier","src":"7357:5:30"}],"functionName":{"name":"mload","nativeSrc":"7351:5:30","nodeType":"YulIdentifier","src":"7351:5:30"},"nativeSrc":"7351:12:30","nodeType":"YulFunctionCall","src":"7351:12:30"},"variableNames":[{"name":"length","nativeSrc":"7341:6:30","nodeType":"YulIdentifier","src":"7341:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7272:98:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7313:5:30","nodeType":"YulTypedName","src":"7313:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7323:6:30","nodeType":"YulTypedName","src":"7323:6:30","type":""}],"src":"7272:98:30"},{"body":{"nativeSrc":"7438:184:30","nodeType":"YulBlock","src":"7438:184:30","statements":[{"nativeSrc":"7448:10:30","nodeType":"YulVariableDeclaration","src":"7448:10:30","value":{"kind":"number","nativeSrc":"7457:1:30","nodeType":"YulLiteral","src":"7457:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7452:1:30","nodeType":"YulTypedName","src":"7452:1:30","type":""}]},{"body":{"nativeSrc":"7517:63:30","nodeType":"YulBlock","src":"7517:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7542:3:30","nodeType":"YulIdentifier","src":"7542:3:30"},{"name":"i","nativeSrc":"7547:1:30","nodeType":"YulIdentifier","src":"7547:1:30"}],"functionName":{"name":"add","nativeSrc":"7538:3:30","nodeType":"YulIdentifier","src":"7538:3:30"},"nativeSrc":"7538:11:30","nodeType":"YulFunctionCall","src":"7538:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7561:3:30","nodeType":"YulIdentifier","src":"7561:3:30"},{"name":"i","nativeSrc":"7566:1:30","nodeType":"YulIdentifier","src":"7566:1:30"}],"functionName":{"name":"add","nativeSrc":"7557:3:30","nodeType":"YulIdentifier","src":"7557:3:30"},"nativeSrc":"7557:11:30","nodeType":"YulFunctionCall","src":"7557:11:30"}],"functionName":{"name":"mload","nativeSrc":"7551:5:30","nodeType":"YulIdentifier","src":"7551:5:30"},"nativeSrc":"7551:18:30","nodeType":"YulFunctionCall","src":"7551:18:30"}],"functionName":{"name":"mstore","nativeSrc":"7531:6:30","nodeType":"YulIdentifier","src":"7531:6:30"},"nativeSrc":"7531:39:30","nodeType":"YulFunctionCall","src":"7531:39:30"},"nativeSrc":"7531:39:30","nodeType":"YulExpressionStatement","src":"7531:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7478:1:30","nodeType":"YulIdentifier","src":"7478:1:30"},{"name":"length","nativeSrc":"7481:6:30","nodeType":"YulIdentifier","src":"7481:6:30"}],"functionName":{"name":"lt","nativeSrc":"7475:2:30","nodeType":"YulIdentifier","src":"7475:2:30"},"nativeSrc":"7475:13:30","nodeType":"YulFunctionCall","src":"7475:13:30"},"nativeSrc":"7467:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"7489:19:30","nodeType":"YulBlock","src":"7489:19:30","statements":[{"nativeSrc":"7491:15:30","nodeType":"YulAssignment","src":"7491:15:30","value":{"arguments":[{"name":"i","nativeSrc":"7500:1:30","nodeType":"YulIdentifier","src":"7500:1:30"},{"kind":"number","nativeSrc":"7503:2:30","nodeType":"YulLiteral","src":"7503:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7496:3:30","nodeType":"YulIdentifier","src":"7496:3:30"},"nativeSrc":"7496:10:30","nodeType":"YulFunctionCall","src":"7496:10:30"},"variableNames":[{"name":"i","nativeSrc":"7491:1:30","nodeType":"YulIdentifier","src":"7491:1:30"}]}]},"pre":{"nativeSrc":"7471:3:30","nodeType":"YulBlock","src":"7471:3:30","statements":[]},"src":"7467:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7600:3:30","nodeType":"YulIdentifier","src":"7600:3:30"},{"name":"length","nativeSrc":"7605:6:30","nodeType":"YulIdentifier","src":"7605:6:30"}],"functionName":{"name":"add","nativeSrc":"7596:3:30","nodeType":"YulIdentifier","src":"7596:3:30"},"nativeSrc":"7596:16:30","nodeType":"YulFunctionCall","src":"7596:16:30"},{"kind":"number","nativeSrc":"7614:1:30","nodeType":"YulLiteral","src":"7614:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7589:6:30","nodeType":"YulIdentifier","src":"7589:6:30"},"nativeSrc":"7589:27:30","nodeType":"YulFunctionCall","src":"7589:27:30"},"nativeSrc":"7589:27:30","nodeType":"YulExpressionStatement","src":"7589:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7376:246:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7420:3:30","nodeType":"YulTypedName","src":"7420:3:30","type":""},{"name":"dst","nativeSrc":"7425:3:30","nodeType":"YulTypedName","src":"7425:3:30","type":""},{"name":"length","nativeSrc":"7430:6:30","nodeType":"YulTypedName","src":"7430:6:30","type":""}],"src":"7376:246:30"},{"body":{"nativeSrc":"7736:278:30","nodeType":"YulBlock","src":"7736:278:30","statements":[{"nativeSrc":"7746:52:30","nodeType":"YulVariableDeclaration","src":"7746:52:30","value":{"arguments":[{"name":"value","nativeSrc":"7792:5:30","nodeType":"YulIdentifier","src":"7792:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7760:31:30","nodeType":"YulIdentifier","src":"7760:31:30"},"nativeSrc":"7760:38:30","nodeType":"YulFunctionCall","src":"7760:38:30"},"variables":[{"name":"length","nativeSrc":"7750:6:30","nodeType":"YulTypedName","src":"7750:6:30","type":""}]},{"nativeSrc":"7807:95:30","nodeType":"YulAssignment","src":"7807:95:30","value":{"arguments":[{"name":"pos","nativeSrc":"7890:3:30","nodeType":"YulIdentifier","src":"7890:3:30"},{"name":"length","nativeSrc":"7895:6:30","nodeType":"YulIdentifier","src":"7895:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7814:75:30","nodeType":"YulIdentifier","src":"7814:75:30"},"nativeSrc":"7814:88:30","nodeType":"YulFunctionCall","src":"7814:88:30"},"variableNames":[{"name":"pos","nativeSrc":"7807:3:30","nodeType":"YulIdentifier","src":"7807:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7950:5:30","nodeType":"YulIdentifier","src":"7950:5:30"},{"kind":"number","nativeSrc":"7957:4:30","nodeType":"YulLiteral","src":"7957:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7946:3:30","nodeType":"YulIdentifier","src":"7946:3:30"},"nativeSrc":"7946:16:30","nodeType":"YulFunctionCall","src":"7946:16:30"},{"name":"pos","nativeSrc":"7964:3:30","nodeType":"YulIdentifier","src":"7964:3:30"},{"name":"length","nativeSrc":"7969:6:30","nodeType":"YulIdentifier","src":"7969:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7911:34:30","nodeType":"YulIdentifier","src":"7911:34:30"},"nativeSrc":"7911:65:30","nodeType":"YulFunctionCall","src":"7911:65:30"},"nativeSrc":"7911:65:30","nodeType":"YulExpressionStatement","src":"7911:65:30"},{"nativeSrc":"7985:23:30","nodeType":"YulAssignment","src":"7985:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"7996:3:30","nodeType":"YulIdentifier","src":"7996:3:30"},{"name":"length","nativeSrc":"8001:6:30","nodeType":"YulIdentifier","src":"8001:6:30"}],"functionName":{"name":"add","nativeSrc":"7992:3:30","nodeType":"YulIdentifier","src":"7992:3:30"},"nativeSrc":"7992:16:30","nodeType":"YulFunctionCall","src":"7992:16:30"},"variableNames":[{"name":"end","nativeSrc":"7985:3:30","nodeType":"YulIdentifier","src":"7985:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7628:386:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7717:5:30","nodeType":"YulTypedName","src":"7717:5:30","type":""},{"name":"pos","nativeSrc":"7724:3:30","nodeType":"YulTypedName","src":"7724:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7732:3:30","nodeType":"YulTypedName","src":"7732:3:30","type":""}],"src":"7628:386:30"},{"body":{"nativeSrc":"8154:137:30","nodeType":"YulBlock","src":"8154:137:30","statements":[{"nativeSrc":"8165:100:30","nodeType":"YulAssignment","src":"8165:100:30","value":{"arguments":[{"name":"value0","nativeSrc":"8252:6:30","nodeType":"YulIdentifier","src":"8252:6:30"},{"name":"pos","nativeSrc":"8261:3:30","nodeType":"YulIdentifier","src":"8261:3:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8172:79:30","nodeType":"YulIdentifier","src":"8172:79:30"},"nativeSrc":"8172:93:30","nodeType":"YulFunctionCall","src":"8172:93:30"},"variableNames":[{"name":"pos","nativeSrc":"8165:3:30","nodeType":"YulIdentifier","src":"8165:3:30"}]},{"nativeSrc":"8275:10:30","nodeType":"YulAssignment","src":"8275:10:30","value":{"name":"pos","nativeSrc":"8282:3:30","nodeType":"YulIdentifier","src":"8282:3:30"},"variableNames":[{"name":"end","nativeSrc":"8275:3:30","nodeType":"YulIdentifier","src":"8275:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8020:271:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8133:3:30","nodeType":"YulTypedName","src":"8133:3:30","type":""},{"name":"value0","nativeSrc":"8139:6:30","nodeType":"YulTypedName","src":"8139:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8150:3:30","nodeType":"YulTypedName","src":"8150:3:30","type":""}],"src":"8020:271:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"561":[{"length":32,"start":1611}],"563":[{"length":32,"start":908}]},"linkReferences":{},"object":"6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212202bb56f1f9348c000eea4ff0f22e80af2c473cfba2642417c6b4a02bf5c1b54c564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xB5 PUSH16 0x1F9348C000EEA4FF0F22E80AF2C473CF 0xBA 0x26 TIMESTAMP COINBASE PUSH29 0x6B4A02BF5C1B54C564736F6C6343000818003300000000000000000000 ","sourceMap":"1638:4032:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;4919:202:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3905:198;;;;;;;;;;;;;:::i;:::-;;1638:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:91:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3608:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:134:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:165;4682:7;4708:63;4749:10;:8;:10::i;:::-;4725:21;:34;;;;:::i;:::-;4761:9;4708:16;:63::i;:::-;4701:70;;4613:165;;;:::o;2662:91::-;2711:7;2737:9;2730:16;;;;2662:91;:::o;4227:246::-;4284:14;4301:17;4312:5;4301:10;:17::i;:::-;4284:34;;4353:6;4328:14;:21;4343:5;4328:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4388:5;4374:28;;;4395:6;4374:28;;;;;;:::i;:::-;;;;;;;;4412:54;4442:5;4450:7;:5;:7::i;:::-;4459:6;4412:22;:54::i;:::-;4274:199;4227:246;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4919:202:3:-;5003:7;5029:85;5087:15;5096:5;5087:8;:15::i;:::-;5053:5;5046:23;;;5078:4;5046:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;5104:9;5029:16;:85::i;:::-;5022:92;;4919:202;;;;:::o;3905:198::-;3949:14;3966:12;:10;:12::i;:::-;3949:29;;4001:6;3988:9;;:19;;;;;;;:::i;:::-;;;;;;;;4022:21;4036:6;4022:21;;;;;;:::i;:::-;;;;;;;;4053:43;4079:7;:5;:7::i;:::-;4089:6;4053:17;:43::i;:::-;3939:164;3905:198::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2979:91:3:-;3028:7;3054:9;;3047:16;;2979:91;:::o;3137:116::-;3199:7;3225:14;:21;3240:5;3225:21;;;;;;;;;;;;;;;;3218:28;;3137:116;;;:::o;3608:159::-;3672:7;3745:15;3754:5;3745:8;:15::i;:::-;3698:44;3711:5;3725:15;3698:12;:44::i;:::-;:62;;;;:::i;:::-;3691:69;;3608:159;;;:::o;2510:85::-;2556:7;2582:6;2575:13;;;;2510:85;:::o;2817:97::-;2861:7;2897:10;:8;:10::i;:::-;2887:7;:5;:7::i;:::-;:20;;;;:::i;:::-;2880:27;;2817:97;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3328:134:3:-;3379:7;3445:10;:8;:10::i;:::-;3405:37;3425:15;3405:12;:37::i;:::-;:50;;;;:::i;:::-;3398:57;;3328:134;:::o;5316:352::-;5416:7;5451;:5;:7::i;:::-;5439:9;:19;;;5435:227;;;5481:1;5474:8;;;;5435:227;5516:5;:3;:5::i;:::-;5503:9;:18;;;5499:163;;5544:15;5537:22;;;;5499:163;5641:10;:8;:10::i;:::-;5629:7;:5;:7::i;:::-;5617:9;:19;;;;;;:::i;:::-;5598:15;:39;;;;:::i;:::-;5597:54;;;;:::i;:::-;5590:61;;5316:352;;;;;:::o;1303:160:11:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1531:331:12:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;4059:629:11:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;2705:151:12:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:30;197:1;194;187:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:77::-;1080:7;1109:5;1098:16;;1043:77;;;:::o;1126:118::-;1213:24;1231:5;1213:24;:::i;:::-;1208:3;1201:37;1126:118;;:::o;1250:222::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:71;1462:1;1451:9;1447:17;1438:6;1394:71;:::i;:::-;1250:222;;;;:::o;1478:126::-;1515:7;1555:42;1548:5;1544:54;1533:65;;1478:126;;;:::o;1610:96::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1610:96;;;:::o;1712:122::-;1785:24;1803:5;1785:24;:::i;:::-;1778:5;1775:35;1765:63;;1824:1;1821;1814:12;1765:63;1712:122;:::o;1840:139::-;1886:5;1924:6;1911:20;1902:29;;1940:33;1967:5;1940:33;:::i;:::-;1840:139;;;;:::o;1985:329::-;2044:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:119;;;2099:79;;:::i;:::-;2061:119;2219:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2190:117;1985:329;;;;:::o;2320:472::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2697:2;2723:52;2767:7;2758:6;2747:9;2743:22;2723:52;:::i;:::-;2713:62;;2668:117;2320:472;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:222::-;3015:4;3053:2;3042:9;3038:18;3030:26;;3066:71;3134:1;3123:9;3119:17;3110:6;3066:71;:::i;:::-;2922:222;;;;:::o;3150:180::-;3198:77;3195:1;3188:88;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15;3336:191;3376:3;3395:20;3413:1;3395:20;:::i;:::-;3390:25;;3429:20;3447:1;3429:20;:::i;:::-;3424:25;;3472:1;3469;3465:9;3458:16;;3493:3;3490:1;3487:10;3484:36;;;3500:18;;:::i;:::-;3484:36;3336:191;;;;:::o;3533:122::-;3606:24;3624:5;3606:24;:::i;:::-;3599:5;3596:35;3586:63;;3645:1;3642;3635:12;3586:63;3533:122;:::o;3661:143::-;3718:5;3749:6;3743:13;3734:22;;3765:33;3792:5;3765:33;:::i;:::-;3661:143;;;;:::o;3810:351::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:64;4136:7;4127:6;4116:9;4112:22;4080:64;:::i;:::-;4070:74;;4026:128;3810:351;;;;:::o;4167:194::-;4207:4;4227:20;4245:1;4227:20;:::i;:::-;4222:25;;4261:20;4279:1;4261:20;:::i;:::-;4256:25;;4305:1;4302;4298:9;4290:17;;4329:1;4323:4;4320:11;4317:37;;;4334:18;;:::i;:::-;4317:37;4167:194;;;;:::o;4367:410::-;4407:7;4430:20;4448:1;4430:20;:::i;:::-;4425:25;;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4519:1;4516;4512:9;4541:30;4559:11;4541:30;:::i;:::-;4530:41;;4720:1;4711:7;4707:15;4704:1;4701:22;4681:1;4674:9;4654:83;4631:139;;4750:18;;:::i;:::-;4631:139;4415:362;4367:410;;;;:::o;4783:180::-;4831:77;4828:1;4821:88;4928:4;4925:1;4918:15;4952:4;4949:1;4942:15;4969:185;5009:1;5026:20;5044:1;5026:20;:::i;:::-;5021:25;;5060:20;5078:1;5060:20;:::i;:::-;5055:25;;5099:1;5089:35;;5104:18;;:::i;:::-;5089:35;5146:1;5143;5139:9;5134:14;;4969:185;;;;:::o;5160:332::-;5281:4;5319:2;5308:9;5304:18;5296:26;;5332:71;5400:1;5389:9;5385:17;5376:6;5332:71;:::i;:::-;5413:72;5481:2;5470:9;5466:18;5457:6;5413:72;:::i;:::-;5160:332;;;;;:::o;5498:147::-;5599:11;5636:3;5621:18;;5498:147;;;;:::o;5651:114::-;;:::o;5771:398::-;5930:3;5951:83;6032:1;6027:3;5951:83;:::i;:::-;5944:90;;6043:93;6132:3;6043:93;:::i;:::-;6161:1;6156:3;6152:11;6145:18;;5771:398;;;:::o;6175:379::-;6359:3;6381:147;6524:3;6381:147;:::i;:::-;6374:154;;6545:3;6538:10;;6175:379;;;:::o;6560:90::-;6594:7;6637:5;6630:13;6623:21;6612:32;;6560:90;;;:::o;6656:116::-;6726:21;6741:5;6726:21;:::i;:::-;6719:5;6716:32;6706:60;;6762:1;6759;6752:12;6706:60;6656:116;:::o;6778:137::-;6832:5;6863:6;6857:13;6848:22;;6879:30;6903:5;6879:30;:::i;:::-;6778:137;;;;:::o;6921:345::-;6988:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:119;;;7043:79;;:::i;:::-;7005:119;7163:1;7188:61;7241:7;7232:6;7221:9;7217:22;7188:61;:::i;:::-;7178:71;;7134:125;6921:345;;;;:::o;7272:98::-;7323:6;7357:5;7351:12;7341:22;;7272:98;;;:::o;7376:246::-;7457:1;7467:113;7481:6;7478:1;7475:13;7467:113;;;7566:1;7561:3;7557:11;7551:18;7547:1;7542:3;7538:11;7531:39;7503:2;7500:1;7496:10;7491:15;;7467:113;;;7614:1;7605:6;7600:3;7596:16;7589:27;7438:184;7376:246;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:271::-;8150:3;8172:93;8261:3;8252:6;8172:93;:::i;:::-;8165:100;;8282:3;8275:10;;8020:271;;;;:::o"},"methodIdentifiers":{"duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these assets to the wallet owner, also referred to as \\\"beneficiary\\\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the vesting duration of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/finance/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/AraraCoin.sol":{"AraraCoin":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"preservationProjectsVestingContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"bool","name":"exempted","type":"bool"}],"name":"TaxExemptionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTaxPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"TaxPercentageUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"TaxWalletChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"allowedAddresses","type":"address[]"}],"name":"addCanTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"addExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"allowedAddresses","type":"address[]"}],"name":"removeCanTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"removeExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"setTaxPercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"taxWalletAddress","type":"address"}],"name":"setTaxWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1051":{"entryPoint":null,"id":1051,"parameterSlots":2,"returnSlots":0},"@_1641":{"entryPoint":null,"id":1641,"parameterSlots":1,"returnSlots":0},"@_3476":{"entryPoint":null,"id":3476,"parameterSlots":2,"returnSlots":0},"@_7562":{"entryPoint":null,"id":7562,"parameterSlots":2,"returnSlots":0},"@_add_6683":{"entryPoint":2768,"id":6683,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_3523":{"entryPoint":1726,"id":3523,"parameterSlots":0,"returnSlots":1},"@_contains_6786":{"entryPoint":3131,"id":6786,"parameterSlots":2,"returnSlots":1},"@_getTax_8041":{"entryPoint":3222,"id":8041,"parameterSlots":3,"returnSlots":1},"@_grantRole_256":{"entryPoint":1819,"id":256,"parameterSlots":2,"returnSlots":1},"@_mint_1354":{"entryPoint":2135,"id":1354,"parameterSlots":2,"returnSlots":0},"@_msgSender_2363":{"entryPoint":2760,"id":2363,"parameterSlots":0,"returnSlots":1},"@_transfer_1244":{"entryPoint":2276,"id":1244,"parameterSlots":3,"returnSlots":0},"@_update_1321":{"entryPoint":3333,"id":1321,"parameterSlots":3,"returnSlots":0},"@_update_8010":{"entryPoint":2890,"id":8010,"parameterSlots":3,"returnSlots":0},"@add_6983":{"entryPoint":2079,"id":6983,"parameterSlots":2,"returnSlots":1},"@contains_7037":{"entryPoint":3166,"id":7037,"parameterSlots":2,"returnSlots":1},"@getStringSlot_2753":{"entryPoint":2643,"id":2753,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":2653,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_2607":{"entryPoint":1638,"id":2607,"parameterSlots":2,"returnSlots":1},"@toShortString_2509":{"entryPoint":2534,"id":2509,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":3999,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5170,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack":{"entryPoint":5725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5187,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5916,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5221,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5977,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":5533,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4228,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5522,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4070,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5857,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5104,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4982,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5798,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4549,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3930,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5160,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3898,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4364,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4510,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":5572,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":4384,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4704,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5360,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4249,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4175,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4674,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":4374,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4642,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4935,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5057,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4128,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4081,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4424,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":5549,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3893,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4265,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4629,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4482,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f":{"entryPoint":5684,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4278,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4434,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3950,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4477,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:13191:30","nodeType":"YulBlock","src":"0:13191:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"379:81:30","nodeType":"YulBlock","src":"379:81:30","statements":[{"nativeSrc":"389:65:30","nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nativeSrc":"404:5:30","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nativeSrc":"411:42:30","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:30","nodeType":"YulIdentifier","src":"400:3:30"},"nativeSrc":"400:54:30","nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:30","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:30","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:30","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nativeSrc":"511:51:30","nodeType":"YulBlock","src":"511:51:30","statements":[{"nativeSrc":"521:35:30","nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nativeSrc":"550:5:30","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:30","nodeType":"YulIdentifier","src":"532:17:30"},"nativeSrc":"532:24:30","nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:30","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:30","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:30","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nativeSrc":"611:79:30","nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nativeSrc":"668:16:30","nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:30","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:30","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:30","nodeType":"YulIdentifier","src":"670:6:30"},"nativeSrc":"670:12:30","nodeType":"YulFunctionCall","src":"670:12:30"},"nativeSrc":"670:12:30","nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:30","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nativeSrc":"659:5:30","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:30","nodeType":"YulIdentifier","src":"641:17:30"},"nativeSrc":"641:24:30","nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nativeSrc":"631:2:30","nodeType":"YulIdentifier","src":"631:2:30"},"nativeSrc":"631:35:30","nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nativeSrc":"624:6:30","nodeType":"YulIdentifier","src":"624:6:30"},"nativeSrc":"624:43:30","nodeType":"YulFunctionCall","src":"624:43:30"},"nativeSrc":"621:63:30","nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:30","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nativeSrc":"759:80:30","nodeType":"YulBlock","src":"759:80:30","statements":[{"nativeSrc":"769:22:30","nodeType":"YulAssignment","src":"769:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:30","nodeType":"YulIdentifier","src":"784:6:30"}],"functionName":{"name":"mload","nativeSrc":"778:5:30","nodeType":"YulIdentifier","src":"778:5:30"},"nativeSrc":"778:13:30","nodeType":"YulFunctionCall","src":"778:13:30"},"variableNames":[{"name":"value","nativeSrc":"769:5:30","nodeType":"YulIdentifier","src":"769:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:30","nodeType":"YulIdentifier","src":"827:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:30","nodeType":"YulIdentifier","src":"800:26:30"},"nativeSrc":"800:33:30","nodeType":"YulFunctionCall","src":"800:33:30"},"nativeSrc":"800:33:30","nodeType":"YulExpressionStatement","src":"800:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:30","nodeType":"YulTypedName","src":"737:6:30","type":""},{"name":"end","nativeSrc":"745:3:30","nodeType":"YulTypedName","src":"745:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:30","nodeType":"YulTypedName","src":"753:5:30","type":""}],"src":"696:143:30"},{"body":{"nativeSrc":"939:413:30","nodeType":"YulBlock","src":"939:413:30","statements":[{"body":{"nativeSrc":"985:83:30","nodeType":"YulBlock","src":"985:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:30","nodeType":"YulIdentifier","src":"987:77:30"},"nativeSrc":"987:79:30","nodeType":"YulFunctionCall","src":"987:79:30"},"nativeSrc":"987:79:30","nodeType":"YulExpressionStatement","src":"987:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:30","nodeType":"YulIdentifier","src":"960:7:30"},{"name":"headStart","nativeSrc":"969:9:30","nodeType":"YulIdentifier","src":"969:9:30"}],"functionName":{"name":"sub","nativeSrc":"956:3:30","nodeType":"YulIdentifier","src":"956:3:30"},"nativeSrc":"956:23:30","nodeType":"YulFunctionCall","src":"956:23:30"},{"kind":"number","nativeSrc":"981:2:30","nodeType":"YulLiteral","src":"981:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:30","nodeType":"YulIdentifier","src":"952:3:30"},"nativeSrc":"952:32:30","nodeType":"YulFunctionCall","src":"952:32:30"},"nativeSrc":"949:119:30","nodeType":"YulIf","src":"949:119:30"},{"nativeSrc":"1078:128:30","nodeType":"YulBlock","src":"1078:128:30","statements":[{"nativeSrc":"1093:15:30","nodeType":"YulVariableDeclaration","src":"1093:15:30","value":{"kind":"number","nativeSrc":"1107:1:30","nodeType":"YulLiteral","src":"1107:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:30","nodeType":"YulTypedName","src":"1097:6:30","type":""}]},{"nativeSrc":"1122:74:30","nodeType":"YulAssignment","src":"1122:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:30","nodeType":"YulIdentifier","src":"1168:9:30"},{"name":"offset","nativeSrc":"1179:6:30","nodeType":"YulIdentifier","src":"1179:6:30"}],"functionName":{"name":"add","nativeSrc":"1164:3:30","nodeType":"YulIdentifier","src":"1164:3:30"},"nativeSrc":"1164:22:30","nodeType":"YulFunctionCall","src":"1164:22:30"},{"name":"dataEnd","nativeSrc":"1188:7:30","nodeType":"YulIdentifier","src":"1188:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:30","nodeType":"YulIdentifier","src":"1132:31:30"},"nativeSrc":"1132:64:30","nodeType":"YulFunctionCall","src":"1132:64:30"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:30","nodeType":"YulIdentifier","src":"1122:6:30"}]}]},{"nativeSrc":"1216:129:30","nodeType":"YulBlock","src":"1216:129:30","statements":[{"nativeSrc":"1231:16:30","nodeType":"YulVariableDeclaration","src":"1231:16:30","value":{"kind":"number","nativeSrc":"1245:2:30","nodeType":"YulLiteral","src":"1245:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:30","nodeType":"YulTypedName","src":"1235:6:30","type":""}]},{"nativeSrc":"1261:74:30","nodeType":"YulAssignment","src":"1261:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:30","nodeType":"YulIdentifier","src":"1307:9:30"},{"name":"offset","nativeSrc":"1318:6:30","nodeType":"YulIdentifier","src":"1318:6:30"}],"functionName":{"name":"add","nativeSrc":"1303:3:30","nodeType":"YulIdentifier","src":"1303:3:30"},"nativeSrc":"1303:22:30","nodeType":"YulFunctionCall","src":"1303:22:30"},{"name":"dataEnd","nativeSrc":"1327:7:30","nodeType":"YulIdentifier","src":"1327:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:30","nodeType":"YulIdentifier","src":"1271:31:30"},"nativeSrc":"1271:64:30","nodeType":"YulFunctionCall","src":"1271:64:30"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:30","nodeType":"YulIdentifier","src":"1261:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:30","nodeType":"YulTypedName","src":"901:9:30","type":""},{"name":"dataEnd","nativeSrc":"912:7:30","nodeType":"YulTypedName","src":"912:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:30","nodeType":"YulTypedName","src":"924:6:30","type":""},{"name":"value1","nativeSrc":"932:6:30","nodeType":"YulTypedName","src":"932:6:30","type":""}],"src":"845:507:30"},{"body":{"nativeSrc":"1417:40:30","nodeType":"YulBlock","src":"1417:40:30","statements":[{"nativeSrc":"1428:22:30","nodeType":"YulAssignment","src":"1428:22:30","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:30","nodeType":"YulIdentifier","src":"1444:5:30"}],"functionName":{"name":"mload","nativeSrc":"1438:5:30","nodeType":"YulIdentifier","src":"1438:5:30"},"nativeSrc":"1438:12:30","nodeType":"YulFunctionCall","src":"1438:12:30"},"variableNames":[{"name":"length","nativeSrc":"1428:6:30","nodeType":"YulIdentifier","src":"1428:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:30","nodeType":"YulTypedName","src":"1400:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:30","nodeType":"YulTypedName","src":"1410:6:30","type":""}],"src":"1358:99:30"},{"body":{"nativeSrc":"1491:152:30","nodeType":"YulBlock","src":"1491:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:30","nodeType":"YulLiteral","src":"1508:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:30","nodeType":"YulLiteral","src":"1511:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:30","nodeType":"YulIdentifier","src":"1501:6:30"},"nativeSrc":"1501:88:30","nodeType":"YulFunctionCall","src":"1501:88:30"},"nativeSrc":"1501:88:30","nodeType":"YulExpressionStatement","src":"1501:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:30","nodeType":"YulLiteral","src":"1605:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:30","nodeType":"YulLiteral","src":"1608:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:30","nodeType":"YulIdentifier","src":"1598:6:30"},"nativeSrc":"1598:15:30","nodeType":"YulFunctionCall","src":"1598:15:30"},"nativeSrc":"1598:15:30","nodeType":"YulExpressionStatement","src":"1598:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:30","nodeType":"YulLiteral","src":"1629:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:30","nodeType":"YulLiteral","src":"1632:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:30","nodeType":"YulIdentifier","src":"1622:6:30"},"nativeSrc":"1622:15:30","nodeType":"YulFunctionCall","src":"1622:15:30"},"nativeSrc":"1622:15:30","nodeType":"YulExpressionStatement","src":"1622:15:30"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:30","nodeType":"YulFunctionDefinition","src":"1463:180:30"},{"body":{"nativeSrc":"1677:152:30","nodeType":"YulBlock","src":"1677:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:30","nodeType":"YulLiteral","src":"1694:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:30","nodeType":"YulLiteral","src":"1697:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:30","nodeType":"YulIdentifier","src":"1687:6:30"},"nativeSrc":"1687:88:30","nodeType":"YulFunctionCall","src":"1687:88:30"},"nativeSrc":"1687:88:30","nodeType":"YulExpressionStatement","src":"1687:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:30","nodeType":"YulLiteral","src":"1791:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:30","nodeType":"YulLiteral","src":"1794:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:30","nodeType":"YulIdentifier","src":"1784:6:30"},"nativeSrc":"1784:15:30","nodeType":"YulFunctionCall","src":"1784:15:30"},"nativeSrc":"1784:15:30","nodeType":"YulExpressionStatement","src":"1784:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:30","nodeType":"YulLiteral","src":"1815:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:30","nodeType":"YulLiteral","src":"1818:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:30","nodeType":"YulIdentifier","src":"1808:6:30"},"nativeSrc":"1808:15:30","nodeType":"YulFunctionCall","src":"1808:15:30"},"nativeSrc":"1808:15:30","nodeType":"YulExpressionStatement","src":"1808:15:30"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:30","nodeType":"YulFunctionDefinition","src":"1649:180:30"},{"body":{"nativeSrc":"1886:269:30","nodeType":"YulBlock","src":"1886:269:30","statements":[{"nativeSrc":"1896:22:30","nodeType":"YulAssignment","src":"1896:22:30","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:30","nodeType":"YulIdentifier","src":"1910:4:30"},{"kind":"number","nativeSrc":"1916:1:30","nodeType":"YulLiteral","src":"1916:1:30","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:30","nodeType":"YulIdentifier","src":"1906:3:30"},"nativeSrc":"1906:12:30","nodeType":"YulFunctionCall","src":"1906:12:30"},"variableNames":[{"name":"length","nativeSrc":"1896:6:30","nodeType":"YulIdentifier","src":"1896:6:30"}]},{"nativeSrc":"1927:38:30","nodeType":"YulVariableDeclaration","src":"1927:38:30","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:30","nodeType":"YulIdentifier","src":"1957:4:30"},{"kind":"number","nativeSrc":"1963:1:30","nodeType":"YulLiteral","src":"1963:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:30","nodeType":"YulIdentifier","src":"1953:3:30"},"nativeSrc":"1953:12:30","nodeType":"YulFunctionCall","src":"1953:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:30","nodeType":"YulTypedName","src":"1931:18:30","type":""}]},{"body":{"nativeSrc":"2004:51:30","nodeType":"YulBlock","src":"2004:51:30","statements":[{"nativeSrc":"2018:27:30","nodeType":"YulAssignment","src":"2018:27:30","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:30","nodeType":"YulIdentifier","src":"2032:6:30"},{"kind":"number","nativeSrc":"2040:4:30","nodeType":"YulLiteral","src":"2040:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:30","nodeType":"YulIdentifier","src":"2028:3:30"},"nativeSrc":"2028:17:30","nodeType":"YulFunctionCall","src":"2028:17:30"},"variableNames":[{"name":"length","nativeSrc":"2018:6:30","nodeType":"YulIdentifier","src":"2018:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:30","nodeType":"YulIdentifier","src":"1984:18:30"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:30","nodeType":"YulIdentifier","src":"1977:6:30"},"nativeSrc":"1977:26:30","nodeType":"YulFunctionCall","src":"1977:26:30"},"nativeSrc":"1974:81:30","nodeType":"YulIf","src":"1974:81:30"},{"body":{"nativeSrc":"2107:42:30","nodeType":"YulBlock","src":"2107:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:30","nodeType":"YulIdentifier","src":"2121:16:30"},"nativeSrc":"2121:18:30","nodeType":"YulFunctionCall","src":"2121:18:30"},"nativeSrc":"2121:18:30","nodeType":"YulExpressionStatement","src":"2121:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:30","nodeType":"YulIdentifier","src":"2071:18:30"},{"arguments":[{"name":"length","nativeSrc":"2094:6:30","nodeType":"YulIdentifier","src":"2094:6:30"},{"kind":"number","nativeSrc":"2102:2:30","nodeType":"YulLiteral","src":"2102:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:30","nodeType":"YulIdentifier","src":"2091:2:30"},"nativeSrc":"2091:14:30","nodeType":"YulFunctionCall","src":"2091:14:30"}],"functionName":{"name":"eq","nativeSrc":"2068:2:30","nodeType":"YulIdentifier","src":"2068:2:30"},"nativeSrc":"2068:38:30","nodeType":"YulFunctionCall","src":"2068:38:30"},"nativeSrc":"2065:84:30","nodeType":"YulIf","src":"2065:84:30"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:30","nodeType":"YulTypedName","src":"1870:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:30","nodeType":"YulTypedName","src":"1879:6:30","type":""}],"src":"1835:320:30"},{"body":{"nativeSrc":"2215:87:30","nodeType":"YulBlock","src":"2215:87:30","statements":[{"nativeSrc":"2225:11:30","nodeType":"YulAssignment","src":"2225:11:30","value":{"name":"ptr","nativeSrc":"2233:3:30","nodeType":"YulIdentifier","src":"2233:3:30"},"variableNames":[{"name":"data","nativeSrc":"2225:4:30","nodeType":"YulIdentifier","src":"2225:4:30"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:30","nodeType":"YulLiteral","src":"2253:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:30","nodeType":"YulIdentifier","src":"2256:3:30"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:30","nodeType":"YulIdentifier","src":"2246:6:30"},"nativeSrc":"2246:14:30","nodeType":"YulFunctionCall","src":"2246:14:30"},"nativeSrc":"2246:14:30","nodeType":"YulExpressionStatement","src":"2246:14:30"},{"nativeSrc":"2269:26:30","nodeType":"YulAssignment","src":"2269:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:30","nodeType":"YulLiteral","src":"2287:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:30","nodeType":"YulLiteral","src":"2290:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:30","nodeType":"YulIdentifier","src":"2277:9:30"},"nativeSrc":"2277:18:30","nodeType":"YulFunctionCall","src":"2277:18:30"},"variableNames":[{"name":"data","nativeSrc":"2269:4:30","nodeType":"YulIdentifier","src":"2269:4:30"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:30","nodeType":"YulTypedName","src":"2202:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:30","nodeType":"YulTypedName","src":"2210:4:30","type":""}],"src":"2161:141:30"},{"body":{"nativeSrc":"2352:49:30","nodeType":"YulBlock","src":"2352:49:30","statements":[{"nativeSrc":"2362:33:30","nodeType":"YulAssignment","src":"2362:33:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:30","nodeType":"YulIdentifier","src":"2380:5:30"},{"kind":"number","nativeSrc":"2387:2:30","nodeType":"YulLiteral","src":"2387:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:30","nodeType":"YulIdentifier","src":"2376:3:30"},"nativeSrc":"2376:14:30","nodeType":"YulFunctionCall","src":"2376:14:30"},{"kind":"number","nativeSrc":"2392:2:30","nodeType":"YulLiteral","src":"2392:2:30","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:30","nodeType":"YulIdentifier","src":"2372:3:30"},"nativeSrc":"2372:23:30","nodeType":"YulFunctionCall","src":"2372:23:30"},"variableNames":[{"name":"result","nativeSrc":"2362:6:30","nodeType":"YulIdentifier","src":"2362:6:30"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:30","nodeType":"YulTypedName","src":"2335:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:30","nodeType":"YulTypedName","src":"2345:6:30","type":""}],"src":"2308:93:30"},{"body":{"nativeSrc":"2460:54:30","nodeType":"YulBlock","src":"2460:54:30","statements":[{"nativeSrc":"2470:37:30","nodeType":"YulAssignment","src":"2470:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:30","nodeType":"YulIdentifier","src":"2495:4:30"},{"name":"value","nativeSrc":"2501:5:30","nodeType":"YulIdentifier","src":"2501:5:30"}],"functionName":{"name":"shl","nativeSrc":"2491:3:30","nodeType":"YulIdentifier","src":"2491:3:30"},"nativeSrc":"2491:16:30","nodeType":"YulFunctionCall","src":"2491:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:30","nodeType":"YulIdentifier","src":"2470:8:30"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:30","nodeType":"YulTypedName","src":"2435:4:30","type":""},{"name":"value","nativeSrc":"2441:5:30","nodeType":"YulTypedName","src":"2441:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:30","nodeType":"YulTypedName","src":"2451:8:30","type":""}],"src":"2407:107:30"},{"body":{"nativeSrc":"2596:317:30","nodeType":"YulBlock","src":"2596:317:30","statements":[{"nativeSrc":"2606:35:30","nodeType":"YulVariableDeclaration","src":"2606:35:30","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:30","nodeType":"YulIdentifier","src":"2627:10:30"},{"kind":"number","nativeSrc":"2639:1:30","nodeType":"YulLiteral","src":"2639:1:30","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:30","nodeType":"YulIdentifier","src":"2623:3:30"},"nativeSrc":"2623:18:30","nodeType":"YulFunctionCall","src":"2623:18:30"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:30","nodeType":"YulTypedName","src":"2610:9:30","type":""}]},{"nativeSrc":"2650:109:30","nodeType":"YulVariableDeclaration","src":"2650:109:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:30","nodeType":"YulIdentifier","src":"2681:9:30"},{"kind":"number","nativeSrc":"2692:66:30","nodeType":"YulLiteral","src":"2692:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:30","nodeType":"YulIdentifier","src":"2662:18:30"},"nativeSrc":"2662:97:30","nodeType":"YulFunctionCall","src":"2662:97:30"},"variables":[{"name":"mask","nativeSrc":"2654:4:30","nodeType":"YulTypedName","src":"2654:4:30","type":""}]},{"nativeSrc":"2768:51:30","nodeType":"YulAssignment","src":"2768:51:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:30","nodeType":"YulIdentifier","src":"2799:9:30"},{"name":"toInsert","nativeSrc":"2810:8:30","nodeType":"YulIdentifier","src":"2810:8:30"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:30","nodeType":"YulIdentifier","src":"2780:18:30"},"nativeSrc":"2780:39:30","nodeType":"YulFunctionCall","src":"2780:39:30"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:30","nodeType":"YulIdentifier","src":"2768:8:30"}]},{"nativeSrc":"2828:30:30","nodeType":"YulAssignment","src":"2828:30:30","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:30","nodeType":"YulIdentifier","src":"2841:5:30"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:30","nodeType":"YulIdentifier","src":"2852:4:30"}],"functionName":{"name":"not","nativeSrc":"2848:3:30","nodeType":"YulIdentifier","src":"2848:3:30"},"nativeSrc":"2848:9:30","nodeType":"YulFunctionCall","src":"2848:9:30"}],"functionName":{"name":"and","nativeSrc":"2837:3:30","nodeType":"YulIdentifier","src":"2837:3:30"},"nativeSrc":"2837:21:30","nodeType":"YulFunctionCall","src":"2837:21:30"},"variableNames":[{"name":"value","nativeSrc":"2828:5:30","nodeType":"YulIdentifier","src":"2828:5:30"}]},{"nativeSrc":"2867:40:30","nodeType":"YulAssignment","src":"2867:40:30","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:30","nodeType":"YulIdentifier","src":"2880:5:30"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:30","nodeType":"YulIdentifier","src":"2891:8:30"},{"name":"mask","nativeSrc":"2901:4:30","nodeType":"YulIdentifier","src":"2901:4:30"}],"functionName":{"name":"and","nativeSrc":"2887:3:30","nodeType":"YulIdentifier","src":"2887:3:30"},"nativeSrc":"2887:19:30","nodeType":"YulFunctionCall","src":"2887:19:30"}],"functionName":{"name":"or","nativeSrc":"2877:2:30","nodeType":"YulIdentifier","src":"2877:2:30"},"nativeSrc":"2877:30:30","nodeType":"YulFunctionCall","src":"2877:30:30"},"variableNames":[{"name":"result","nativeSrc":"2867:6:30","nodeType":"YulIdentifier","src":"2867:6:30"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:30","nodeType":"YulTypedName","src":"2557:5:30","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:30","nodeType":"YulTypedName","src":"2564:10:30","type":""},{"name":"toInsert","nativeSrc":"2576:8:30","nodeType":"YulTypedName","src":"2576:8:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:30","nodeType":"YulTypedName","src":"2589:6:30","type":""}],"src":"2520:393:30"},{"body":{"nativeSrc":"2964:32:30","nodeType":"YulBlock","src":"2964:32:30","statements":[{"nativeSrc":"2974:16:30","nodeType":"YulAssignment","src":"2974:16:30","value":{"name":"value","nativeSrc":"2985:5:30","nodeType":"YulIdentifier","src":"2985:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:30","nodeType":"YulIdentifier","src":"2974:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:30","nodeType":"YulTypedName","src":"2946:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:30","nodeType":"YulTypedName","src":"2956:7:30","type":""}],"src":"2919:77:30"},{"body":{"nativeSrc":"3034:28:30","nodeType":"YulBlock","src":"3034:28:30","statements":[{"nativeSrc":"3044:12:30","nodeType":"YulAssignment","src":"3044:12:30","value":{"name":"value","nativeSrc":"3051:5:30","nodeType":"YulIdentifier","src":"3051:5:30"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:30","nodeType":"YulIdentifier","src":"3044:3:30"}]}]},"name":"identity","nativeSrc":"3002:60:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:30","nodeType":"YulTypedName","src":"3020:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:30","nodeType":"YulTypedName","src":"3030:3:30","type":""}],"src":"3002:60:30"},{"body":{"nativeSrc":"3128:82:30","nodeType":"YulBlock","src":"3128:82:30","statements":[{"nativeSrc":"3138:66:30","nodeType":"YulAssignment","src":"3138:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:30","nodeType":"YulIdentifier","src":"3196:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:30","nodeType":"YulIdentifier","src":"3178:17:30"},"nativeSrc":"3178:24:30","nodeType":"YulFunctionCall","src":"3178:24:30"}],"functionName":{"name":"identity","nativeSrc":"3169:8:30","nodeType":"YulIdentifier","src":"3169:8:30"},"nativeSrc":"3169:34:30","nodeType":"YulFunctionCall","src":"3169:34:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:30","nodeType":"YulIdentifier","src":"3151:17:30"},"nativeSrc":"3151:53:30","nodeType":"YulFunctionCall","src":"3151:53:30"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:30","nodeType":"YulIdentifier","src":"3138:9:30"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:30","nodeType":"YulTypedName","src":"3108:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:30","nodeType":"YulTypedName","src":"3118:9:30","type":""}],"src":"3068:142:30"},{"body":{"nativeSrc":"3263:28:30","nodeType":"YulBlock","src":"3263:28:30","statements":[{"nativeSrc":"3273:12:30","nodeType":"YulAssignment","src":"3273:12:30","value":{"name":"value","nativeSrc":"3280:5:30","nodeType":"YulIdentifier","src":"3280:5:30"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:30","nodeType":"YulIdentifier","src":"3273:3:30"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:30","nodeType":"YulTypedName","src":"3249:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:30","nodeType":"YulTypedName","src":"3259:3:30","type":""}],"src":"3216:75:30"},{"body":{"nativeSrc":"3373:193:30","nodeType":"YulBlock","src":"3373:193:30","statements":[{"nativeSrc":"3383:63:30","nodeType":"YulVariableDeclaration","src":"3383:63:30","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:30","nodeType":"YulIdentifier","src":"3438:7:30"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:30","nodeType":"YulIdentifier","src":"3407:30:30"},"nativeSrc":"3407:39:30","nodeType":"YulFunctionCall","src":"3407:39:30"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:30","nodeType":"YulTypedName","src":"3387:16:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:30","nodeType":"YulIdentifier","src":"3462:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:30","nodeType":"YulIdentifier","src":"3502:4:30"}],"functionName":{"name":"sload","nativeSrc":"3496:5:30","nodeType":"YulIdentifier","src":"3496:5:30"},"nativeSrc":"3496:11:30","nodeType":"YulFunctionCall","src":"3496:11:30"},{"name":"offset","nativeSrc":"3509:6:30","nodeType":"YulIdentifier","src":"3509:6:30"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:30","nodeType":"YulIdentifier","src":"3541:16:30"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:30","nodeType":"YulIdentifier","src":"3517:23:30"},"nativeSrc":"3517:41:30","nodeType":"YulFunctionCall","src":"3517:41:30"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:30","nodeType":"YulIdentifier","src":"3468:27:30"},"nativeSrc":"3468:91:30","nodeType":"YulFunctionCall","src":"3468:91:30"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:30","nodeType":"YulIdentifier","src":"3455:6:30"},"nativeSrc":"3455:105:30","nodeType":"YulFunctionCall","src":"3455:105:30"},"nativeSrc":"3455:105:30","nodeType":"YulExpressionStatement","src":"3455:105:30"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:30","nodeType":"YulTypedName","src":"3350:4:30","type":""},{"name":"offset","nativeSrc":"3356:6:30","nodeType":"YulTypedName","src":"3356:6:30","type":""},{"name":"value_0","nativeSrc":"3364:7:30","nodeType":"YulTypedName","src":"3364:7:30","type":""}],"src":"3297:269:30"},{"body":{"nativeSrc":"3621:24:30","nodeType":"YulBlock","src":"3621:24:30","statements":[{"nativeSrc":"3631:8:30","nodeType":"YulAssignment","src":"3631:8:30","value":{"kind":"number","nativeSrc":"3638:1:30","nodeType":"YulLiteral","src":"3638:1:30","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:30","nodeType":"YulIdentifier","src":"3631:3:30"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:30","nodeType":"YulTypedName","src":"3617:3:30","type":""}],"src":"3572:73:30"},{"body":{"nativeSrc":"3704:136:30","nodeType":"YulBlock","src":"3704:136:30","statements":[{"nativeSrc":"3714:46:30","nodeType":"YulVariableDeclaration","src":"3714:46:30","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:30","nodeType":"YulIdentifier","src":"3728:30:30"},"nativeSrc":"3728:32:30","nodeType":"YulFunctionCall","src":"3728:32:30"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:30","nodeType":"YulTypedName","src":"3718:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:30","nodeType":"YulIdentifier","src":"3813:4:30"},{"name":"offset","nativeSrc":"3819:6:30","nodeType":"YulIdentifier","src":"3819:6:30"},{"name":"zero_0","nativeSrc":"3827:6:30","nodeType":"YulIdentifier","src":"3827:6:30"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:30","nodeType":"YulIdentifier","src":"3769:43:30"},"nativeSrc":"3769:65:30","nodeType":"YulFunctionCall","src":"3769:65:30"},"nativeSrc":"3769:65:30","nodeType":"YulExpressionStatement","src":"3769:65:30"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:30","nodeType":"YulTypedName","src":"3690:4:30","type":""},{"name":"offset","nativeSrc":"3696:6:30","nodeType":"YulTypedName","src":"3696:6:30","type":""}],"src":"3651:189:30"},{"body":{"nativeSrc":"3896:136:30","nodeType":"YulBlock","src":"3896:136:30","statements":[{"body":{"nativeSrc":"3963:63:30","nodeType":"YulBlock","src":"3963:63:30","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:30","nodeType":"YulIdentifier","src":"4007:5:30"},{"kind":"number","nativeSrc":"4014:1:30","nodeType":"YulLiteral","src":"4014:1:30","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:30","nodeType":"YulIdentifier","src":"3977:29:30"},"nativeSrc":"3977:39:30","nodeType":"YulFunctionCall","src":"3977:39:30"},"nativeSrc":"3977:39:30","nodeType":"YulExpressionStatement","src":"3977:39:30"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:30","nodeType":"YulIdentifier","src":"3916:5:30"},{"name":"end","nativeSrc":"3923:3:30","nodeType":"YulIdentifier","src":"3923:3:30"}],"functionName":{"name":"lt","nativeSrc":"3913:2:30","nodeType":"YulIdentifier","src":"3913:2:30"},"nativeSrc":"3913:14:30","nodeType":"YulFunctionCall","src":"3913:14:30"},"nativeSrc":"3906:120:30","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:30","nodeType":"YulBlock","src":"3928:26:30","statements":[{"nativeSrc":"3930:22:30","nodeType":"YulAssignment","src":"3930:22:30","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:30","nodeType":"YulIdentifier","src":"3943:5:30"},{"kind":"number","nativeSrc":"3950:1:30","nodeType":"YulLiteral","src":"3950:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:30","nodeType":"YulIdentifier","src":"3939:3:30"},"nativeSrc":"3939:13:30","nodeType":"YulFunctionCall","src":"3939:13:30"},"variableNames":[{"name":"start","nativeSrc":"3930:5:30","nodeType":"YulIdentifier","src":"3930:5:30"}]}]},"pre":{"nativeSrc":"3910:2:30","nodeType":"YulBlock","src":"3910:2:30","statements":[]},"src":"3906:120:30"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:30","nodeType":"YulTypedName","src":"3884:5:30","type":""},{"name":"end","nativeSrc":"3891:3:30","nodeType":"YulTypedName","src":"3891:3:30","type":""}],"src":"3846:186:30"},{"body":{"nativeSrc":"4117:464:30","nodeType":"YulBlock","src":"4117:464:30","statements":[{"body":{"nativeSrc":"4143:431:30","nodeType":"YulBlock","src":"4143:431:30","statements":[{"nativeSrc":"4157:54:30","nodeType":"YulVariableDeclaration","src":"4157:54:30","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:30","nodeType":"YulIdentifier","src":"4205:5:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:30","nodeType":"YulIdentifier","src":"4173:31:30"},"nativeSrc":"4173:38:30","nodeType":"YulFunctionCall","src":"4173:38:30"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:30","nodeType":"YulTypedName","src":"4161:8:30","type":""}]},{"nativeSrc":"4224:63:30","nodeType":"YulVariableDeclaration","src":"4224:63:30","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:30","nodeType":"YulIdentifier","src":"4247:8:30"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:30","nodeType":"YulIdentifier","src":"4275:10:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:30","nodeType":"YulIdentifier","src":"4257:17:30"},"nativeSrc":"4257:29:30","nodeType":"YulFunctionCall","src":"4257:29:30"}],"functionName":{"name":"add","nativeSrc":"4243:3:30","nodeType":"YulIdentifier","src":"4243:3:30"},"nativeSrc":"4243:44:30","nodeType":"YulFunctionCall","src":"4243:44:30"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:30","nodeType":"YulTypedName","src":"4228:11:30","type":""}]},{"body":{"nativeSrc":"4444:27:30","nodeType":"YulBlock","src":"4444:27:30","statements":[{"nativeSrc":"4446:23:30","nodeType":"YulAssignment","src":"4446:23:30","value":{"name":"dataArea","nativeSrc":"4461:8:30","nodeType":"YulIdentifier","src":"4461:8:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:30","nodeType":"YulIdentifier","src":"4446:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:30","nodeType":"YulIdentifier","src":"4428:10:30"},{"kind":"number","nativeSrc":"4440:2:30","nodeType":"YulLiteral","src":"4440:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:30","nodeType":"YulIdentifier","src":"4425:2:30"},"nativeSrc":"4425:18:30","nodeType":"YulFunctionCall","src":"4425:18:30"},"nativeSrc":"4422:49:30","nodeType":"YulIf","src":"4422:49:30"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:30","nodeType":"YulIdentifier","src":"4513:11:30"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:30","nodeType":"YulIdentifier","src":"4530:8:30"},{"arguments":[{"name":"len","nativeSrc":"4558:3:30","nodeType":"YulIdentifier","src":"4558:3:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:30","nodeType":"YulIdentifier","src":"4540:17:30"},"nativeSrc":"4540:22:30","nodeType":"YulFunctionCall","src":"4540:22:30"}],"functionName":{"name":"add","nativeSrc":"4526:3:30","nodeType":"YulIdentifier","src":"4526:3:30"},"nativeSrc":"4526:37:30","nodeType":"YulFunctionCall","src":"4526:37:30"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:30","nodeType":"YulIdentifier","src":"4484:28:30"},"nativeSrc":"4484:80:30","nodeType":"YulFunctionCall","src":"4484:80:30"},"nativeSrc":"4484:80:30","nodeType":"YulExpressionStatement","src":"4484:80:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:30","nodeType":"YulIdentifier","src":"4134:3:30"},{"kind":"number","nativeSrc":"4139:2:30","nodeType":"YulLiteral","src":"4139:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:30","nodeType":"YulIdentifier","src":"4131:2:30"},"nativeSrc":"4131:11:30","nodeType":"YulFunctionCall","src":"4131:11:30"},"nativeSrc":"4128:446:30","nodeType":"YulIf","src":"4128:446:30"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:30","nodeType":"YulTypedName","src":"4093:5:30","type":""},{"name":"len","nativeSrc":"4100:3:30","nodeType":"YulTypedName","src":"4100:3:30","type":""},{"name":"startIndex","nativeSrc":"4105:10:30","nodeType":"YulTypedName","src":"4105:10:30","type":""}],"src":"4038:543:30"},{"body":{"nativeSrc":"4650:54:30","nodeType":"YulBlock","src":"4650:54:30","statements":[{"nativeSrc":"4660:37:30","nodeType":"YulAssignment","src":"4660:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:30","nodeType":"YulIdentifier","src":"4685:4:30"},{"name":"value","nativeSrc":"4691:5:30","nodeType":"YulIdentifier","src":"4691:5:30"}],"functionName":{"name":"shr","nativeSrc":"4681:3:30","nodeType":"YulIdentifier","src":"4681:3:30"},"nativeSrc":"4681:16:30","nodeType":"YulFunctionCall","src":"4681:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:30","nodeType":"YulIdentifier","src":"4660:8:30"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:30","nodeType":"YulTypedName","src":"4625:4:30","type":""},{"name":"value","nativeSrc":"4631:5:30","nodeType":"YulTypedName","src":"4631:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:30","nodeType":"YulTypedName","src":"4641:8:30","type":""}],"src":"4587:117:30"},{"body":{"nativeSrc":"4761:118:30","nodeType":"YulBlock","src":"4761:118:30","statements":[{"nativeSrc":"4771:68:30","nodeType":"YulVariableDeclaration","src":"4771:68:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:30","nodeType":"YulLiteral","src":"4820:1:30","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:30","nodeType":"YulIdentifier","src":"4823:5:30"}],"functionName":{"name":"mul","nativeSrc":"4816:3:30","nodeType":"YulIdentifier","src":"4816:3:30"},"nativeSrc":"4816:13:30","nodeType":"YulFunctionCall","src":"4816:13:30"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:30","nodeType":"YulLiteral","src":"4835:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:30","nodeType":"YulIdentifier","src":"4831:3:30"},"nativeSrc":"4831:6:30","nodeType":"YulFunctionCall","src":"4831:6:30"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:30","nodeType":"YulIdentifier","src":"4787:28:30"},"nativeSrc":"4787:51:30","nodeType":"YulFunctionCall","src":"4787:51:30"}],"functionName":{"name":"not","nativeSrc":"4783:3:30","nodeType":"YulIdentifier","src":"4783:3:30"},"nativeSrc":"4783:56:30","nodeType":"YulFunctionCall","src":"4783:56:30"},"variables":[{"name":"mask","nativeSrc":"4775:4:30","nodeType":"YulTypedName","src":"4775:4:30","type":""}]},{"nativeSrc":"4848:25:30","nodeType":"YulAssignment","src":"4848:25:30","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:30","nodeType":"YulIdentifier","src":"4862:4:30"},{"name":"mask","nativeSrc":"4868:4:30","nodeType":"YulIdentifier","src":"4868:4:30"}],"functionName":{"name":"and","nativeSrc":"4858:3:30","nodeType":"YulIdentifier","src":"4858:3:30"},"nativeSrc":"4858:15:30","nodeType":"YulFunctionCall","src":"4858:15:30"},"variableNames":[{"name":"result","nativeSrc":"4848:6:30","nodeType":"YulIdentifier","src":"4848:6:30"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:30","nodeType":"YulTypedName","src":"4738:4:30","type":""},{"name":"bytes","nativeSrc":"4744:5:30","nodeType":"YulTypedName","src":"4744:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:30","nodeType":"YulTypedName","src":"4754:6:30","type":""}],"src":"4710:169:30"},{"body":{"nativeSrc":"4965:214:30","nodeType":"YulBlock","src":"4965:214:30","statements":[{"nativeSrc":"5098:37:30","nodeType":"YulAssignment","src":"5098:37:30","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:30","nodeType":"YulIdentifier","src":"5125:4:30"},{"name":"len","nativeSrc":"5131:3:30","nodeType":"YulIdentifier","src":"5131:3:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:30","nodeType":"YulIdentifier","src":"5106:18:30"},"nativeSrc":"5106:29:30","nodeType":"YulFunctionCall","src":"5106:29:30"},"variableNames":[{"name":"data","nativeSrc":"5098:4:30","nodeType":"YulIdentifier","src":"5098:4:30"}]},{"nativeSrc":"5144:29:30","nodeType":"YulAssignment","src":"5144:29:30","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:30","nodeType":"YulIdentifier","src":"5155:4:30"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:30","nodeType":"YulLiteral","src":"5165:1:30","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:30","nodeType":"YulIdentifier","src":"5168:3:30"}],"functionName":{"name":"mul","nativeSrc":"5161:3:30","nodeType":"YulIdentifier","src":"5161:3:30"},"nativeSrc":"5161:11:30","nodeType":"YulFunctionCall","src":"5161:11:30"}],"functionName":{"name":"or","nativeSrc":"5152:2:30","nodeType":"YulIdentifier","src":"5152:2:30"},"nativeSrc":"5152:21:30","nodeType":"YulFunctionCall","src":"5152:21:30"},"variableNames":[{"name":"used","nativeSrc":"5144:4:30","nodeType":"YulIdentifier","src":"5144:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:30","nodeType":"YulTypedName","src":"4946:4:30","type":""},{"name":"len","nativeSrc":"4952:3:30","nodeType":"YulTypedName","src":"4952:3:30","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:30","nodeType":"YulTypedName","src":"4960:4:30","type":""}],"src":"4884:295:30"},{"body":{"nativeSrc":"5276:1303:30","nodeType":"YulBlock","src":"5276:1303:30","statements":[{"nativeSrc":"5287:51:30","nodeType":"YulVariableDeclaration","src":"5287:51:30","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:30","nodeType":"YulIdentifier","src":"5334:3:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:30","nodeType":"YulIdentifier","src":"5301:32:30"},"nativeSrc":"5301:37:30","nodeType":"YulFunctionCall","src":"5301:37:30"},"variables":[{"name":"newLen","nativeSrc":"5291:6:30","nodeType":"YulTypedName","src":"5291:6:30","type":""}]},{"body":{"nativeSrc":"5423:22:30","nodeType":"YulBlock","src":"5423:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:30","nodeType":"YulIdentifier","src":"5425:16:30"},"nativeSrc":"5425:18:30","nodeType":"YulFunctionCall","src":"5425:18:30"},"nativeSrc":"5425:18:30","nodeType":"YulExpressionStatement","src":"5425:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:30","nodeType":"YulIdentifier","src":"5395:6:30"},{"kind":"number","nativeSrc":"5403:18:30","nodeType":"YulLiteral","src":"5403:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:30","nodeType":"YulIdentifier","src":"5392:2:30"},"nativeSrc":"5392:30:30","nodeType":"YulFunctionCall","src":"5392:30:30"},"nativeSrc":"5389:56:30","nodeType":"YulIf","src":"5389:56:30"},{"nativeSrc":"5455:52:30","nodeType":"YulVariableDeclaration","src":"5455:52:30","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:30","nodeType":"YulIdentifier","src":"5501:4:30"}],"functionName":{"name":"sload","nativeSrc":"5495:5:30","nodeType":"YulIdentifier","src":"5495:5:30"},"nativeSrc":"5495:11:30","nodeType":"YulFunctionCall","src":"5495:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:30","nodeType":"YulIdentifier","src":"5469:25:30"},"nativeSrc":"5469:38:30","nodeType":"YulFunctionCall","src":"5469:38:30"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:30","nodeType":"YulTypedName","src":"5459:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:30","nodeType":"YulIdentifier","src":"5600:4:30"},{"name":"oldLen","nativeSrc":"5606:6:30","nodeType":"YulIdentifier","src":"5606:6:30"},{"name":"newLen","nativeSrc":"5614:6:30","nodeType":"YulIdentifier","src":"5614:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:30","nodeType":"YulIdentifier","src":"5554:45:30"},"nativeSrc":"5554:67:30","nodeType":"YulFunctionCall","src":"5554:67:30"},"nativeSrc":"5554:67:30","nodeType":"YulExpressionStatement","src":"5554:67:30"},{"nativeSrc":"5631:18:30","nodeType":"YulVariableDeclaration","src":"5631:18:30","value":{"kind":"number","nativeSrc":"5648:1:30","nodeType":"YulLiteral","src":"5648:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:30","nodeType":"YulTypedName","src":"5635:9:30","type":""}]},{"nativeSrc":"5659:17:30","nodeType":"YulAssignment","src":"5659:17:30","value":{"kind":"number","nativeSrc":"5672:4:30","nodeType":"YulLiteral","src":"5672:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:30","nodeType":"YulIdentifier","src":"5659:9:30"}]},{"cases":[{"body":{"nativeSrc":"5723:611:30","nodeType":"YulBlock","src":"5723:611:30","statements":[{"nativeSrc":"5737:37:30","nodeType":"YulVariableDeclaration","src":"5737:37:30","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:30","nodeType":"YulIdentifier","src":"5756:6:30"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:30","nodeType":"YulLiteral","src":"5768:4:30","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:30","nodeType":"YulIdentifier","src":"5764:3:30"},"nativeSrc":"5764:9:30","nodeType":"YulFunctionCall","src":"5764:9:30"}],"functionName":{"name":"and","nativeSrc":"5752:3:30","nodeType":"YulIdentifier","src":"5752:3:30"},"nativeSrc":"5752:22:30","nodeType":"YulFunctionCall","src":"5752:22:30"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:30","nodeType":"YulTypedName","src":"5741:7:30","type":""}]},{"nativeSrc":"5788:51:30","nodeType":"YulVariableDeclaration","src":"5788:51:30","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:30","nodeType":"YulIdentifier","src":"5834:4:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:30","nodeType":"YulIdentifier","src":"5802:31:30"},"nativeSrc":"5802:37:30","nodeType":"YulFunctionCall","src":"5802:37:30"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:30","nodeType":"YulTypedName","src":"5792:6:30","type":""}]},{"nativeSrc":"5852:10:30","nodeType":"YulVariableDeclaration","src":"5852:10:30","value":{"kind":"number","nativeSrc":"5861:1:30","nodeType":"YulLiteral","src":"5861:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:30","nodeType":"YulTypedName","src":"5856:1:30","type":""}]},{"body":{"nativeSrc":"5920:163:30","nodeType":"YulBlock","src":"5920:163:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:30","nodeType":"YulIdentifier","src":"5945:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:30","nodeType":"YulIdentifier","src":"5963:3:30"},{"name":"srcOffset","nativeSrc":"5968:9:30","nodeType":"YulIdentifier","src":"5968:9:30"}],"functionName":{"name":"add","nativeSrc":"5959:3:30","nodeType":"YulIdentifier","src":"5959:3:30"},"nativeSrc":"5959:19:30","nodeType":"YulFunctionCall","src":"5959:19:30"}],"functionName":{"name":"mload","nativeSrc":"5953:5:30","nodeType":"YulIdentifier","src":"5953:5:30"},"nativeSrc":"5953:26:30","nodeType":"YulFunctionCall","src":"5953:26:30"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:30","nodeType":"YulIdentifier","src":"5938:6:30"},"nativeSrc":"5938:42:30","nodeType":"YulFunctionCall","src":"5938:42:30"},"nativeSrc":"5938:42:30","nodeType":"YulExpressionStatement","src":"5938:42:30"},{"nativeSrc":"5997:24:30","nodeType":"YulAssignment","src":"5997:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:30","nodeType":"YulIdentifier","src":"6011:6:30"},{"kind":"number","nativeSrc":"6019:1:30","nodeType":"YulLiteral","src":"6019:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:30","nodeType":"YulIdentifier","src":"6007:3:30"},"nativeSrc":"6007:14:30","nodeType":"YulFunctionCall","src":"6007:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:30","nodeType":"YulIdentifier","src":"5997:6:30"}]},{"nativeSrc":"6038:31:30","nodeType":"YulAssignment","src":"6038:31:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:30","nodeType":"YulIdentifier","src":"6055:9:30"},{"kind":"number","nativeSrc":"6066:2:30","nodeType":"YulLiteral","src":"6066:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:30","nodeType":"YulIdentifier","src":"6051:3:30"},"nativeSrc":"6051:18:30","nodeType":"YulFunctionCall","src":"6051:18:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:30","nodeType":"YulIdentifier","src":"6038:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:30","nodeType":"YulIdentifier","src":"5886:1:30"},{"name":"loopEnd","nativeSrc":"5889:7:30","nodeType":"YulIdentifier","src":"5889:7:30"}],"functionName":{"name":"lt","nativeSrc":"5883:2:30","nodeType":"YulIdentifier","src":"5883:2:30"},"nativeSrc":"5883:14:30","nodeType":"YulFunctionCall","src":"5883:14:30"},"nativeSrc":"5875:208:30","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:30","nodeType":"YulBlock","src":"5898:21:30","statements":[{"nativeSrc":"5900:17:30","nodeType":"YulAssignment","src":"5900:17:30","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:30","nodeType":"YulIdentifier","src":"5909:1:30"},{"kind":"number","nativeSrc":"5912:4:30","nodeType":"YulLiteral","src":"5912:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:30","nodeType":"YulIdentifier","src":"5905:3:30"},"nativeSrc":"5905:12:30","nodeType":"YulFunctionCall","src":"5905:12:30"},"variableNames":[{"name":"i","nativeSrc":"5900:1:30","nodeType":"YulIdentifier","src":"5900:1:30"}]}]},"pre":{"nativeSrc":"5879:3:30","nodeType":"YulBlock","src":"5879:3:30","statements":[]},"src":"5875:208:30"},{"body":{"nativeSrc":"6119:156:30","nodeType":"YulBlock","src":"6119:156:30","statements":[{"nativeSrc":"6137:43:30","nodeType":"YulVariableDeclaration","src":"6137:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:30","nodeType":"YulIdentifier","src":"6164:3:30"},{"name":"srcOffset","nativeSrc":"6169:9:30","nodeType":"YulIdentifier","src":"6169:9:30"}],"functionName":{"name":"add","nativeSrc":"6160:3:30","nodeType":"YulIdentifier","src":"6160:3:30"},"nativeSrc":"6160:19:30","nodeType":"YulFunctionCall","src":"6160:19:30"}],"functionName":{"name":"mload","nativeSrc":"6154:5:30","nodeType":"YulIdentifier","src":"6154:5:30"},"nativeSrc":"6154:26:30","nodeType":"YulFunctionCall","src":"6154:26:30"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:30","nodeType":"YulTypedName","src":"6141:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:30","nodeType":"YulIdentifier","src":"6204:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:30","nodeType":"YulIdentifier","src":"6231:9:30"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:30","nodeType":"YulIdentifier","src":"6246:6:30"},{"kind":"number","nativeSrc":"6254:4:30","nodeType":"YulLiteral","src":"6254:4:30","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:30","nodeType":"YulIdentifier","src":"6242:3:30"},"nativeSrc":"6242:17:30","nodeType":"YulFunctionCall","src":"6242:17:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:30","nodeType":"YulIdentifier","src":"6212:18:30"},"nativeSrc":"6212:48:30","nodeType":"YulFunctionCall","src":"6212:48:30"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:30","nodeType":"YulIdentifier","src":"6197:6:30"},"nativeSrc":"6197:64:30","nodeType":"YulFunctionCall","src":"6197:64:30"},"nativeSrc":"6197:64:30","nodeType":"YulExpressionStatement","src":"6197:64:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:30","nodeType":"YulIdentifier","src":"6102:7:30"},{"name":"newLen","nativeSrc":"6111:6:30","nodeType":"YulIdentifier","src":"6111:6:30"}],"functionName":{"name":"lt","nativeSrc":"6099:2:30","nodeType":"YulIdentifier","src":"6099:2:30"},"nativeSrc":"6099:19:30","nodeType":"YulFunctionCall","src":"6099:19:30"},"nativeSrc":"6096:179:30","nodeType":"YulIf","src":"6096:179:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:30","nodeType":"YulIdentifier","src":"6295:4:30"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:30","nodeType":"YulIdentifier","src":"6309:6:30"},{"kind":"number","nativeSrc":"6317:1:30","nodeType":"YulLiteral","src":"6317:1:30","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:30","nodeType":"YulIdentifier","src":"6305:3:30"},"nativeSrc":"6305:14:30","nodeType":"YulFunctionCall","src":"6305:14:30"},{"kind":"number","nativeSrc":"6321:1:30","nodeType":"YulLiteral","src":"6321:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:30","nodeType":"YulIdentifier","src":"6301:3:30"},"nativeSrc":"6301:22:30","nodeType":"YulFunctionCall","src":"6301:22:30"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:30","nodeType":"YulIdentifier","src":"6288:6:30"},"nativeSrc":"6288:36:30","nodeType":"YulFunctionCall","src":"6288:36:30"},"nativeSrc":"6288:36:30","nodeType":"YulExpressionStatement","src":"6288:36:30"}]},"nativeSrc":"5716:618:30","nodeType":"YulCase","src":"5716:618:30","value":{"kind":"number","nativeSrc":"5721:1:30","nodeType":"YulLiteral","src":"5721:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:30","nodeType":"YulBlock","src":"6351:222:30","statements":[{"nativeSrc":"6365:14:30","nodeType":"YulVariableDeclaration","src":"6365:14:30","value":{"kind":"number","nativeSrc":"6378:1:30","nodeType":"YulLiteral","src":"6378:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:30","nodeType":"YulTypedName","src":"6369:5:30","type":""}]},{"body":{"nativeSrc":"6402:67:30","nodeType":"YulBlock","src":"6402:67:30","statements":[{"nativeSrc":"6420:35:30","nodeType":"YulAssignment","src":"6420:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:30","nodeType":"YulIdentifier","src":"6439:3:30"},{"name":"srcOffset","nativeSrc":"6444:9:30","nodeType":"YulIdentifier","src":"6444:9:30"}],"functionName":{"name":"add","nativeSrc":"6435:3:30","nodeType":"YulIdentifier","src":"6435:3:30"},"nativeSrc":"6435:19:30","nodeType":"YulFunctionCall","src":"6435:19:30"}],"functionName":{"name":"mload","nativeSrc":"6429:5:30","nodeType":"YulIdentifier","src":"6429:5:30"},"nativeSrc":"6429:26:30","nodeType":"YulFunctionCall","src":"6429:26:30"},"variableNames":[{"name":"value","nativeSrc":"6420:5:30","nodeType":"YulIdentifier","src":"6420:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:30","nodeType":"YulIdentifier","src":"6395:6:30"},"nativeSrc":"6392:77:30","nodeType":"YulIf","src":"6392:77:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:30","nodeType":"YulIdentifier","src":"6489:4:30"},{"arguments":[{"name":"value","nativeSrc":"6548:5:30","nodeType":"YulIdentifier","src":"6548:5:30"},{"name":"newLen","nativeSrc":"6555:6:30","nodeType":"YulIdentifier","src":"6555:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:30","nodeType":"YulIdentifier","src":"6495:52:30"},"nativeSrc":"6495:67:30","nodeType":"YulFunctionCall","src":"6495:67:30"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:30","nodeType":"YulIdentifier","src":"6482:6:30"},"nativeSrc":"6482:81:30","nodeType":"YulFunctionCall","src":"6482:81:30"},"nativeSrc":"6482:81:30","nodeType":"YulExpressionStatement","src":"6482:81:30"}]},"nativeSrc":"6343:230:30","nodeType":"YulCase","src":"6343:230:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:30","nodeType":"YulIdentifier","src":"5696:6:30"},{"kind":"number","nativeSrc":"5704:2:30","nodeType":"YulLiteral","src":"5704:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:30","nodeType":"YulIdentifier","src":"5693:2:30"},"nativeSrc":"5693:14:30","nodeType":"YulFunctionCall","src":"5693:14:30"},"nativeSrc":"5686:887:30","nodeType":"YulSwitch","src":"5686:887:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:30","nodeType":"YulTypedName","src":"5265:4:30","type":""},{"name":"src","nativeSrc":"5271:3:30","nodeType":"YulTypedName","src":"5271:3:30","type":""}],"src":"5184:1395:30"},{"body":{"nativeSrc":"6613:152:30","nodeType":"YulBlock","src":"6613:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6630:1:30","nodeType":"YulLiteral","src":"6630:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6633:77:30","nodeType":"YulLiteral","src":"6633:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6623:6:30","nodeType":"YulIdentifier","src":"6623:6:30"},"nativeSrc":"6623:88:30","nodeType":"YulFunctionCall","src":"6623:88:30"},"nativeSrc":"6623:88:30","nodeType":"YulExpressionStatement","src":"6623:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6727:1:30","nodeType":"YulLiteral","src":"6727:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"6730:4:30","nodeType":"YulLiteral","src":"6730:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6720:6:30","nodeType":"YulIdentifier","src":"6720:6:30"},"nativeSrc":"6720:15:30","nodeType":"YulFunctionCall","src":"6720:15:30"},"nativeSrc":"6720:15:30","nodeType":"YulExpressionStatement","src":"6720:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6751:1:30","nodeType":"YulLiteral","src":"6751:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6754:4:30","nodeType":"YulLiteral","src":"6754:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6744:6:30","nodeType":"YulIdentifier","src":"6744:6:30"},"nativeSrc":"6744:15:30","nodeType":"YulFunctionCall","src":"6744:15:30"},"nativeSrc":"6744:15:30","nodeType":"YulExpressionStatement","src":"6744:15:30"}]},"name":"panic_error_0x11","nativeSrc":"6585:180:30","nodeType":"YulFunctionDefinition","src":"6585:180:30"},{"body":{"nativeSrc":"6819:362:30","nodeType":"YulBlock","src":"6819:362:30","statements":[{"nativeSrc":"6829:25:30","nodeType":"YulAssignment","src":"6829:25:30","value":{"arguments":[{"name":"x","nativeSrc":"6852:1:30","nodeType":"YulIdentifier","src":"6852:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6834:17:30","nodeType":"YulIdentifier","src":"6834:17:30"},"nativeSrc":"6834:20:30","nodeType":"YulFunctionCall","src":"6834:20:30"},"variableNames":[{"name":"x","nativeSrc":"6829:1:30","nodeType":"YulIdentifier","src":"6829:1:30"}]},{"nativeSrc":"6863:25:30","nodeType":"YulAssignment","src":"6863:25:30","value":{"arguments":[{"name":"y","nativeSrc":"6886:1:30","nodeType":"YulIdentifier","src":"6886:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6868:17:30","nodeType":"YulIdentifier","src":"6868:17:30"},"nativeSrc":"6868:20:30","nodeType":"YulFunctionCall","src":"6868:20:30"},"variableNames":[{"name":"y","nativeSrc":"6863:1:30","nodeType":"YulIdentifier","src":"6863:1:30"}]},{"nativeSrc":"6897:28:30","nodeType":"YulVariableDeclaration","src":"6897:28:30","value":{"arguments":[{"name":"x","nativeSrc":"6920:1:30","nodeType":"YulIdentifier","src":"6920:1:30"},{"name":"y","nativeSrc":"6923:1:30","nodeType":"YulIdentifier","src":"6923:1:30"}],"functionName":{"name":"mul","nativeSrc":"6916:3:30","nodeType":"YulIdentifier","src":"6916:3:30"},"nativeSrc":"6916:9:30","nodeType":"YulFunctionCall","src":"6916:9:30"},"variables":[{"name":"product_raw","nativeSrc":"6901:11:30","nodeType":"YulTypedName","src":"6901:11:30","type":""}]},{"nativeSrc":"6934:41:30","nodeType":"YulAssignment","src":"6934:41:30","value":{"arguments":[{"name":"product_raw","nativeSrc":"6963:11:30","nodeType":"YulIdentifier","src":"6963:11:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6945:17:30","nodeType":"YulIdentifier","src":"6945:17:30"},"nativeSrc":"6945:30:30","nodeType":"YulFunctionCall","src":"6945:30:30"},"variableNames":[{"name":"product","nativeSrc":"6934:7:30","nodeType":"YulIdentifier","src":"6934:7:30"}]},{"body":{"nativeSrc":"7152:22:30","nodeType":"YulBlock","src":"7152:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7154:16:30","nodeType":"YulIdentifier","src":"7154:16:30"},"nativeSrc":"7154:18:30","nodeType":"YulFunctionCall","src":"7154:18:30"},"nativeSrc":"7154:18:30","nodeType":"YulExpressionStatement","src":"7154:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7085:1:30","nodeType":"YulIdentifier","src":"7085:1:30"}],"functionName":{"name":"iszero","nativeSrc":"7078:6:30","nodeType":"YulIdentifier","src":"7078:6:30"},"nativeSrc":"7078:9:30","nodeType":"YulFunctionCall","src":"7078:9:30"},{"arguments":[{"name":"y","nativeSrc":"7108:1:30","nodeType":"YulIdentifier","src":"7108:1:30"},{"arguments":[{"name":"product","nativeSrc":"7115:7:30","nodeType":"YulIdentifier","src":"7115:7:30"},{"name":"x","nativeSrc":"7124:1:30","nodeType":"YulIdentifier","src":"7124:1:30"}],"functionName":{"name":"div","nativeSrc":"7111:3:30","nodeType":"YulIdentifier","src":"7111:3:30"},"nativeSrc":"7111:15:30","nodeType":"YulFunctionCall","src":"7111:15:30"}],"functionName":{"name":"eq","nativeSrc":"7105:2:30","nodeType":"YulIdentifier","src":"7105:2:30"},"nativeSrc":"7105:22:30","nodeType":"YulFunctionCall","src":"7105:22:30"}],"functionName":{"name":"or","nativeSrc":"7058:2:30","nodeType":"YulIdentifier","src":"7058:2:30"},"nativeSrc":"7058:83:30","nodeType":"YulFunctionCall","src":"7058:83:30"}],"functionName":{"name":"iszero","nativeSrc":"7038:6:30","nodeType":"YulIdentifier","src":"7038:6:30"},"nativeSrc":"7038:113:30","nodeType":"YulFunctionCall","src":"7038:113:30"},"nativeSrc":"7035:139:30","nodeType":"YulIf","src":"7035:139:30"}]},"name":"checked_mul_t_uint256","nativeSrc":"6771:410:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6802:1:30","nodeType":"YulTypedName","src":"6802:1:30","type":""},{"name":"y","nativeSrc":"6805:1:30","nodeType":"YulTypedName","src":"6805:1:30","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6811:7:30","nodeType":"YulTypedName","src":"6811:7:30","type":""}],"src":"6771:410:30"},{"body":{"nativeSrc":"7215:152:30","nodeType":"YulBlock","src":"7215:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7232:1:30","nodeType":"YulLiteral","src":"7232:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7235:77:30","nodeType":"YulLiteral","src":"7235:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7225:6:30","nodeType":"YulIdentifier","src":"7225:6:30"},"nativeSrc":"7225:88:30","nodeType":"YulFunctionCall","src":"7225:88:30"},"nativeSrc":"7225:88:30","nodeType":"YulExpressionStatement","src":"7225:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7329:1:30","nodeType":"YulLiteral","src":"7329:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"7332:4:30","nodeType":"YulLiteral","src":"7332:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7322:6:30","nodeType":"YulIdentifier","src":"7322:6:30"},"nativeSrc":"7322:15:30","nodeType":"YulFunctionCall","src":"7322:15:30"},"nativeSrc":"7322:15:30","nodeType":"YulExpressionStatement","src":"7322:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7353:1:30","nodeType":"YulLiteral","src":"7353:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7356:4:30","nodeType":"YulLiteral","src":"7356:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7346:6:30","nodeType":"YulIdentifier","src":"7346:6:30"},"nativeSrc":"7346:15:30","nodeType":"YulFunctionCall","src":"7346:15:30"},"nativeSrc":"7346:15:30","nodeType":"YulExpressionStatement","src":"7346:15:30"}]},"name":"panic_error_0x12","nativeSrc":"7187:180:30","nodeType":"YulFunctionDefinition","src":"7187:180:30"},{"body":{"nativeSrc":"7415:143:30","nodeType":"YulBlock","src":"7415:143:30","statements":[{"nativeSrc":"7425:25:30","nodeType":"YulAssignment","src":"7425:25:30","value":{"arguments":[{"name":"x","nativeSrc":"7448:1:30","nodeType":"YulIdentifier","src":"7448:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7430:17:30","nodeType":"YulIdentifier","src":"7430:17:30"},"nativeSrc":"7430:20:30","nodeType":"YulFunctionCall","src":"7430:20:30"},"variableNames":[{"name":"x","nativeSrc":"7425:1:30","nodeType":"YulIdentifier","src":"7425:1:30"}]},{"nativeSrc":"7459:25:30","nodeType":"YulAssignment","src":"7459:25:30","value":{"arguments":[{"name":"y","nativeSrc":"7482:1:30","nodeType":"YulIdentifier","src":"7482:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7464:17:30","nodeType":"YulIdentifier","src":"7464:17:30"},"nativeSrc":"7464:20:30","nodeType":"YulFunctionCall","src":"7464:20:30"},"variableNames":[{"name":"y","nativeSrc":"7459:1:30","nodeType":"YulIdentifier","src":"7459:1:30"}]},{"body":{"nativeSrc":"7506:22:30","nodeType":"YulBlock","src":"7506:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"7508:16:30","nodeType":"YulIdentifier","src":"7508:16:30"},"nativeSrc":"7508:18:30","nodeType":"YulFunctionCall","src":"7508:18:30"},"nativeSrc":"7508:18:30","nodeType":"YulExpressionStatement","src":"7508:18:30"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"7503:1:30","nodeType":"YulIdentifier","src":"7503:1:30"}],"functionName":{"name":"iszero","nativeSrc":"7496:6:30","nodeType":"YulIdentifier","src":"7496:6:30"},"nativeSrc":"7496:9:30","nodeType":"YulFunctionCall","src":"7496:9:30"},"nativeSrc":"7493:35:30","nodeType":"YulIf","src":"7493:35:30"},{"nativeSrc":"7538:14:30","nodeType":"YulAssignment","src":"7538:14:30","value":{"arguments":[{"name":"x","nativeSrc":"7547:1:30","nodeType":"YulIdentifier","src":"7547:1:30"},{"name":"y","nativeSrc":"7550:1:30","nodeType":"YulIdentifier","src":"7550:1:30"}],"functionName":{"name":"div","nativeSrc":"7543:3:30","nodeType":"YulIdentifier","src":"7543:3:30"},"nativeSrc":"7543:9:30","nodeType":"YulFunctionCall","src":"7543:9:30"},"variableNames":[{"name":"r","nativeSrc":"7538:1:30","nodeType":"YulIdentifier","src":"7538:1:30"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7373:185:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7404:1:30","nodeType":"YulTypedName","src":"7404:1:30","type":""},{"name":"y","nativeSrc":"7407:1:30","nodeType":"YulTypedName","src":"7407:1:30","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7413:1:30","nodeType":"YulTypedName","src":"7413:1:30","type":""}],"src":"7373:185:30"},{"body":{"nativeSrc":"7609:32:30","nodeType":"YulBlock","src":"7609:32:30","statements":[{"nativeSrc":"7619:16:30","nodeType":"YulAssignment","src":"7619:16:30","value":{"name":"value","nativeSrc":"7630:5:30","nodeType":"YulIdentifier","src":"7630:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"7619:7:30","nodeType":"YulIdentifier","src":"7619:7:30"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"7564:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7591:5:30","nodeType":"YulTypedName","src":"7591:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7601:7:30","nodeType":"YulTypedName","src":"7601:7:30","type":""}],"src":"7564:77:30"},{"body":{"nativeSrc":"7712:53:30","nodeType":"YulBlock","src":"7712:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7729:3:30","nodeType":"YulIdentifier","src":"7729:3:30"},{"arguments":[{"name":"value","nativeSrc":"7752:5:30","nodeType":"YulIdentifier","src":"7752:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"7734:17:30","nodeType":"YulIdentifier","src":"7734:17:30"},"nativeSrc":"7734:24:30","nodeType":"YulFunctionCall","src":"7734:24:30"}],"functionName":{"name":"mstore","nativeSrc":"7722:6:30","nodeType":"YulIdentifier","src":"7722:6:30"},"nativeSrc":"7722:37:30","nodeType":"YulFunctionCall","src":"7722:37:30"},"nativeSrc":"7722:37:30","nodeType":"YulExpressionStatement","src":"7722:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7647:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7700:5:30","nodeType":"YulTypedName","src":"7700:5:30","type":""},{"name":"pos","nativeSrc":"7707:3:30","nodeType":"YulTypedName","src":"7707:3:30","type":""}],"src":"7647:118:30"},{"body":{"nativeSrc":"7836:53:30","nodeType":"YulBlock","src":"7836:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7853:3:30","nodeType":"YulIdentifier","src":"7853:3:30"},{"arguments":[{"name":"value","nativeSrc":"7876:5:30","nodeType":"YulIdentifier","src":"7876:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7858:17:30","nodeType":"YulIdentifier","src":"7858:17:30"},"nativeSrc":"7858:24:30","nodeType":"YulFunctionCall","src":"7858:24:30"}],"functionName":{"name":"mstore","nativeSrc":"7846:6:30","nodeType":"YulIdentifier","src":"7846:6:30"},"nativeSrc":"7846:37:30","nodeType":"YulFunctionCall","src":"7846:37:30"},"nativeSrc":"7846:37:30","nodeType":"YulExpressionStatement","src":"7846:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7771:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7824:5:30","nodeType":"YulTypedName","src":"7824:5:30","type":""},{"name":"pos","nativeSrc":"7831:3:30","nodeType":"YulTypedName","src":"7831:3:30","type":""}],"src":"7771:118:30"},{"body":{"nativeSrc":"7960:53:30","nodeType":"YulBlock","src":"7960:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7977:3:30","nodeType":"YulIdentifier","src":"7977:3:30"},{"arguments":[{"name":"value","nativeSrc":"8000:5:30","nodeType":"YulIdentifier","src":"8000:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7982:17:30","nodeType":"YulIdentifier","src":"7982:17:30"},"nativeSrc":"7982:24:30","nodeType":"YulFunctionCall","src":"7982:24:30"}],"functionName":{"name":"mstore","nativeSrc":"7970:6:30","nodeType":"YulIdentifier","src":"7970:6:30"},"nativeSrc":"7970:37:30","nodeType":"YulFunctionCall","src":"7970:37:30"},"nativeSrc":"7970:37:30","nodeType":"YulExpressionStatement","src":"7970:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7895:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7948:5:30","nodeType":"YulTypedName","src":"7948:5:30","type":""},{"name":"pos","nativeSrc":"7955:3:30","nodeType":"YulTypedName","src":"7955:3:30","type":""}],"src":"7895:118:30"},{"body":{"nativeSrc":"8229:454:30","nodeType":"YulBlock","src":"8229:454:30","statements":[{"nativeSrc":"8239:27:30","nodeType":"YulAssignment","src":"8239:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"8251:9:30","nodeType":"YulIdentifier","src":"8251:9:30"},{"kind":"number","nativeSrc":"8262:3:30","nodeType":"YulLiteral","src":"8262:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8247:3:30","nodeType":"YulIdentifier","src":"8247:3:30"},"nativeSrc":"8247:19:30","nodeType":"YulFunctionCall","src":"8247:19:30"},"variableNames":[{"name":"tail","nativeSrc":"8239:4:30","nodeType":"YulIdentifier","src":"8239:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8320:6:30","nodeType":"YulIdentifier","src":"8320:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8333:9:30","nodeType":"YulIdentifier","src":"8333:9:30"},{"kind":"number","nativeSrc":"8344:1:30","nodeType":"YulLiteral","src":"8344:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8329:3:30","nodeType":"YulIdentifier","src":"8329:3:30"},"nativeSrc":"8329:17:30","nodeType":"YulFunctionCall","src":"8329:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8276:43:30","nodeType":"YulIdentifier","src":"8276:43:30"},"nativeSrc":"8276:71:30","nodeType":"YulFunctionCall","src":"8276:71:30"},"nativeSrc":"8276:71:30","nodeType":"YulExpressionStatement","src":"8276:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8401:6:30","nodeType":"YulIdentifier","src":"8401:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8414:9:30","nodeType":"YulIdentifier","src":"8414:9:30"},{"kind":"number","nativeSrc":"8425:2:30","nodeType":"YulLiteral","src":"8425:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8410:3:30","nodeType":"YulIdentifier","src":"8410:3:30"},"nativeSrc":"8410:18:30","nodeType":"YulFunctionCall","src":"8410:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8357:43:30","nodeType":"YulIdentifier","src":"8357:43:30"},"nativeSrc":"8357:72:30","nodeType":"YulFunctionCall","src":"8357:72:30"},"nativeSrc":"8357:72:30","nodeType":"YulExpressionStatement","src":"8357:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8483:6:30","nodeType":"YulIdentifier","src":"8483:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8496:9:30","nodeType":"YulIdentifier","src":"8496:9:30"},{"kind":"number","nativeSrc":"8507:2:30","nodeType":"YulLiteral","src":"8507:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8492:3:30","nodeType":"YulIdentifier","src":"8492:3:30"},"nativeSrc":"8492:18:30","nodeType":"YulFunctionCall","src":"8492:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8439:43:30","nodeType":"YulIdentifier","src":"8439:43:30"},"nativeSrc":"8439:72:30","nodeType":"YulFunctionCall","src":"8439:72:30"},"nativeSrc":"8439:72:30","nodeType":"YulExpressionStatement","src":"8439:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8565:6:30","nodeType":"YulIdentifier","src":"8565:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8578:9:30","nodeType":"YulIdentifier","src":"8578:9:30"},{"kind":"number","nativeSrc":"8589:2:30","nodeType":"YulLiteral","src":"8589:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8574:3:30","nodeType":"YulIdentifier","src":"8574:3:30"},"nativeSrc":"8574:18:30","nodeType":"YulFunctionCall","src":"8574:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8521:43:30","nodeType":"YulIdentifier","src":"8521:43:30"},"nativeSrc":"8521:72:30","nodeType":"YulFunctionCall","src":"8521:72:30"},"nativeSrc":"8521:72:30","nodeType":"YulExpressionStatement","src":"8521:72:30"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8647:6:30","nodeType":"YulIdentifier","src":"8647:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8660:9:30","nodeType":"YulIdentifier","src":"8660:9:30"},{"kind":"number","nativeSrc":"8671:3:30","nodeType":"YulLiteral","src":"8671:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8656:3:30","nodeType":"YulIdentifier","src":"8656:3:30"},"nativeSrc":"8656:19:30","nodeType":"YulFunctionCall","src":"8656:19:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8603:43:30","nodeType":"YulIdentifier","src":"8603:43:30"},"nativeSrc":"8603:73:30","nodeType":"YulFunctionCall","src":"8603:73:30"},"nativeSrc":"8603:73:30","nodeType":"YulExpressionStatement","src":"8603:73:30"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8019:664:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8169:9:30","nodeType":"YulTypedName","src":"8169:9:30","type":""},{"name":"value4","nativeSrc":"8181:6:30","nodeType":"YulTypedName","src":"8181:6:30","type":""},{"name":"value3","nativeSrc":"8189:6:30","nodeType":"YulTypedName","src":"8189:6:30","type":""},{"name":"value2","nativeSrc":"8197:6:30","nodeType":"YulTypedName","src":"8197:6:30","type":""},{"name":"value1","nativeSrc":"8205:6:30","nodeType":"YulTypedName","src":"8205:6:30","type":""},{"name":"value0","nativeSrc":"8213:6:30","nodeType":"YulTypedName","src":"8213:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8224:4:30","nodeType":"YulTypedName","src":"8224:4:30","type":""}],"src":"8019:664:30"},{"body":{"nativeSrc":"8787:124:30","nodeType":"YulBlock","src":"8787:124:30","statements":[{"nativeSrc":"8797:26:30","nodeType":"YulAssignment","src":"8797:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"8809:9:30","nodeType":"YulIdentifier","src":"8809:9:30"},{"kind":"number","nativeSrc":"8820:2:30","nodeType":"YulLiteral","src":"8820:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8805:3:30","nodeType":"YulIdentifier","src":"8805:3:30"},"nativeSrc":"8805:18:30","nodeType":"YulFunctionCall","src":"8805:18:30"},"variableNames":[{"name":"tail","nativeSrc":"8797:4:30","nodeType":"YulIdentifier","src":"8797:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8877:6:30","nodeType":"YulIdentifier","src":"8877:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8890:9:30","nodeType":"YulIdentifier","src":"8890:9:30"},{"kind":"number","nativeSrc":"8901:1:30","nodeType":"YulLiteral","src":"8901:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8886:3:30","nodeType":"YulIdentifier","src":"8886:3:30"},"nativeSrc":"8886:17:30","nodeType":"YulFunctionCall","src":"8886:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8833:43:30","nodeType":"YulIdentifier","src":"8833:43:30"},"nativeSrc":"8833:71:30","nodeType":"YulFunctionCall","src":"8833:71:30"},"nativeSrc":"8833:71:30","nodeType":"YulExpressionStatement","src":"8833:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8689:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8759:9:30","nodeType":"YulTypedName","src":"8759:9:30","type":""},{"name":"value0","nativeSrc":"8771:6:30","nodeType":"YulTypedName","src":"8771:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8782:4:30","nodeType":"YulTypedName","src":"8782:4:30","type":""}],"src":"8689:222:30"},{"body":{"nativeSrc":"9013:73:30","nodeType":"YulBlock","src":"9013:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9030:3:30","nodeType":"YulIdentifier","src":"9030:3:30"},{"name":"length","nativeSrc":"9035:6:30","nodeType":"YulIdentifier","src":"9035:6:30"}],"functionName":{"name":"mstore","nativeSrc":"9023:6:30","nodeType":"YulIdentifier","src":"9023:6:30"},"nativeSrc":"9023:19:30","nodeType":"YulFunctionCall","src":"9023:19:30"},"nativeSrc":"9023:19:30","nodeType":"YulExpressionStatement","src":"9023:19:30"},{"nativeSrc":"9051:29:30","nodeType":"YulAssignment","src":"9051:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"9070:3:30","nodeType":"YulIdentifier","src":"9070:3:30"},{"kind":"number","nativeSrc":"9075:4:30","nodeType":"YulLiteral","src":"9075:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9066:3:30","nodeType":"YulIdentifier","src":"9066:3:30"},"nativeSrc":"9066:14:30","nodeType":"YulFunctionCall","src":"9066:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"9051:11:30","nodeType":"YulIdentifier","src":"9051:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8917:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8985:3:30","nodeType":"YulTypedName","src":"8985:3:30","type":""},{"name":"length","nativeSrc":"8990:6:30","nodeType":"YulTypedName","src":"8990:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9001:11:30","nodeType":"YulTypedName","src":"9001:11:30","type":""}],"src":"8917:169:30"},{"body":{"nativeSrc":"9154:184:30","nodeType":"YulBlock","src":"9154:184:30","statements":[{"nativeSrc":"9164:10:30","nodeType":"YulVariableDeclaration","src":"9164:10:30","value":{"kind":"number","nativeSrc":"9173:1:30","nodeType":"YulLiteral","src":"9173:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9168:1:30","nodeType":"YulTypedName","src":"9168:1:30","type":""}]},{"body":{"nativeSrc":"9233:63:30","nodeType":"YulBlock","src":"9233:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9258:3:30","nodeType":"YulIdentifier","src":"9258:3:30"},{"name":"i","nativeSrc":"9263:1:30","nodeType":"YulIdentifier","src":"9263:1:30"}],"functionName":{"name":"add","nativeSrc":"9254:3:30","nodeType":"YulIdentifier","src":"9254:3:30"},"nativeSrc":"9254:11:30","nodeType":"YulFunctionCall","src":"9254:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9277:3:30","nodeType":"YulIdentifier","src":"9277:3:30"},{"name":"i","nativeSrc":"9282:1:30","nodeType":"YulIdentifier","src":"9282:1:30"}],"functionName":{"name":"add","nativeSrc":"9273:3:30","nodeType":"YulIdentifier","src":"9273:3:30"},"nativeSrc":"9273:11:30","nodeType":"YulFunctionCall","src":"9273:11:30"}],"functionName":{"name":"mload","nativeSrc":"9267:5:30","nodeType":"YulIdentifier","src":"9267:5:30"},"nativeSrc":"9267:18:30","nodeType":"YulFunctionCall","src":"9267:18:30"}],"functionName":{"name":"mstore","nativeSrc":"9247:6:30","nodeType":"YulIdentifier","src":"9247:6:30"},"nativeSrc":"9247:39:30","nodeType":"YulFunctionCall","src":"9247:39:30"},"nativeSrc":"9247:39:30","nodeType":"YulExpressionStatement","src":"9247:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9194:1:30","nodeType":"YulIdentifier","src":"9194:1:30"},{"name":"length","nativeSrc":"9197:6:30","nodeType":"YulIdentifier","src":"9197:6:30"}],"functionName":{"name":"lt","nativeSrc":"9191:2:30","nodeType":"YulIdentifier","src":"9191:2:30"},"nativeSrc":"9191:13:30","nodeType":"YulFunctionCall","src":"9191:13:30"},"nativeSrc":"9183:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"9205:19:30","nodeType":"YulBlock","src":"9205:19:30","statements":[{"nativeSrc":"9207:15:30","nodeType":"YulAssignment","src":"9207:15:30","value":{"arguments":[{"name":"i","nativeSrc":"9216:1:30","nodeType":"YulIdentifier","src":"9216:1:30"},{"kind":"number","nativeSrc":"9219:2:30","nodeType":"YulLiteral","src":"9219:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9212:3:30","nodeType":"YulIdentifier","src":"9212:3:30"},"nativeSrc":"9212:10:30","nodeType":"YulFunctionCall","src":"9212:10:30"},"variableNames":[{"name":"i","nativeSrc":"9207:1:30","nodeType":"YulIdentifier","src":"9207:1:30"}]}]},"pre":{"nativeSrc":"9187:3:30","nodeType":"YulBlock","src":"9187:3:30","statements":[]},"src":"9183:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9316:3:30","nodeType":"YulIdentifier","src":"9316:3:30"},{"name":"length","nativeSrc":"9321:6:30","nodeType":"YulIdentifier","src":"9321:6:30"}],"functionName":{"name":"add","nativeSrc":"9312:3:30","nodeType":"YulIdentifier","src":"9312:3:30"},"nativeSrc":"9312:16:30","nodeType":"YulFunctionCall","src":"9312:16:30"},{"kind":"number","nativeSrc":"9330:1:30","nodeType":"YulLiteral","src":"9330:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9305:6:30","nodeType":"YulIdentifier","src":"9305:6:30"},"nativeSrc":"9305:27:30","nodeType":"YulFunctionCall","src":"9305:27:30"},"nativeSrc":"9305:27:30","nodeType":"YulExpressionStatement","src":"9305:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9092:246:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9136:3:30","nodeType":"YulTypedName","src":"9136:3:30","type":""},{"name":"dst","nativeSrc":"9141:3:30","nodeType":"YulTypedName","src":"9141:3:30","type":""},{"name":"length","nativeSrc":"9146:6:30","nodeType":"YulTypedName","src":"9146:6:30","type":""}],"src":"9092:246:30"},{"body":{"nativeSrc":"9392:54:30","nodeType":"YulBlock","src":"9392:54:30","statements":[{"nativeSrc":"9402:38:30","nodeType":"YulAssignment","src":"9402:38:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9420:5:30","nodeType":"YulIdentifier","src":"9420:5:30"},{"kind":"number","nativeSrc":"9427:2:30","nodeType":"YulLiteral","src":"9427:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9416:3:30","nodeType":"YulIdentifier","src":"9416:3:30"},"nativeSrc":"9416:14:30","nodeType":"YulFunctionCall","src":"9416:14:30"},{"arguments":[{"kind":"number","nativeSrc":"9436:2:30","nodeType":"YulLiteral","src":"9436:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"9432:3:30","nodeType":"YulIdentifier","src":"9432:3:30"},"nativeSrc":"9432:7:30","nodeType":"YulFunctionCall","src":"9432:7:30"}],"functionName":{"name":"and","nativeSrc":"9412:3:30","nodeType":"YulIdentifier","src":"9412:3:30"},"nativeSrc":"9412:28:30","nodeType":"YulFunctionCall","src":"9412:28:30"},"variableNames":[{"name":"result","nativeSrc":"9402:6:30","nodeType":"YulIdentifier","src":"9402:6:30"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"9344:102:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9375:5:30","nodeType":"YulTypedName","src":"9375:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"9385:6:30","nodeType":"YulTypedName","src":"9385:6:30","type":""}],"src":"9344:102:30"},{"body":{"nativeSrc":"9544:285:30","nodeType":"YulBlock","src":"9544:285:30","statements":[{"nativeSrc":"9554:53:30","nodeType":"YulVariableDeclaration","src":"9554:53:30","value":{"arguments":[{"name":"value","nativeSrc":"9601:5:30","nodeType":"YulIdentifier","src":"9601:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"9568:32:30","nodeType":"YulIdentifier","src":"9568:32:30"},"nativeSrc":"9568:39:30","nodeType":"YulFunctionCall","src":"9568:39:30"},"variables":[{"name":"length","nativeSrc":"9558:6:30","nodeType":"YulTypedName","src":"9558:6:30","type":""}]},{"nativeSrc":"9616:78:30","nodeType":"YulAssignment","src":"9616:78:30","value":{"arguments":[{"name":"pos","nativeSrc":"9682:3:30","nodeType":"YulIdentifier","src":"9682:3:30"},{"name":"length","nativeSrc":"9687:6:30","nodeType":"YulIdentifier","src":"9687:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9623:58:30","nodeType":"YulIdentifier","src":"9623:58:30"},"nativeSrc":"9623:71:30","nodeType":"YulFunctionCall","src":"9623:71:30"},"variableNames":[{"name":"pos","nativeSrc":"9616:3:30","nodeType":"YulIdentifier","src":"9616:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9742:5:30","nodeType":"YulIdentifier","src":"9742:5:30"},{"kind":"number","nativeSrc":"9749:4:30","nodeType":"YulLiteral","src":"9749:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9738:3:30","nodeType":"YulIdentifier","src":"9738:3:30"},"nativeSrc":"9738:16:30","nodeType":"YulFunctionCall","src":"9738:16:30"},{"name":"pos","nativeSrc":"9756:3:30","nodeType":"YulIdentifier","src":"9756:3:30"},{"name":"length","nativeSrc":"9761:6:30","nodeType":"YulIdentifier","src":"9761:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9703:34:30","nodeType":"YulIdentifier","src":"9703:34:30"},"nativeSrc":"9703:65:30","nodeType":"YulFunctionCall","src":"9703:65:30"},"nativeSrc":"9703:65:30","nodeType":"YulExpressionStatement","src":"9703:65:30"},{"nativeSrc":"9777:46:30","nodeType":"YulAssignment","src":"9777:46:30","value":{"arguments":[{"name":"pos","nativeSrc":"9788:3:30","nodeType":"YulIdentifier","src":"9788:3:30"},{"arguments":[{"name":"length","nativeSrc":"9815:6:30","nodeType":"YulIdentifier","src":"9815:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9793:21:30","nodeType":"YulIdentifier","src":"9793:21:30"},"nativeSrc":"9793:29:30","nodeType":"YulFunctionCall","src":"9793:29:30"}],"functionName":{"name":"add","nativeSrc":"9784:3:30","nodeType":"YulIdentifier","src":"9784:3:30"},"nativeSrc":"9784:39:30","nodeType":"YulFunctionCall","src":"9784:39:30"},"variableNames":[{"name":"end","nativeSrc":"9777:3:30","nodeType":"YulIdentifier","src":"9777:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9452:377:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9525:5:30","nodeType":"YulTypedName","src":"9525:5:30","type":""},{"name":"pos","nativeSrc":"9532:3:30","nodeType":"YulTypedName","src":"9532:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9540:3:30","nodeType":"YulTypedName","src":"9540:3:30","type":""}],"src":"9452:377:30"},{"body":{"nativeSrc":"9953:195:30","nodeType":"YulBlock","src":"9953:195:30","statements":[{"nativeSrc":"9963:26:30","nodeType":"YulAssignment","src":"9963:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"9975:9:30","nodeType":"YulIdentifier","src":"9975:9:30"},{"kind":"number","nativeSrc":"9986:2:30","nodeType":"YulLiteral","src":"9986:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9971:3:30","nodeType":"YulIdentifier","src":"9971:3:30"},"nativeSrc":"9971:18:30","nodeType":"YulFunctionCall","src":"9971:18:30"},"variableNames":[{"name":"tail","nativeSrc":"9963:4:30","nodeType":"YulIdentifier","src":"9963:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10010:9:30","nodeType":"YulIdentifier","src":"10010:9:30"},{"kind":"number","nativeSrc":"10021:1:30","nodeType":"YulLiteral","src":"10021:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10006:3:30","nodeType":"YulIdentifier","src":"10006:3:30"},"nativeSrc":"10006:17:30","nodeType":"YulFunctionCall","src":"10006:17:30"},{"arguments":[{"name":"tail","nativeSrc":"10029:4:30","nodeType":"YulIdentifier","src":"10029:4:30"},{"name":"headStart","nativeSrc":"10035:9:30","nodeType":"YulIdentifier","src":"10035:9:30"}],"functionName":{"name":"sub","nativeSrc":"10025:3:30","nodeType":"YulIdentifier","src":"10025:3:30"},"nativeSrc":"10025:20:30","nodeType":"YulFunctionCall","src":"10025:20:30"}],"functionName":{"name":"mstore","nativeSrc":"9999:6:30","nodeType":"YulIdentifier","src":"9999:6:30"},"nativeSrc":"9999:47:30","nodeType":"YulFunctionCall","src":"9999:47:30"},"nativeSrc":"9999:47:30","nodeType":"YulExpressionStatement","src":"9999:47:30"},{"nativeSrc":"10055:86:30","nodeType":"YulAssignment","src":"10055:86:30","value":{"arguments":[{"name":"value0","nativeSrc":"10127:6:30","nodeType":"YulIdentifier","src":"10127:6:30"},{"name":"tail","nativeSrc":"10136:4:30","nodeType":"YulIdentifier","src":"10136:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10063:63:30","nodeType":"YulIdentifier","src":"10063:63:30"},"nativeSrc":"10063:78:30","nodeType":"YulFunctionCall","src":"10063:78:30"},"variableNames":[{"name":"tail","nativeSrc":"10055:4:30","nodeType":"YulIdentifier","src":"10055:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9835:313:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9925:9:30","nodeType":"YulTypedName","src":"9925:9:30","type":""},{"name":"value0","nativeSrc":"9937:6:30","nodeType":"YulTypedName","src":"9937:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9948:4:30","nodeType":"YulTypedName","src":"9948:4:30","type":""}],"src":"9835:313:30"},{"body":{"nativeSrc":"10212:40:30","nodeType":"YulBlock","src":"10212:40:30","statements":[{"nativeSrc":"10223:22:30","nodeType":"YulAssignment","src":"10223:22:30","value":{"arguments":[{"name":"value","nativeSrc":"10239:5:30","nodeType":"YulIdentifier","src":"10239:5:30"}],"functionName":{"name":"mload","nativeSrc":"10233:5:30","nodeType":"YulIdentifier","src":"10233:5:30"},"nativeSrc":"10233:12:30","nodeType":"YulFunctionCall","src":"10233:12:30"},"variableNames":[{"name":"length","nativeSrc":"10223:6:30","nodeType":"YulIdentifier","src":"10223:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10154:98:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10195:5:30","nodeType":"YulTypedName","src":"10195:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10205:6:30","nodeType":"YulTypedName","src":"10205:6:30","type":""}],"src":"10154:98:30"},{"body":{"nativeSrc":"10314:60:30","nodeType":"YulBlock","src":"10314:60:30","statements":[{"nativeSrc":"10324:11:30","nodeType":"YulAssignment","src":"10324:11:30","value":{"name":"ptr","nativeSrc":"10332:3:30","nodeType":"YulIdentifier","src":"10332:3:30"},"variableNames":[{"name":"data","nativeSrc":"10324:4:30","nodeType":"YulIdentifier","src":"10324:4:30"}]},{"nativeSrc":"10345:22:30","nodeType":"YulAssignment","src":"10345:22:30","value":{"arguments":[{"name":"ptr","nativeSrc":"10357:3:30","nodeType":"YulIdentifier","src":"10357:3:30"},{"kind":"number","nativeSrc":"10362:4:30","nodeType":"YulLiteral","src":"10362:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10353:3:30","nodeType":"YulIdentifier","src":"10353:3:30"},"nativeSrc":"10353:14:30","nodeType":"YulFunctionCall","src":"10353:14:30"},"variableNames":[{"name":"data","nativeSrc":"10345:4:30","nodeType":"YulIdentifier","src":"10345:4:30"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10258:116:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10301:3:30","nodeType":"YulTypedName","src":"10301:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10309:4:30","nodeType":"YulTypedName","src":"10309:4:30","type":""}],"src":"10258:116:30"},{"body":{"nativeSrc":"10435:99:30","nodeType":"YulBlock","src":"10435:99:30","statements":[{"nativeSrc":"10446:42:30","nodeType":"YulVariableDeclaration","src":"10446:42:30","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"10483:3:30","nodeType":"YulIdentifier","src":"10483:3:30"}],"functionName":{"name":"mload","nativeSrc":"10477:5:30","nodeType":"YulIdentifier","src":"10477:5:30"},"nativeSrc":"10477:10:30","nodeType":"YulFunctionCall","src":"10477:10:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10459:17:30","nodeType":"YulIdentifier","src":"10459:17:30"},"nativeSrc":"10459:29:30","nodeType":"YulFunctionCall","src":"10459:29:30"},"variables":[{"name":"value","nativeSrc":"10450:5:30","nodeType":"YulTypedName","src":"10450:5:30","type":""}]},{"nativeSrc":"10498:29:30","nodeType":"YulAssignment","src":"10498:29:30","value":{"name":"value","nativeSrc":"10522:5:30","nodeType":"YulIdentifier","src":"10522:5:30"},"variableNames":[{"name":"returnValue","nativeSrc":"10498:11:30","nodeType":"YulIdentifier","src":"10498:11:30"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"10380:154:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10415:3:30","nodeType":"YulTypedName","src":"10415:3:30","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"10423:11:30","nodeType":"YulTypedName","src":"10423:11:30","type":""}],"src":"10380:154:30"},{"body":{"nativeSrc":"10630:504:30","nodeType":"YulBlock","src":"10630:504:30","statements":[{"nativeSrc":"10641:52:30","nodeType":"YulVariableDeclaration","src":"10641:52:30","value":{"arguments":[{"name":"array","nativeSrc":"10687:5:30","nodeType":"YulIdentifier","src":"10687:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10655:31:30","nodeType":"YulIdentifier","src":"10655:31:30"},"nativeSrc":"10655:38:30","nodeType":"YulFunctionCall","src":"10655:38:30"},"variables":[{"name":"length","nativeSrc":"10645:6:30","nodeType":"YulTypedName","src":"10645:6:30","type":""}]},{"nativeSrc":"10702:21:30","nodeType":"YulVariableDeclaration","src":"10702:21:30","value":{"name":"array","nativeSrc":"10718:5:30","nodeType":"YulIdentifier","src":"10718:5:30"},"variables":[{"name":"dataArea","nativeSrc":"10706:8:30","nodeType":"YulTypedName","src":"10706:8:30","type":""}]},{"nativeSrc":"10733:52:30","nodeType":"YulAssignment","src":"10733:52:30","value":{"arguments":[{"name":"array","nativeSrc":"10779:5:30","nodeType":"YulIdentifier","src":"10779:5:30"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10745:33:30","nodeType":"YulIdentifier","src":"10745:33:30"},"nativeSrc":"10745:40:30","nodeType":"YulFunctionCall","src":"10745:40:30"},"variableNames":[{"name":"dataArea","nativeSrc":"10733:8:30","nodeType":"YulIdentifier","src":"10733:8:30"}]},{"nativeSrc":"10795:44:30","nodeType":"YulAssignment","src":"10795:44:30","value":{"arguments":[{"name":"dataArea","nativeSrc":"10830:8:30","nodeType":"YulIdentifier","src":"10830:8:30"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"10804:25:30","nodeType":"YulIdentifier","src":"10804:25:30"},"nativeSrc":"10804:35:30","nodeType":"YulFunctionCall","src":"10804:35:30"},"variableNames":[{"name":"value","nativeSrc":"10795:5:30","nodeType":"YulIdentifier","src":"10795:5:30"}]},{"body":{"nativeSrc":"10867:260:30","nodeType":"YulBlock","src":"10867:260:30","statements":[{"nativeSrc":"10881:236:30","nodeType":"YulAssignment","src":"10881:236:30","value":{"arguments":[{"name":"value","nativeSrc":"10911:5:30","nodeType":"YulIdentifier","src":"10911:5:30"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10978:1:30","nodeType":"YulLiteral","src":"10978:1:30","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"10985:2:30","nodeType":"YulLiteral","src":"10985:2:30","type":"","value":"32"},{"name":"length","nativeSrc":"10989:6:30","nodeType":"YulIdentifier","src":"10989:6:30"}],"functionName":{"name":"sub","nativeSrc":"10981:3:30","nodeType":"YulIdentifier","src":"10981:3:30"},"nativeSrc":"10981:15:30","nodeType":"YulFunctionCall","src":"10981:15:30"}],"functionName":{"name":"mul","nativeSrc":"10974:3:30","nodeType":"YulIdentifier","src":"10974:3:30"},"nativeSrc":"10974:23:30","nodeType":"YulFunctionCall","src":"10974:23:30"},{"kind":"number","nativeSrc":"11019:66:30","nodeType":"YulLiteral","src":"11019:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"10934:18:30","nodeType":"YulIdentifier","src":"10934:18:30"},"nativeSrc":"10934:169:30","nodeType":"YulFunctionCall","src":"10934:169:30"}],"functionName":{"name":"and","nativeSrc":"10890:3:30","nodeType":"YulIdentifier","src":"10890:3:30"},"nativeSrc":"10890:227:30","nodeType":"YulFunctionCall","src":"10890:227:30"},"variableNames":[{"name":"value","nativeSrc":"10881:5:30","nodeType":"YulIdentifier","src":"10881:5:30"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10855:6:30","nodeType":"YulIdentifier","src":"10855:6:30"},{"kind":"number","nativeSrc":"10863:2:30","nodeType":"YulLiteral","src":"10863:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10852:2:30","nodeType":"YulIdentifier","src":"10852:2:30"},"nativeSrc":"10852:14:30","nodeType":"YulFunctionCall","src":"10852:14:30"},"nativeSrc":"10849:278:30","nodeType":"YulIf","src":"10849:278:30"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"10540:594:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"10614:5:30","nodeType":"YulTypedName","src":"10614:5:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10624:5:30","nodeType":"YulTypedName","src":"10624:5:30","type":""}],"src":"10540:594:30"},{"body":{"nativeSrc":"11246:72:30","nodeType":"YulBlock","src":"11246:72:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11268:6:30","nodeType":"YulIdentifier","src":"11268:6:30"},{"kind":"number","nativeSrc":"11276:1:30","nodeType":"YulLiteral","src":"11276:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11264:3:30","nodeType":"YulIdentifier","src":"11264:3:30"},"nativeSrc":"11264:14:30","nodeType":"YulFunctionCall","src":"11264:14:30"},{"hexValue":"4172617261436f696e3a2054726164652069732064697361626c6564","kind":"string","nativeSrc":"11280:30:30","nodeType":"YulLiteral","src":"11280:30:30","type":"","value":"AraraCoin: Trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"11257:6:30","nodeType":"YulIdentifier","src":"11257:6:30"},"nativeSrc":"11257:54:30","nodeType":"YulFunctionCall","src":"11257:54:30"},"nativeSrc":"11257:54:30","nodeType":"YulExpressionStatement","src":"11257:54:30"}]},"name":"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","nativeSrc":"11140:178:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11238:6:30","nodeType":"YulTypedName","src":"11238:6:30","type":""}],"src":"11140:178:30"},{"body":{"nativeSrc":"11470:220:30","nodeType":"YulBlock","src":"11470:220:30","statements":[{"nativeSrc":"11480:74:30","nodeType":"YulAssignment","src":"11480:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"11546:3:30","nodeType":"YulIdentifier","src":"11546:3:30"},{"kind":"number","nativeSrc":"11551:2:30","nodeType":"YulLiteral","src":"11551:2:30","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11487:58:30","nodeType":"YulIdentifier","src":"11487:58:30"},"nativeSrc":"11487:67:30","nodeType":"YulFunctionCall","src":"11487:67:30"},"variableNames":[{"name":"pos","nativeSrc":"11480:3:30","nodeType":"YulIdentifier","src":"11480:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11652:3:30","nodeType":"YulIdentifier","src":"11652:3:30"}],"functionName":{"name":"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","nativeSrc":"11563:88:30","nodeType":"YulIdentifier","src":"11563:88:30"},"nativeSrc":"11563:93:30","nodeType":"YulFunctionCall","src":"11563:93:30"},"nativeSrc":"11563:93:30","nodeType":"YulExpressionStatement","src":"11563:93:30"},{"nativeSrc":"11665:19:30","nodeType":"YulAssignment","src":"11665:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"11676:3:30","nodeType":"YulIdentifier","src":"11676:3:30"},{"kind":"number","nativeSrc":"11681:2:30","nodeType":"YulLiteral","src":"11681:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11672:3:30","nodeType":"YulIdentifier","src":"11672:3:30"},"nativeSrc":"11672:12:30","nodeType":"YulFunctionCall","src":"11672:12:30"},"variableNames":[{"name":"end","nativeSrc":"11665:3:30","nodeType":"YulIdentifier","src":"11665:3:30"}]}]},"name":"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack","nativeSrc":"11324:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11458:3:30","nodeType":"YulTypedName","src":"11458:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11466:3:30","nodeType":"YulTypedName","src":"11466:3:30","type":""}],"src":"11324:366:30"},{"body":{"nativeSrc":"11867:248:30","nodeType":"YulBlock","src":"11867:248:30","statements":[{"nativeSrc":"11877:26:30","nodeType":"YulAssignment","src":"11877:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11889:9:30","nodeType":"YulIdentifier","src":"11889:9:30"},{"kind":"number","nativeSrc":"11900:2:30","nodeType":"YulLiteral","src":"11900:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11885:3:30","nodeType":"YulIdentifier","src":"11885:3:30"},"nativeSrc":"11885:18:30","nodeType":"YulFunctionCall","src":"11885:18:30"},"variableNames":[{"name":"tail","nativeSrc":"11877:4:30","nodeType":"YulIdentifier","src":"11877:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11924:9:30","nodeType":"YulIdentifier","src":"11924:9:30"},{"kind":"number","nativeSrc":"11935:1:30","nodeType":"YulLiteral","src":"11935:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11920:3:30","nodeType":"YulIdentifier","src":"11920:3:30"},"nativeSrc":"11920:17:30","nodeType":"YulFunctionCall","src":"11920:17:30"},{"arguments":[{"name":"tail","nativeSrc":"11943:4:30","nodeType":"YulIdentifier","src":"11943:4:30"},{"name":"headStart","nativeSrc":"11949:9:30","nodeType":"YulIdentifier","src":"11949:9:30"}],"functionName":{"name":"sub","nativeSrc":"11939:3:30","nodeType":"YulIdentifier","src":"11939:3:30"},"nativeSrc":"11939:20:30","nodeType":"YulFunctionCall","src":"11939:20:30"}],"functionName":{"name":"mstore","nativeSrc":"11913:6:30","nodeType":"YulIdentifier","src":"11913:6:30"},"nativeSrc":"11913:47:30","nodeType":"YulFunctionCall","src":"11913:47:30"},"nativeSrc":"11913:47:30","nodeType":"YulExpressionStatement","src":"11913:47:30"},{"nativeSrc":"11969:139:30","nodeType":"YulAssignment","src":"11969:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"12103:4:30","nodeType":"YulIdentifier","src":"12103:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack","nativeSrc":"11977:124:30","nodeType":"YulIdentifier","src":"11977:124:30"},"nativeSrc":"11977:131:30","nodeType":"YulFunctionCall","src":"11977:131:30"},"variableNames":[{"name":"tail","nativeSrc":"11969:4:30","nodeType":"YulIdentifier","src":"11969:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11696:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11847:9:30","nodeType":"YulTypedName","src":"11847:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11862:4:30","nodeType":"YulTypedName","src":"11862:4:30","type":""}],"src":"11696:419:30"},{"body":{"nativeSrc":"12166:149:30","nodeType":"YulBlock","src":"12166:149:30","statements":[{"nativeSrc":"12176:25:30","nodeType":"YulAssignment","src":"12176:25:30","value":{"arguments":[{"name":"x","nativeSrc":"12199:1:30","nodeType":"YulIdentifier","src":"12199:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12181:17:30","nodeType":"YulIdentifier","src":"12181:17:30"},"nativeSrc":"12181:20:30","nodeType":"YulFunctionCall","src":"12181:20:30"},"variableNames":[{"name":"x","nativeSrc":"12176:1:30","nodeType":"YulIdentifier","src":"12176:1:30"}]},{"nativeSrc":"12210:25:30","nodeType":"YulAssignment","src":"12210:25:30","value":{"arguments":[{"name":"y","nativeSrc":"12233:1:30","nodeType":"YulIdentifier","src":"12233:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12215:17:30","nodeType":"YulIdentifier","src":"12215:17:30"},"nativeSrc":"12215:20:30","nodeType":"YulFunctionCall","src":"12215:20:30"},"variableNames":[{"name":"y","nativeSrc":"12210:1:30","nodeType":"YulIdentifier","src":"12210:1:30"}]},{"nativeSrc":"12244:17:30","nodeType":"YulAssignment","src":"12244:17:30","value":{"arguments":[{"name":"x","nativeSrc":"12256:1:30","nodeType":"YulIdentifier","src":"12256:1:30"},{"name":"y","nativeSrc":"12259:1:30","nodeType":"YulIdentifier","src":"12259:1:30"}],"functionName":{"name":"sub","nativeSrc":"12252:3:30","nodeType":"YulIdentifier","src":"12252:3:30"},"nativeSrc":"12252:9:30","nodeType":"YulFunctionCall","src":"12252:9:30"},"variableNames":[{"name":"diff","nativeSrc":"12244:4:30","nodeType":"YulIdentifier","src":"12244:4:30"}]},{"body":{"nativeSrc":"12286:22:30","nodeType":"YulBlock","src":"12286:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12288:16:30","nodeType":"YulIdentifier","src":"12288:16:30"},"nativeSrc":"12288:18:30","nodeType":"YulFunctionCall","src":"12288:18:30"},"nativeSrc":"12288:18:30","nodeType":"YulExpressionStatement","src":"12288:18:30"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"12277:4:30","nodeType":"YulIdentifier","src":"12277:4:30"},{"name":"x","nativeSrc":"12283:1:30","nodeType":"YulIdentifier","src":"12283:1:30"}],"functionName":{"name":"gt","nativeSrc":"12274:2:30","nodeType":"YulIdentifier","src":"12274:2:30"},"nativeSrc":"12274:11:30","nodeType":"YulFunctionCall","src":"12274:11:30"},"nativeSrc":"12271:37:30","nodeType":"YulIf","src":"12271:37:30"}]},"name":"checked_sub_t_uint256","nativeSrc":"12121:194:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12152:1:30","nodeType":"YulTypedName","src":"12152:1:30","type":""},{"name":"y","nativeSrc":"12155:1:30","nodeType":"YulTypedName","src":"12155:1:30","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"12161:4:30","nodeType":"YulTypedName","src":"12161:4:30","type":""}],"src":"12121:194:30"},{"body":{"nativeSrc":"12365:147:30","nodeType":"YulBlock","src":"12365:147:30","statements":[{"nativeSrc":"12375:25:30","nodeType":"YulAssignment","src":"12375:25:30","value":{"arguments":[{"name":"x","nativeSrc":"12398:1:30","nodeType":"YulIdentifier","src":"12398:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12380:17:30","nodeType":"YulIdentifier","src":"12380:17:30"},"nativeSrc":"12380:20:30","nodeType":"YulFunctionCall","src":"12380:20:30"},"variableNames":[{"name":"x","nativeSrc":"12375:1:30","nodeType":"YulIdentifier","src":"12375:1:30"}]},{"nativeSrc":"12409:25:30","nodeType":"YulAssignment","src":"12409:25:30","value":{"arguments":[{"name":"y","nativeSrc":"12432:1:30","nodeType":"YulIdentifier","src":"12432:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12414:17:30","nodeType":"YulIdentifier","src":"12414:17:30"},"nativeSrc":"12414:20:30","nodeType":"YulFunctionCall","src":"12414:20:30"},"variableNames":[{"name":"y","nativeSrc":"12409:1:30","nodeType":"YulIdentifier","src":"12409:1:30"}]},{"nativeSrc":"12443:16:30","nodeType":"YulAssignment","src":"12443:16:30","value":{"arguments":[{"name":"x","nativeSrc":"12454:1:30","nodeType":"YulIdentifier","src":"12454:1:30"},{"name":"y","nativeSrc":"12457:1:30","nodeType":"YulIdentifier","src":"12457:1:30"}],"functionName":{"name":"add","nativeSrc":"12450:3:30","nodeType":"YulIdentifier","src":"12450:3:30"},"nativeSrc":"12450:9:30","nodeType":"YulFunctionCall","src":"12450:9:30"},"variableNames":[{"name":"sum","nativeSrc":"12443:3:30","nodeType":"YulIdentifier","src":"12443:3:30"}]},{"body":{"nativeSrc":"12483:22:30","nodeType":"YulBlock","src":"12483:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12485:16:30","nodeType":"YulIdentifier","src":"12485:16:30"},"nativeSrc":"12485:18:30","nodeType":"YulFunctionCall","src":"12485:18:30"},"nativeSrc":"12485:18:30","nodeType":"YulExpressionStatement","src":"12485:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12475:1:30","nodeType":"YulIdentifier","src":"12475:1:30"},{"name":"sum","nativeSrc":"12478:3:30","nodeType":"YulIdentifier","src":"12478:3:30"}],"functionName":{"name":"gt","nativeSrc":"12472:2:30","nodeType":"YulIdentifier","src":"12472:2:30"},"nativeSrc":"12472:10:30","nodeType":"YulFunctionCall","src":"12472:10:30"},"nativeSrc":"12469:36:30","nodeType":"YulIf","src":"12469:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"12321:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12352:1:30","nodeType":"YulTypedName","src":"12352:1:30","type":""},{"name":"y","nativeSrc":"12355:1:30","nodeType":"YulTypedName","src":"12355:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12361:3:30","nodeType":"YulTypedName","src":"12361:3:30","type":""}],"src":"12321:191:30"},{"body":{"nativeSrc":"12672:288:30","nodeType":"YulBlock","src":"12672:288:30","statements":[{"nativeSrc":"12682:26:30","nodeType":"YulAssignment","src":"12682:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"12694:9:30","nodeType":"YulIdentifier","src":"12694:9:30"},{"kind":"number","nativeSrc":"12705:2:30","nodeType":"YulLiteral","src":"12705:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12690:3:30","nodeType":"YulIdentifier","src":"12690:3:30"},"nativeSrc":"12690:18:30","nodeType":"YulFunctionCall","src":"12690:18:30"},"variableNames":[{"name":"tail","nativeSrc":"12682:4:30","nodeType":"YulIdentifier","src":"12682:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12762:6:30","nodeType":"YulIdentifier","src":"12762:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12775:9:30","nodeType":"YulIdentifier","src":"12775:9:30"},{"kind":"number","nativeSrc":"12786:1:30","nodeType":"YulLiteral","src":"12786:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12771:3:30","nodeType":"YulIdentifier","src":"12771:3:30"},"nativeSrc":"12771:17:30","nodeType":"YulFunctionCall","src":"12771:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12718:43:30","nodeType":"YulIdentifier","src":"12718:43:30"},"nativeSrc":"12718:71:30","nodeType":"YulFunctionCall","src":"12718:71:30"},"nativeSrc":"12718:71:30","nodeType":"YulExpressionStatement","src":"12718:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12843:6:30","nodeType":"YulIdentifier","src":"12843:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12856:9:30","nodeType":"YulIdentifier","src":"12856:9:30"},{"kind":"number","nativeSrc":"12867:2:30","nodeType":"YulLiteral","src":"12867:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12852:3:30","nodeType":"YulIdentifier","src":"12852:3:30"},"nativeSrc":"12852:18:30","nodeType":"YulFunctionCall","src":"12852:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12799:43:30","nodeType":"YulIdentifier","src":"12799:43:30"},"nativeSrc":"12799:72:30","nodeType":"YulFunctionCall","src":"12799:72:30"},"nativeSrc":"12799:72:30","nodeType":"YulExpressionStatement","src":"12799:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12925:6:30","nodeType":"YulIdentifier","src":"12925:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12938:9:30","nodeType":"YulIdentifier","src":"12938:9:30"},{"kind":"number","nativeSrc":"12949:2:30","nodeType":"YulLiteral","src":"12949:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12934:3:30","nodeType":"YulIdentifier","src":"12934:3:30"},"nativeSrc":"12934:18:30","nodeType":"YulFunctionCall","src":"12934:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12881:43:30","nodeType":"YulIdentifier","src":"12881:43:30"},"nativeSrc":"12881:72:30","nodeType":"YulFunctionCall","src":"12881:72:30"},"nativeSrc":"12881:72:30","nodeType":"YulExpressionStatement","src":"12881:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12518:442:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12628:9:30","nodeType":"YulTypedName","src":"12628:9:30","type":""},{"name":"value2","nativeSrc":"12640:6:30","nodeType":"YulTypedName","src":"12640:6:30","type":""},{"name":"value1","nativeSrc":"12648:6:30","nodeType":"YulTypedName","src":"12648:6:30","type":""},{"name":"value0","nativeSrc":"12656:6:30","nodeType":"YulTypedName","src":"12656:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12667:4:30","nodeType":"YulTypedName","src":"12667:4:30","type":""}],"src":"12518:442:30"},{"body":{"nativeSrc":"13064:124:30","nodeType":"YulBlock","src":"13064:124:30","statements":[{"nativeSrc":"13074:26:30","nodeType":"YulAssignment","src":"13074:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"13086:9:30","nodeType":"YulIdentifier","src":"13086:9:30"},{"kind":"number","nativeSrc":"13097:2:30","nodeType":"YulLiteral","src":"13097:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13082:3:30","nodeType":"YulIdentifier","src":"13082:3:30"},"nativeSrc":"13082:18:30","nodeType":"YulFunctionCall","src":"13082:18:30"},"variableNames":[{"name":"tail","nativeSrc":"13074:4:30","nodeType":"YulIdentifier","src":"13074:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13154:6:30","nodeType":"YulIdentifier","src":"13154:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"13167:9:30","nodeType":"YulIdentifier","src":"13167:9:30"},{"kind":"number","nativeSrc":"13178:1:30","nodeType":"YulLiteral","src":"13178:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13163:3:30","nodeType":"YulIdentifier","src":"13163:3:30"},"nativeSrc":"13163:17:30","nodeType":"YulFunctionCall","src":"13163:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13110:43:30","nodeType":"YulIdentifier","src":"13110:43:30"},"nativeSrc":"13110:71:30","nodeType":"YulFunctionCall","src":"13110:71:30"},"nativeSrc":"13110:71:30","nodeType":"YulExpressionStatement","src":"13110:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12966:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13036:9:30","nodeType":"YulTypedName","src":"13036:9:30","type":""},{"name":"value0","nativeSrc":"13048:6:30","nodeType":"YulTypedName","src":"13048:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13059:4:30","nodeType":"YulTypedName","src":"13059:4:30","type":""}],"src":"12966:222:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405273bda5747bfd65f08deb54cb465eb87d40e51b197e600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006757600080fd5b50604051620054433803806200544383398181016040528101906200008d919062000f9f565b6040518060400160405280600981526020017f4172617261636f696e0000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f4172617261636f696e00000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4152415241000000000000000000000000000000000000000000000000000000815250816003908162000177919062001260565b50806004908162000189919062001260565b505050620001a26005836200066660201b90919060201c565b6101208181525050620001c06006826200066660201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620001ff620006be60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002d27f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200071b60201b60201c565b50620003197f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0873bcd4042de499d14e55001ccbb24a551f3b9540966200071b60201b60201c565b50620003607f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b087314dc79964da2c08b23698b3d3cc7ca32193d99556200071b60201b60201c565b506000600f81905550620003806000600b6200081f60201b90919060201c565b506200039782600b6200081f60201b90919060201c565b50620003b7336c01431e0fae6d7217caa00000006200085760201b60201c565b620003ea337323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f6b09b18ab5df7180b6b8000000620008e460201b60201c565b6200041d3373a0ee7a142d267c1f36714e4a8f75612f20a797206b0409f9cbc7c4a04c22000000620008e460201b60201c565b62000450337370997970c51812dc3a010c7d01b50e0d17dc79c86b026c62ad77dc602dae000000620008e460201b60201c565b620004a033733c44cdddb6a900fa2b585dd299e03d12fa4293bc6064600a6c01431e0fae6d7217caa000000062000488919062001376565b620004949190620013f0565b620008e460201b60201c565b620004f0337390f79bf6eb2c4f870365e785982e1f101e93b906606460146c01431e0fae6d7217caa0000000620004d8919062001376565b620004e49190620013f0565b620008e460201b60201c565b62000523337315d34aaf54267db7d7c367839aaf71a00a2c6a656b1431e0fae6d7217caa000000620008e460201b60201c565b62000556337371be63f3384f5fb98995898a86b02fb2426c57886b1431e0fae6d7217caa000000620008e460201b60201c565b620005893373fabb0ac9d68b0b445fb7357272ff202c5651694a6b2863c1f5cdae42f954000000620008e460201b60201c565b620005bc3373df3e18d64bc6a983f673ab319ccae4f1a57c70976b1f04ef12cb04cf1580000000620008e460201b60201c565b620005ef33731cbd3b2770909d4e10f157cabc84c7264073c9ec6b121836204bc2ce21e0000000620008e460201b60201c565b6200062233739965507d1a55bcc2695c58ba16fb37d819b0a4dc6b0f8277896582678ac0000000620008e460201b60201c565b6200065e3382606460146c01431e0fae6d7217caa000000062000646919062001376565b620006529190620013f0565b620008e460201b60201c565b505062001776565b60006020835110156200068c576200068483620009e660201b60201c565b9050620006b8565b826200069e8362000a5360201b60201c565b6000019081620006af919062001260565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200070095949392919062001465565b60405160208183030381529060405280519060200120905090565b60006200072f838362000a5d60201b60201c565b620008145760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620007b062000ac860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000819565b600090505b92915050565b60006200084f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b62000ad060201b60201c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620008cc5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620008c39190620014c2565b60405180910390fd5b620008e06000838362000b4a60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620009595760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401620009509190620014c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620009ce5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620009c59190620014c2565b60405180910390fd5b620009e183838362000b4a60201b60201c565b505050565b600080829050601f8151111562000a3657826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000a2d91906200156e565b60405180910390fd5b80518162000a4490620015c4565b60001c1760001b915050919050565b6000819050919050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600062000ae4838362000c3b60201b60201c565b62000b3f57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000b44565b600090505b92915050565b600a60149054906101000a900460ff1662000bb85762000b7583600b62000c5e60201b90919060201c565b62000bb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000bae9062001684565b60405180910390fd5b5b600062000bcd84848462000c9660201b60201c565b90506000818362000bdf9190620016a6565b9050600082111562000c215762000c2085600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168462000d0560201b60201c565b5b62000c3485858362000d0560201b60201c565b5050505050565b600080836001016000848152602001908152602001600020541415905092915050565b600062000c8e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b62000c3b60201b60201c565b905092915050565b600062000cae84600d62000c5e60201b90919060201c565b8062000ccc575062000ccb83600d62000c5e60201b90919060201c565b5b1562000cdc576000905062000cfe565b612710600f548362000cef919062001376565b62000cfb9190620013f0565b90505b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000d5b57806002600082825462000d4e9190620016e1565b9250508190555062000e31565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000dea578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040162000de1939291906200171c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000e7c578060026000828254039250508190555062000ec9565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000f28919062001759565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000f678262000f3a565b9050919050565b62000f798162000f5a565b811462000f8557600080fd5b50565b60008151905062000f998162000f6e565b92915050565b6000806040838503121562000fb95762000fb862000f35565b5b600062000fc98582860162000f88565b925050602062000fdc8582860162000f88565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200106857607f821691505b6020821081036200107e576200107d62001020565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620010e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620010a9565b620010f48683620010a9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620011416200113b62001135846200110c565b62001116565b6200110c565b9050919050565b6000819050919050565b6200115d8362001120565b620011756200116c8262001148565b848454620010b6565b825550505050565b600090565b6200118c6200117d565b6200119981848462001152565b505050565b5b81811015620011c157620011b560008262001182565b6001810190506200119f565b5050565b601f8211156200121057620011da8162001084565b620011e58462001099565b81016020851015620011f5578190505b6200120d620012048562001099565b8301826200119e565b50505b505050565b600082821c905092915050565b6000620012356000198460080262001215565b1980831691505092915050565b600062001250838362001222565b9150826002028217905092915050565b6200126b8262000fe6565b67ffffffffffffffff81111562001287576200128662000ff1565b5b6200129382546200104f565b620012a0828285620011c5565b600060209050601f831160018114620012d85760008415620012c3578287015190505b620012cf858262001242565b8655506200133f565b601f198416620012e88662001084565b60005b828110156200131257848901518255600182019150602085019450602081019050620012eb565b868310156200133257848901516200132e601f89168262001222565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001383826200110c565b915062001390836200110c565b9250828202620013a0816200110c565b91508282048414831517620013ba57620013b962001347565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620013fd826200110c565b91506200140a836200110c565b9250826200141d576200141c620013c1565b5b828204905092915050565b6000819050919050565b6200143d8162001428565b82525050565b6200144e816200110c565b82525050565b6200145f8162000f5a565b82525050565b600060a0820190506200147c600083018862001432565b6200148b602083018762001432565b6200149a604083018662001432565b620014a9606083018562001443565b620014b8608083018462001454565b9695505050505050565b6000602082019050620014d9600083018462001454565b92915050565b600082825260208201905092915050565b60005b8381101562001510578082015181840152602081019050620014f3565b60008484015250505050565b6000601f19601f8301169050919050565b60006200153a8262000fe6565b620015468185620014df565b935062001558818560208601620014f0565b62001563816200151c565b840191505092915050565b600060208201905081810360008301526200158a81846200152d565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000620015bb825162001428565b80915050919050565b6000620015d18262001592565b82620015dd846200159d565b9050620015ea81620015ad565b925060208210156200162d57620016287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620010a9565b831692505b5050919050565b7f4172617261436f696e3a2054726164652069732064697361626c656400000000600082015250565b60006200166c601c83620014df565b9150620016798262001634565b602082019050919050565b600060208201905081810360008301526200169f816200165d565b9050919050565b6000620016b3826200110c565b9150620016c0836200110c565b9250828203905081811115620016db57620016da62001347565b5b92915050565b6000620016ee826200110c565b9150620016fb836200110c565b925082820190508082111562001716576200171562001347565b5b92915050565b600060608201905062001733600083018662001454565b62001742602083018562001443565b62001751604083018462001443565b949350505050565b600060208201905062001770600083018462001443565b92915050565b60805160a05160c05160e051610100516101205161014051613c72620017d16000396000611b5701526000611b1c0152600061207c0152600061205b015260006117a3015260006117f9015260006118220152613c726000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a9059cbb116100a2578063d547741f11610071578063d547741f14610586578063dd62ed3e146105a2578063ea414b28146105d2578063ec87621c146105ee576101e5565b8063a9059cbb14610500578063ae7b6d1614610530578063ca40f1c41461054e578063d505accf1461056a576101e5565b80638a8c523c116100de5780638a8c523c1461048a57806391d148541461049457806395d89b41146104c4578063a217fddf146104e2576101e5565b806370a08231146103ea5780637ac931191461041a5780637ecebe001461043657806384b0196e14610466576101e5565b80632dc0562d1161018757806336568abe1161015657806336568abe146103785780634ada218b14610394578063699abb3c146103b2578063705931fa146103ce576101e5565b80632dc0562d146103025780632f2ff15d14610320578063313ce5671461033c5780633644e5151461035a576101e5565b80630ed9cc4c116101c35780630ed9cc4c1461026857806318160ddd1461028457806323b872dd146102a2578063248a9ca3146102d2576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063095ea7b314610238575b600080fd5b61020460048036038101906101ff9190612a10565b61060c565b6040516102119190612a58565b60405180910390f35b610222610686565b60405161022f9190612b03565b60405180910390f35b610252600480360381019061024d9190612bb9565b610718565b60405161025f9190612a58565b60405180910390f35b610282600480360381019061027d9190612bf9565b61073b565b005b61028c61080b565b6040516102999190612c35565b60405180910390f35b6102bc60048036038101906102b79190612c50565b610815565b6040516102c99190612a58565b60405180910390f35b6102ec60048036038101906102e79190612cd9565b610844565b6040516102f99190612d15565b60405180910390f35b61030a610864565b6040516103179190612d3f565b60405180910390f35b61033a60048036038101906103359190612d5a565b61088a565b005b6103446108ac565b6040516103519190612db6565b60405180910390f35b6103626108b5565b60405161036f9190612d15565b60405180910390f35b610392600480360381019061038d9190612d5a565b6108c4565b005b61039c61093f565b6040516103a99190612a58565b60405180910390f35b6103cc60048036038101906103c79190612dd1565b610952565b005b6103e860048036038101906103e39190612bf9565b610ab1565b005b61040460048036038101906103ff9190612bf9565b610b81565b6040516104119190612c35565b60405180910390f35b610434600480360381019061042f9190612e63565b610bc9565b005b610450600480360381019061044b9190612bf9565b610ce6565b60405161045d9190612c35565b60405180910390f35b61046e610cf8565b6040516104819796959493929190612fa9565b60405180910390f35b610492610da2565b005b6104ae60048036038101906104a99190612d5a565b610eb8565b6040516104bb9190612a58565b60405180910390f35b6104cc610f23565b6040516104d99190612b03565b60405180910390f35b6104ea610fb5565b6040516104f79190612d15565b60405180910390f35b61051a60048036038101906105159190612bb9565b610fbc565b6040516105279190612a58565b60405180910390f35b610538610fdf565b6040516105459190612c35565b60405180910390f35b61056860048036038101906105639190612e63565b610fe5565b005b610584600480360381019061057f9190613059565b611102565b005b6105a0600480360381019061059b9190612d5a565b61124a565b005b6105bc60048036038101906105b791906130fb565b61126c565b6040516105c99190612c35565b60405180910390f35b6105ec60048036038101906105e79190612bf9565b6112f3565b005b6105f6611439565b6040516106039190612d15565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061067f575061067e8261145d565b5b9050919050565b6060600380546106959061316a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c19061316a565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b5050505050905090565b6000806107236114c7565b90506107308185856114cf565b600191505092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610765816114e1565b61077982600d6114f590919063ffffffff16565b6107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af9061320d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516107ff9190612a58565b60405180910390a25050565b6000600254905090565b6000806108206114c7565b905061082d858285611525565b6108388585856115b9565b60019150509392505050565b600060086000838152602001908152602001600020600101549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61089382610844565b61089c816114e1565b6108a683836116ad565b50505050565b60006012905090565b60006108bf61179f565b905090565b6108cc6114c7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610930576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093a8282611856565b505050565b600a60149054906101000a900460ff1681565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861097c816114e1565b6000821015801561098e575060648211155b6109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c4906132c5565b60405180910390fd5b81600f5403610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a089061337d565b60405180910390fd5b600082604051602001610a249190613415565b604051602081830303815290604052805190602001209050610a4581611949565b6003601060008381526020019081526020016000206000015410610aac576000600f54905083600f819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a58185604051610aa292919061343b565b60405180910390a1505b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610adb816114e1565b610aef82600d611a9a90919063ffffffff16565b610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b25906134d6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d6001604051610b759190612a58565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610bf3816114e1565b600a60149054906101000a900460ff1615610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90613568565b60405180910390fd5b60008383905003610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c80906135fa565b60405180910390fd5b60005b83839050811015610ce057610cd2848483818110610cad57610cac61361a565b5b9050602002016020810190610cc29190612bf9565b600b6114f590919063ffffffff16565b508080600101915050610c8c565b50505050565b6000610cf182611aca565b9050919050565b600060608060008060006060610d0c611b13565b610d14611b4e565b46306000801b600067ffffffffffffffff811115610d3557610d34613649565b5b604051908082528060200260200182016040528015610d635781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610dcc816114e1565b600a60149054906101000a900460ff1615610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e13906136ea565b60405180910390fd5b6000604051602001610e2d90613756565b604051602081830303815290604052805190602001209050610e4e81611949565b6003601060008381526020019081526020016000206000015410610eb4576001600a60146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a15b5050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610f329061316a565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5e9061316a565b8015610fab5780601f10610f8057610100808354040283529160200191610fab565b820191906000526020600020905b815481529060010190602001808311610f8e57829003601f168201915b5050505050905090565b6000801b81565b600080610fc76114c7565b9050610fd48185856115b9565b600191505092915050565b600f5481565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861100f816114e1565b600a60149054906101000a900460ff161561105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690613568565b60405180910390fd5b600083839050036110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c906135fa565b60405180910390fd5b60005b838390508110156110fc576110ee8484838181106110c9576110c861361a565b5b90506020020160208101906110de9190612bf9565b600b611a9a90919063ffffffff16565b5080806001019150506110a8565b50505050565b8342111561114757836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161113e9190612c35565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886111768c611b89565b8960405160200161118c9695949392919061376b565b60405160208183030381529060405280519060200120905060006111af82611be0565b905060006111bf82878787611bfa565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461123357808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161122a9291906137cc565b60405180910390fd5b61123e8a8a8a6114cf565b50505050505050505050565b61125382610844565b61125c816114e1565b6112668383611856565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861131d816114e1565b6000826040516020016113309190613889565b60405160208183030381529060405280519060200120905061135181611949565b6003601060008381526020019081526020016000206000015410611434576000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0a3568000da48cc6e5e2c8e7a94d1bfa3607d1734c7dbd7b04ac9d77316b471a81600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161142a9291906137cc565b60405180910390a1505b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6114dc8383836001611c2a565b505050565b6114f2816114ed6114c7565b611e01565b50565b600061151d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e52565b905092915050565b6000611531848461126c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115b357818110156115a3578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161159a939291906138af565b60405180910390fd5b6115b284848484036000611c2a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361162b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116229190612d3f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361169d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116949190612d3f565b60405180910390fd5b6116a8838383611f66565b505050565b60006116b98383610eb8565b6117945760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506117316114c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611799565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561181b57507f000000000000000000000000000000000000000000000000000000000000000046145b15611848577f00000000000000000000000000000000000000000000000000000000000000009050611853565b611850612036565b90505b90565b60006118628383610eb8565b1561193e5760006008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118db6114c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611943565b600090505b92915050565b611952816120cc565b6010600082815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156119f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ea90613958565b60405180910390fd5b600060106000838152602001908152602001600020905060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001816000016000828254611a7991906139a7565b92505081905550610e1042611a8e91906139a7565b81600101819055505050565b6000611ac2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612255565b905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060611b4960057f00000000000000000000000000000000000000000000000000000000000000006122c590919063ffffffff16565b905090565b6060611b8460067f00000000000000000000000000000000000000000000000000000000000000006122c590919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000611bf3611bed61179f565b83612375565b9050919050565b600080600080611c0c888888886123b6565b925092509250611c1c82826124aa565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c9c5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c939190612d3f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d0e5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d059190612d3f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611dfb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611df29190612c35565b60405180910390a35b50505050565b611e0b8282610eb8565b611e4e5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611e459291906139db565b60405180910390fd5b5050565b60008083600101600084815260200190815260200160002054905060008114611f5a576000600182611e849190613a04565b9050600060018660000180549050611e9c9190613a04565b9050808214611f0b576000866000018281548110611ebd57611ebc61361a565b5b9060005260206000200154905080876000018481548110611ee157611ee061361a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611f1f57611f1e613a38565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611f60565b60009150505b92915050565b600a60149054906101000a900460ff16611fce57611f8e83600b61260e90919063ffffffff16565b611fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc490613ab3565b60405180910390fd5b5b6000611fdb84848461263e565b905060008183611feb9190613a04565b905060008211156120245761202385600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846126a2565b5b61202f8585836126a2565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016120b1959493929190613ad3565b60405160208183030381529060405280519060200120905090565b6000601060008381526020019081526020016000209050600081600101541180156120fa5750806001015442115b15612251576000816000018190555060008160010181905550806002016000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905580600201600073bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558060020160007314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b5050565b600061226183836128c7565b6122ba5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506122bf565b600090505b92915050565b606060ff60001b83146122e2576122db836128ea565b905061236f565b8180546122ee9061316a565b80601f016020809104026020016040519081016040528092919081815260200182805461231a9061316a565b80156123675780601f1061233c57610100808354040283529160200191612367565b820191906000526020600020905b81548152906001019060200180831161234a57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156123f65760006003859250925092506124a0565b60006001888888886040516000815260200160405260405161241b9493929190613b26565b6020604051602081039080840390855afa15801561243d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361249157600060016000801b935093509350506124a0565b8060008060001b935093509350505b9450945094915050565b600060038111156124be576124bd613b6b565b5b8260038111156124d1576124d0613b6b565b5b031561260a57600160038111156124eb576124ea613b6b565b5b8260038111156124fe576124fd613b6b565b5b03612535576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561254957612548613b6b565b5b82600381111561255c5761255b613b6b565b5b036125a1578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016125989190612c35565b60405180910390fd5b6003808111156125b4576125b3613b6b565b5b8260038111156125c7576125c6613b6b565b5b0361260957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016126009190612d15565b60405180910390fd5b5b5050565b6000612636836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6128c7565b905092915050565b600061265484600d61260e90919063ffffffff16565b8061266f575061266e83600d61260e90919063ffffffff16565b5b1561267d576000905061269b565b612710600f548361268e9190613b9a565b6126989190613c0b565b90505b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126f45780600260008282546126e891906139a7565b925050819055506127c7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612780578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612777939291906138af565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612810578060026000828254039250508190555061285d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128ba9190612c35565b60405180910390a3505050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006128f78361295e565b90506000602067ffffffffffffffff81111561291657612915613649565b5b6040519080825280601f01601f1916602001820160405280156129485781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156129a5576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6129ed816129b8565b81146129f857600080fd5b50565b600081359050612a0a816129e4565b92915050565b600060208284031215612a2657612a256129ae565b5b6000612a34848285016129fb565b91505092915050565b60008115159050919050565b612a5281612a3d565b82525050565b6000602082019050612a6d6000830184612a49565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612aad578082015181840152602081019050612a92565b60008484015250505050565b6000601f19601f8301169050919050565b6000612ad582612a73565b612adf8185612a7e565b9350612aef818560208601612a8f565b612af881612ab9565b840191505092915050565b60006020820190508181036000830152612b1d8184612aca565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b5082612b25565b9050919050565b612b6081612b45565b8114612b6b57600080fd5b50565b600081359050612b7d81612b57565b92915050565b6000819050919050565b612b9681612b83565b8114612ba157600080fd5b50565b600081359050612bb381612b8d565b92915050565b60008060408385031215612bd057612bcf6129ae565b5b6000612bde85828601612b6e565b9250506020612bef85828601612ba4565b9150509250929050565b600060208284031215612c0f57612c0e6129ae565b5b6000612c1d84828501612b6e565b91505092915050565b612c2f81612b83565b82525050565b6000602082019050612c4a6000830184612c26565b92915050565b600080600060608486031215612c6957612c686129ae565b5b6000612c7786828701612b6e565b9350506020612c8886828701612b6e565b9250506040612c9986828701612ba4565b9150509250925092565b6000819050919050565b612cb681612ca3565b8114612cc157600080fd5b50565b600081359050612cd381612cad565b92915050565b600060208284031215612cef57612cee6129ae565b5b6000612cfd84828501612cc4565b91505092915050565b612d0f81612ca3565b82525050565b6000602082019050612d2a6000830184612d06565b92915050565b612d3981612b45565b82525050565b6000602082019050612d546000830184612d30565b92915050565b60008060408385031215612d7157612d706129ae565b5b6000612d7f85828601612cc4565b9250506020612d9085828601612b6e565b9150509250929050565b600060ff82169050919050565b612db081612d9a565b82525050565b6000602082019050612dcb6000830184612da7565b92915050565b600060208284031215612de757612de66129ae565b5b6000612df584828501612ba4565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612e2357612e22612dfe565b5b8235905067ffffffffffffffff811115612e4057612e3f612e03565b5b602083019150836020820283011115612e5c57612e5b612e08565b5b9250929050565b60008060208385031215612e7a57612e796129ae565b5b600083013567ffffffffffffffff811115612e9857612e976129b3565b5b612ea485828601612e0d565b92509250509250929050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612ee581612eb0565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612f2081612b83565b82525050565b6000612f328383612f17565b60208301905092915050565b6000602082019050919050565b6000612f5682612eeb565b612f608185612ef6565b9350612f6b83612f07565b8060005b83811015612f9c578151612f838882612f26565b9750612f8e83612f3e565b925050600181019050612f6f565b5085935050505092915050565b600060e082019050612fbe600083018a612edc565b8181036020830152612fd08189612aca565b90508181036040830152612fe48188612aca565b9050612ff36060830187612c26565b6130006080830186612d30565b61300d60a0830185612d06565b81810360c083015261301f8184612f4b565b905098975050505050505050565b61303681612d9a565b811461304157600080fd5b50565b6000813590506130538161302d565b92915050565b600080600080600080600060e0888a031215613078576130776129ae565b5b60006130868a828b01612b6e565b97505060206130978a828b01612b6e565b96505060406130a88a828b01612ba4565b95505060606130b98a828b01612ba4565b94505060806130ca8a828b01613044565b93505060a06130db8a828b01612cc4565b92505060c06130ec8a828b01612cc4565b91505092959891949750929550565b60008060408385031215613112576131116129ae565b5b600061312085828601612b6e565b925050602061313185828601612b6e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061318257607f821691505b6020821081036131955761319461313b565b5b50919050565b7f4172617261436f696e3a2041646472657373206e6f7420666f756e6420696e2060008201527f746865206578656d7074696f6e73000000000000000000000000000000000000602082015250565b60006131f7602e83612a7e565b91506132028261319b565b604082019050919050565b60006020820190508181036000830152613226816131ea565b9050919050565b7f4172617261436f696e3a205461782070657263656e74616765206d757374206260008201527f65206265747765656e203020616e642031303020626173697320706f696e747360208201527f20286d6178203125292e00000000000000000000000000000000000000000000604082015250565b60006132af604a83612a7e565b91506132ba8261322d565b606082019050919050565b600060208201905081810360008301526132de816132a2565b9050919050565b7f4172617261436f696e3a204e6577207461782070657263656e74616765206d7560008201527f737420626520646966666572656e742066726f6d207468652063757272656e7460208201527f2076616c75652e00000000000000000000000000000000000000000000000000604082015250565b6000613367604783612a7e565b9150613372826132e5565b606082019050919050565b600060208201905081810360008301526133968161335a565b9050919050565b600081905092915050565b7f4e65775461780000000000000000000000000000000000000000000000000000600082015250565b60006133de60068361339d565b91506133e9826133a8565b600682019050919050565b6000819050919050565b61340f61340a82612b83565b6133f4565b82525050565b6000613420826133d1565b915061342c82846133fe565b60208201915081905092915050565b60006040820190506134506000830185612c26565b61345d6020830184612c26565b9392505050565b7f4172617261436f696e3a204164647265737320616c726561647920657869737460008201527f7320696e20746865206578656d7074696f6e7300000000000000000000000000602082015250565b60006134c0603383612a7e565b91506134cb82613464565b604082019050919050565b600060208201905081810360008301526134ef816134b3565b9050919050565b7f4172617261436f696e3a2054726164696e6720616c726561647920656e61626c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000613552602283612a7e565b915061355d826134f6565b604082019050919050565b6000602082019050818103600083015261358181613545565b9050919050565b7f4172617261436f696e3a204c697374206f6620616c6c6f77656420616464726560008201527f737365732063616e6e6f7420626520656d7074792e0000000000000000000000602082015250565b60006135e4603583612a7e565b91506135ef82613588565b604082019050919050565b60006020820190508181036000830152613613816135d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4172617261436f696e3a2074726164696e6720616c726561647920656e61626c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006136d4602283612a7e565b91506136df82613678565b604082019050919050565b60006020820190508181036000830152613703816136c7565b9050919050565b7f456e61626c6554726164696e6700000000000000000000000000000000000000600082015250565b6000613740600d8361339d565b915061374b8261370a565b600d82019050919050565b600061376182613733565b9150819050919050565b600060c0820190506137806000830189612d06565b61378d6020830188612d30565b61379a6040830187612d30565b6137a76060830186612c26565b6137b46080830185612c26565b6137c160a0830184612c26565b979650505050505050565b60006040820190506137e16000830185612d30565b6137ee6020830184612d30565b9392505050565b7f54617857616c6c65740000000000000000000000000000000000000000000000600082015250565b600061382b60098361339d565b9150613836826137f5565b600982019050919050565b60008160601b9050919050565b600061385982613841565b9050919050565b600061386b8261384e565b9050919050565b61388361387e82612b45565b613860565b82525050565b60006138948261381e565b91506138a08284613872565b60148201915081905092915050565b60006060820190506138c46000830186612d30565b6138d16020830185612c26565b6138de6040830184612c26565b949350505050565b7f4172617261436f696e3a20596f75206861766520616c7265616479206170707260008201527f6f7665642074686973207472616e73616374696f6e2e00000000000000000000602082015250565b6000613942603683612a7e565b915061394d826138e6565b604082019050919050565b6000602082019050818103600083015261397181613935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006139b282612b83565b91506139bd83612b83565b92508282019050808211156139d5576139d4613978565b5b92915050565b60006040820190506139f06000830185612d30565b6139fd6020830184612d06565b9392505050565b6000613a0f82612b83565b9150613a1a83612b83565b9250828203905081811115613a3257613a31613978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4172617261436f696e3a2054726164652069732064697361626c656400000000600082015250565b6000613a9d601c83612a7e565b9150613aa882613a67565b602082019050919050565b60006020820190508181036000830152613acc81613a90565b9050919050565b600060a082019050613ae86000830188612d06565b613af56020830187612d06565b613b026040830186612d06565b613b0f6060830185612c26565b613b1c6080830184612d30565b9695505050505050565b6000608082019050613b3b6000830187612d06565b613b486020830186612da7565b613b556040830185612d06565b613b626060830184612d06565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000613ba582612b83565b9150613bb083612b83565b9250828202613bbe81612b83565b91508282048414831517613bd557613bd4613978565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c1682612b83565b9150613c2183612b83565b925082613c3157613c30613bdc565b5b82820490509291505056fea26469706673582212208c443577574bdf96ba96c71e9ec504b3819cf3052fbbe04dd667128fe9738cdf64736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH20 0xBDA5747BFD65F08DEB54CB465EB87D40E51B197E PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5443 CODESIZE SUB DUP1 PUSH3 0x5443 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x8D SWAP2 SWAP1 PUSH3 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261636F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261636F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4152415241000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x177 SWAP2 SWAP1 PUSH3 0x1260 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x1260 JUMP JUMPDEST POP POP POP PUSH3 0x1A2 PUSH1 0x5 DUP4 PUSH3 0x666 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1C0 PUSH1 0x6 DUP3 PUSH3 0x666 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1FF PUSH3 0x6BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x2D2 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x71B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x319 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH20 0xBCD4042DE499D14E55001CCBB24A551F3B954096 PUSH3 0x71B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x360 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH20 0x14DC79964DA2C08B23698B3D3CC7CA32193D9955 PUSH3 0x71B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH3 0x380 PUSH1 0x0 PUSH1 0xB PUSH3 0x81F PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x397 DUP3 PUSH1 0xB PUSH3 0x81F PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3B7 CALLER PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x857 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3EA CALLER PUSH20 0x23618E81E3F5CDF7F54C3D65F7FBC0ABF5B21E8F PUSH12 0x9B18AB5DF7180B6B8000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x41D CALLER PUSH20 0xA0EE7A142D267C1F36714E4A8F75612F20A79720 PUSH12 0x409F9CBC7C4A04C22000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x450 CALLER PUSH20 0x70997970C51812DC3A010C7D01B50E0D17DC79C8 PUSH12 0x26C62AD77DC602DAE000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4A0 CALLER PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH1 0x64 PUSH1 0xA PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x488 SWAP2 SWAP1 PUSH3 0x1376 JUMP JUMPDEST PUSH3 0x494 SWAP2 SWAP1 PUSH3 0x13F0 JUMP JUMPDEST PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4F0 CALLER PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x4D8 SWAP2 SWAP1 PUSH3 0x1376 JUMP JUMPDEST PUSH3 0x4E4 SWAP2 SWAP1 PUSH3 0x13F0 JUMP JUMPDEST PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x523 CALLER PUSH20 0x15D34AAF54267DB7D7C367839AAF71A00A2C6A65 PUSH12 0x1431E0FAE6D7217CAA000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x556 CALLER PUSH20 0x71BE63F3384F5FB98995898A86B02FB2426C5788 PUSH12 0x1431E0FAE6D7217CAA000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x589 CALLER PUSH20 0xFABB0AC9D68B0B445FB7357272FF202C5651694A PUSH12 0x2863C1F5CDAE42F954000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x5BC CALLER PUSH20 0xDF3E18D64BC6A983F673AB319CCAE4F1A57C7097 PUSH12 0x1F04EF12CB04CF1580000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x5EF CALLER PUSH20 0x1CBD3B2770909D4E10F157CABC84C7264073C9EC PUSH12 0x121836204BC2CE21E0000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x622 CALLER PUSH20 0x9965507D1A55BCC2695C58BA16FB37D819B0A4DC PUSH12 0xF8277896582678AC0000000 PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x65E CALLER DUP3 PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x646 SWAP2 SWAP1 PUSH3 0x1376 JUMP JUMPDEST PUSH3 0x652 SWAP2 SWAP1 PUSH3 0x13F0 JUMP JUMPDEST PUSH3 0x8E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x1776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x68C JUMPI PUSH3 0x684 DUP4 PUSH3 0x9E6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x6B8 JUMP JUMPDEST DUP3 PUSH3 0x69E DUP4 PUSH3 0xA53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x6AF SWAP2 SWAP1 PUSH3 0x1260 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x700 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x72F DUP4 DUP4 PUSH3 0xA5D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x814 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x7B0 PUSH3 0xAC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x819 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x84F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0xAD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x8CC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8C3 SWAP2 SWAP1 PUSH3 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x8E0 PUSH1 0x0 DUP4 DUP4 PUSH3 0xB4A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x959 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x950 SWAP2 SWAP1 PUSH3 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9CE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9C5 SWAP2 SWAP1 PUSH3 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x9E1 DUP4 DUP4 DUP4 PUSH3 0xB4A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0xA36 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA2D SWAP2 SWAP1 PUSH3 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0xA44 SWAP1 PUSH3 0x15C4 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAE4 DUP4 DUP4 PUSH3 0xC3B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB3F JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0xB44 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xBB8 JUMPI PUSH3 0xB75 DUP4 PUSH1 0xB PUSH3 0xC5E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBAE SWAP1 PUSH3 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xBCD DUP5 DUP5 DUP5 PUSH3 0xC96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH3 0xBDF SWAP2 SWAP1 PUSH3 0x16A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH3 0xC21 JUMPI PUSH3 0xC20 DUP6 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH3 0xD05 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH3 0xC34 DUP6 DUP6 DUP4 PUSH3 0xD05 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC8E DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0xC3B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCAE DUP5 PUSH1 0xD PUSH3 0xC5E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH3 0xCCC JUMPI POP PUSH3 0xCCB DUP4 PUSH1 0xD PUSH3 0xC5E PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST ISZERO PUSH3 0xCDC JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xCFE JUMP JUMPDEST PUSH2 0x2710 PUSH1 0xF SLOAD DUP4 PUSH3 0xCEF SWAP2 SWAP1 PUSH3 0x1376 JUMP JUMPDEST PUSH3 0xCFB SWAP2 SWAP1 PUSH3 0x13F0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD5B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xD4E SWAP2 SWAP1 PUSH3 0x16E1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xE31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0xDEA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDE1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xE7C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xEC9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xF28 SWAP2 SWAP1 PUSH3 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF67 DUP3 PUSH3 0xF3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF79 DUP2 PUSH3 0xF5A JUMP JUMPDEST DUP2 EQ PUSH3 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF99 DUP2 PUSH3 0xF6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xFB9 JUMPI PUSH3 0xFB8 PUSH3 0xF35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xFC9 DUP6 DUP3 DUP7 ADD PUSH3 0xF88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xFDC DUP6 DUP3 DUP7 ADD PUSH3 0xF88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1068 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x107E JUMPI PUSH3 0x107D PUSH3 0x1020 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x10E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x10A9 JUMP JUMPDEST PUSH3 0x10F4 DUP7 DUP4 PUSH3 0x10A9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1141 PUSH3 0x113B PUSH3 0x1135 DUP5 PUSH3 0x110C JUMP JUMPDEST PUSH3 0x1116 JUMP JUMPDEST PUSH3 0x110C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x115D DUP4 PUSH3 0x1120 JUMP JUMPDEST PUSH3 0x1175 PUSH3 0x116C DUP3 PUSH3 0x1148 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x10B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x118C PUSH3 0x117D JUMP JUMPDEST PUSH3 0x1199 DUP2 DUP5 DUP5 PUSH3 0x1152 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x11C1 JUMPI PUSH3 0x11B5 PUSH1 0x0 DUP3 PUSH3 0x1182 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x119F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1210 JUMPI PUSH3 0x11DA DUP2 PUSH3 0x1084 JUMP JUMPDEST PUSH3 0x11E5 DUP5 PUSH3 0x1099 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x11F5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x120D PUSH3 0x1204 DUP6 PUSH3 0x1099 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x119E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1235 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x1215 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1250 DUP4 DUP4 PUSH3 0x1222 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x126B DUP3 PUSH3 0xFE6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1287 JUMPI PUSH3 0x1286 PUSH3 0xFF1 JUMP JUMPDEST JUMPDEST PUSH3 0x1293 DUP3 SLOAD PUSH3 0x104F JUMP JUMPDEST PUSH3 0x12A0 DUP3 DUP3 DUP6 PUSH3 0x11C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x12D8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x12C3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x12CF DUP6 DUP3 PUSH3 0x1242 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x133F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x12E8 DUP7 PUSH3 0x1084 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1312 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x12EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1332 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x132E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1222 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1383 DUP3 PUSH3 0x110C JUMP JUMPDEST SWAP2 POP PUSH3 0x1390 DUP4 PUSH3 0x110C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x13A0 DUP2 PUSH3 0x110C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x13BA JUMPI PUSH3 0x13B9 PUSH3 0x1347 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x13FD DUP3 PUSH3 0x110C JUMP JUMPDEST SWAP2 POP PUSH3 0x140A DUP4 PUSH3 0x110C JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x141D JUMPI PUSH3 0x141C PUSH3 0x13C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x143D DUP2 PUSH3 0x1428 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x144E DUP2 PUSH3 0x110C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x145F DUP2 PUSH3 0xF5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x147C PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x1432 JUMP JUMPDEST PUSH3 0x148B PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1432 JUMP JUMPDEST PUSH3 0x149A PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1432 JUMP JUMPDEST PUSH3 0x14A9 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x1443 JUMP JUMPDEST PUSH3 0x14B8 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x1454 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x14D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1454 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1510 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x153A DUP3 PUSH3 0xFE6 JUMP JUMPDEST PUSH3 0x1546 DUP2 DUP6 PUSH3 0x14DF JUMP JUMPDEST SWAP4 POP PUSH3 0x1558 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x14F0 JUMP JUMPDEST PUSH3 0x1563 DUP2 PUSH3 0x151C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x158A DUP2 DUP5 PUSH3 0x152D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15BB DUP3 MLOAD PUSH3 0x1428 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D1 DUP3 PUSH3 0x1592 JUMP JUMPDEST DUP3 PUSH3 0x15DD DUP5 PUSH3 0x159D JUMP JUMPDEST SWAP1 POP PUSH3 0x15EA DUP2 PUSH3 0x15AD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x162D JUMPI PUSH3 0x1628 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x10A9 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A2054726164652069732064697361626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x166C PUSH1 0x1C DUP4 PUSH3 0x14DF JUMP JUMPDEST SWAP2 POP PUSH3 0x1679 DUP3 PUSH3 0x1634 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x169F DUP2 PUSH3 0x165D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16B3 DUP3 PUSH3 0x110C JUMP JUMPDEST SWAP2 POP PUSH3 0x16C0 DUP4 PUSH3 0x110C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x16DB JUMPI PUSH3 0x16DA PUSH3 0x1347 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16EE DUP3 PUSH3 0x110C JUMP JUMPDEST SWAP2 POP PUSH3 0x16FB DUP4 PUSH3 0x110C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1716 JUMPI PUSH3 0x1715 PUSH3 0x1347 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1733 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1454 JUMP JUMPDEST PUSH3 0x1742 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1443 JUMP JUMPDEST PUSH3 0x1751 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1443 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1770 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x3C72 PUSH3 0x17D1 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1B57 ADD MSTORE PUSH1 0x0 PUSH2 0x1B1C ADD MSTORE PUSH1 0x0 PUSH2 0x207C ADD MSTORE PUSH1 0x0 PUSH2 0x205B ADD MSTORE PUSH1 0x0 PUSH2 0x17A3 ADD MSTORE PUSH1 0x0 PUSH2 0x17F9 ADD MSTORE PUSH1 0x0 PUSH2 0x1822 ADD MSTORE PUSH2 0x3C72 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x5EE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x56A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4E2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x7AC93119 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x466 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2DC0562D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0x3CE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x35A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2D2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH2 0xDA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x3059 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x12F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x67F JUMPI POP PUSH2 0x67E DUP3 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x723 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x765 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x779 DUP3 PUSH1 0xD PUSH2 0x14F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x820 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x82D DUP6 DUP3 DUP6 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x838 DUP6 DUP6 DUP6 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x893 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x89C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x16AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8CC PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP3 DUP3 PUSH2 0x1856 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x97C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI POP PUSH1 0x64 DUP3 GT ISZERO JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x32C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xF SLOAD SUB PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x337D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA45 DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0xAAC JUMPI PUSH1 0x0 PUSH1 0xF SLOAD SWAP1 POP DUP4 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAA2 SWAP3 SWAP2 SWAP1 PUSH2 0x343B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xADB DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0xAEF DUP3 PUSH1 0xD PUSH2 0x1A9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x34D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xBF3 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCD2 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0xB PUSH2 0x14F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC8C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF1 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD0C PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0xD14 PUSH2 0x1B4E JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0x3649 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD63 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xDCC DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x36EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE2D SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xE4E DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0xEB4 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF32 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5E SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFC7 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0xFD4 DUP2 DUP6 DUP6 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x100F DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10EE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1A9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1147 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1176 DUP13 PUSH2 0x1B89 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x11AF DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BF DUP3 DUP8 DUP8 DUP8 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1233 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123E DUP11 DUP11 DUP11 PUSH2 0x14CF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1253 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1266 DUP4 DUP4 PUSH2 0x1856 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x131D DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x3889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1351 DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0x1434 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA3568000DA48CC6E5E2C8E7A94D1BFA3607D1734C7DBD7B04AC9D77316B471A DUP2 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x142A SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C2A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x14ED PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP5 DUP5 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B2 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A8 DUP4 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B9 DUP4 DUP4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1794 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1731 PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x181B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1848 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x1850 PUSH2 0x2036 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1862 DUP4 DUP4 PUSH2 0xEB8 JUMP JUMPDEST ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18DB PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1952 DUP2 PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE10 TIMESTAMP PUSH2 0x1A8E SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B49 PUSH1 0x5 PUSH32 0x0 PUSH2 0x22C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B84 PUSH1 0x6 PUSH32 0x0 PUSH2 0x22C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF3 PUSH2 0x1BED PUSH2 0x179F JUMP JUMPDEST DUP4 PUSH2 0x2375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0C DUP9 DUP9 DUP9 DUP9 PUSH2 0x23B6 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C1C DUP3 DUP3 PUSH2 0x24AA JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C9C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C93 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1DFB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E0B DUP3 DUP3 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1E4E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E45 SWAP3 SWAP2 SWAP1 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1E84 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EBD JUMPI PUSH2 0x1EBC PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1EE1 JUMPI PUSH2 0x1EE0 PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3A38 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FCE JUMPI PUSH2 0x1F8E DUP4 PUSH1 0xB PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC4 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FDB DUP5 DUP5 DUP5 PUSH2 0x263E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FEB SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 DUP6 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x26A2 JUMP JUMPDEST JUMPDEST PUSH2 0x202F DUP6 DUP6 DUP4 PUSH2 0x26A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x20FA JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH20 0xBCD4042DE499D14E55001CCBB24A551F3B954096 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH20 0x14DC79964DA2C08B23698B3D3CC7CA32193D9955 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2261 DUP4 DUP4 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x22BA JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x22E2 JUMPI PUSH2 0x22DB DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP1 POP PUSH2 0x236F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x22EE SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x234A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x23F6 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x241B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x243D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2491 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x24A0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24BE JUMPI PUSH2 0x24BD PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24D1 JUMPI PUSH2 0x24D0 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x260A JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH2 0x24FD PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2535 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2549 JUMPI PUSH2 0x2548 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH2 0x255B PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25A1 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2598 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x25B4 JUMPI PUSH2 0x25B3 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25C7 JUMPI PUSH2 0x25C6 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2609 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2600 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2654 DUP5 PUSH1 0xD PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x266F JUMPI POP PUSH2 0x266E DUP4 PUSH1 0xD PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x267D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x269B JUMP JUMPDEST PUSH2 0x2710 PUSH1 0xF SLOAD DUP4 PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3B9A JUMP JUMPDEST PUSH2 0x2698 SWAP2 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26F4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2780 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2777 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2810 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x285D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x28F7 DUP4 PUSH2 0x295E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2915 PUSH2 0x3649 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2948 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29ED DUP2 PUSH2 0x29B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x29F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0A DUP2 PUSH2 0x29E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A34 DUP5 DUP3 DUP6 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A52 DUP2 PUSH2 0x2A3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A92 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 DUP3 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x2ADF DUP2 DUP6 PUSH2 0x2A7E JUMP JUMPDEST SWAP4 POP PUSH2 0x2AEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A8F JUMP JUMPDEST PUSH2 0x2AF8 DUP2 PUSH2 0x2AB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1D DUP2 DUP5 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B50 DUP3 PUSH2 0x2B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B60 DUP2 PUSH2 0x2B45 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B7D DUP2 PUSH2 0x2B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B96 DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BB3 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BD0 JUMPI PUSH2 0x2BCF PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BDE DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BEF DUP6 DUP3 DUP7 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C0F JUMPI PUSH2 0x2C0E PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C1D DUP5 DUP3 DUP6 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2F DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C77 DUP7 DUP3 DUP8 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C88 DUP7 DUP3 DUP8 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C99 DUP7 DUP3 DUP8 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB6 DUP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD3 DUP2 PUSH2 0x2CAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CEF JUMPI PUSH2 0x2CEE PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CFD DUP5 DUP3 DUP6 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0F DUP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D39 DUP2 PUSH2 0x2B45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D71 JUMPI PUSH2 0x2D70 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7F DUP6 DUP3 DUP7 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D90 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB0 DUP2 PUSH2 0x2D9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2DE6 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x2DFE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E40 JUMPI PUSH2 0x2E3F PUSH2 0x2E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E5C JUMPI PUSH2 0x2E5B PUSH2 0x2E08 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E7A JUMPI PUSH2 0x2E79 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E98 JUMPI PUSH2 0x2E97 PUSH2 0x29B3 JUMP JUMPDEST JUMPDEST PUSH2 0x2EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x2E0D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE5 DUP2 PUSH2 0x2EB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F20 DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP4 DUP4 PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F56 DUP3 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x2F60 DUP2 DUP6 PUSH2 0x2EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6B DUP4 PUSH2 0x2F07 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F9C JUMPI DUP2 MLOAD PUSH2 0x2F83 DUP9 DUP3 PUSH2 0x2F26 JUMP JUMPDEST SWAP8 POP PUSH2 0x2F8E DUP4 PUSH2 0x2F3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F6F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2FBE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2EDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FD0 DUP2 DUP10 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FE4 DUP2 DUP9 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP PUSH2 0x2FF3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x3000 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x300D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2D06 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x301F DUP2 DUP5 PUSH2 0x2F4B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3036 DUP2 PUSH2 0x2D9A JUMP JUMPDEST DUP2 EQ PUSH2 0x3041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3053 DUP2 PUSH2 0x302D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3078 JUMPI PUSH2 0x3077 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3086 DUP11 DUP3 DUP12 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3097 DUP11 DUP3 DUP12 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30A8 DUP11 DUP3 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x30B9 DUP11 DUP3 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x30CA DUP11 DUP3 DUP12 ADD PUSH2 0x3044 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x30DB DUP11 DUP3 DUP12 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x30EC DUP11 DUP3 DUP12 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3112 JUMPI PUSH2 0x3111 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3120 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3131 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3182 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3195 JUMPI PUSH2 0x3194 PUSH2 0x313B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A2041646472657373206E6F7420666F756E6420696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746865206578656D7074696F6E73000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F7 PUSH1 0x2E DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3202 DUP3 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x31EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A205461782070657263656E74616765206D7573742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65206265747765656E203020616E642031303020626173697320706F696E7473 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20286D6178203125292E00000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AF PUSH1 0x4A DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x32BA DUP3 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32DE DUP2 PUSH2 0x32A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204E6577207461782070657263656E74616765206D75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x737420626520646966666572656E742066726F6D207468652063757272656E74 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2076616C75652E00000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3367 PUSH1 0x47 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3372 DUP3 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3396 DUP2 PUSH2 0x335A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E65775461780000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DE PUSH1 0x6 DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x33E9 DUP3 PUSH2 0x33A8 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F PUSH2 0x340A DUP3 PUSH2 0x2B83 JUMP JUMPDEST PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3420 DUP3 PUSH2 0x33D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x342C DUP3 DUP5 PUSH2 0x33FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3450 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x345D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204164647265737320616C7265616479206578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320696E20746865206578656D7074696F6E7300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C0 PUSH1 0x33 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x34CB DUP3 PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34EF DUP2 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A2054726164696E6720616C726561647920656E61626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3552 PUSH1 0x22 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x355D DUP3 PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3581 DUP2 PUSH2 0x3545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204C697374206F6620616C6C6F776564206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x737365732063616E6E6F7420626520656D7074792E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E4 PUSH1 0x35 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x35EF DUP3 PUSH2 0x3588 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3613 DUP2 PUSH2 0x35D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E3A2074726164696E6720616C726561647920656E61626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D4 PUSH1 0x22 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x36DF DUP3 PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3703 DUP2 PUSH2 0x36C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E61626C6554726164696E6700000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3740 PUSH1 0xD DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x374B DUP3 PUSH2 0x370A JUMP JUMPDEST PUSH1 0xD DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3761 DUP3 PUSH2 0x3733 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3780 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x378D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x379A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x37A7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37B4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37C1 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x37EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54617857616C6C65740000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382B PUSH1 0x9 DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x3836 DUP3 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP3 PUSH2 0x3841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386B DUP3 PUSH2 0x384E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3883 PUSH2 0x387E DUP3 PUSH2 0x2B45 JUMP JUMPDEST PUSH2 0x3860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3894 DUP3 PUSH2 0x381E JUMP JUMPDEST SWAP2 POP PUSH2 0x38A0 DUP3 DUP5 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x38C4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x38D1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x38DE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A20596F75206861766520616C72656164792061707072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7665642074686973207472616E73616374696F6E2E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3942 PUSH1 0x36 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x394D DUP3 PUSH2 0x38E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3971 DUP2 PUSH2 0x3935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39B2 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x39BD DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39D5 JUMPI PUSH2 0x39D4 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x39FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0F DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A1A DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A32 JUMPI PUSH2 0x3A31 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E3A2054726164652069732064697361626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9D PUSH1 0x1C DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA8 DUP3 PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACC DUP2 PUSH2 0x3A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3AE8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3AF5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B02 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B0F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x3B1C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B3B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B48 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2DA7 JUMP JUMPDEST PUSH2 0x3B55 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B62 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BA5 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB0 DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3BBE DUP2 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3BD5 JUMPI PUSH2 0x3BD4 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C16 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C21 DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3C31 JUMPI PUSH2 0x3C30 PUSH2 0x3BDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PREVRANDAO CALLDATALOAD PUSH24 0x574BDF96BA96C71E9EC504B3819CF3052FBBE04DD667128F 0xE9 PUSH20 0x8CDF64736F6C6343000818003300000000000000 ","sourceMap":"518:12502:27:-:0;;;2574:42;2547:69;;;;;;;;;;;;;;;;;;;;4152:2250;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1574:52:8;;;;;;;;;;;;;;;;;1613:4;3328:431:19;;;;;;;;;;;;;;;;;1896:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:19;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:8;4485:12:27::2;4468:14;;:29;;;;;;;;;;;;;;;;;;4507:40;695:25;4532:14;;;;;;;;;;;4507:10;;;:40;;:::i;:::-;;4557;695:25;2205:42;4557:10;;;:40;;:::i;:::-;;4607;695:25;2295:42;4607:10;;;:40;;:::i;:::-;;4674:1;4658:13;:17;;;;4840:25;4862:1;4840:9;:13;;;;:25;;;;:::i;:::-;;4876:27;4890:12;4876:9;:13;;;;:27;;;;:::i;:::-;;4979:31;4985:10;2466:26;4979:5;;;:31;;:::i;:::-;5101:64;5111:10;973:42;5140:24;5101:9;;;:64;;:::i;:::-;5204:65;5214:10;1065:42;5244:24;5204:9;;;:65;;:::i;:::-;5312:58;5322:10;1152:42;5347:22;5312:9;;;:58;;:::i;:::-;5407:61;5417:10;1241:42;5464:3;5459:2;2466:26;5444:17;;;;:::i;:::-;:23;;;;:::i;:::-;5407:9;;;:61;;:::i;:::-;5497:60;5507:10;1329:42;5553:3;5548:2;2466:26;5533:17;;;;:::i;:::-;:23;;;;:::i;:::-;5497:9;;;:60;;:::i;:::-;5584:64;5594:10;1420:42;5623:24;5584:9;;;:64;;:::i;:::-;5689:78;5699:10;1525:42;5742:24;5689:9;;;:78;;:::i;:::-;5826:79;5836:10;1630:42;5879:25;5826:9;;;:79;;:::i;:::-;5964:69;5974:10;1916:42;6008:24;5964:9;;;:69;;:::i;:::-;6071:70;6081:10;1820:42;6116:24;6071:9;;;:70;;:::i;:::-;6179:66;6189:10;1723:42;6220:24;6179:9;;;:66;;:::i;:::-;6280:83;6290:10;6302:35;6359:3;6354:2;2466:26;6339:17;;;;:::i;:::-;:23;;;;:::i;:::-;6280:9;;;:83;;:::i;:::-;4152:2250:::0;;518:12502;;2914:340:15;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:19:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;8316:150:26:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;;;:50;;:::i;:::-;8402:57;;8316:150;;;;:::o;7721:208:6:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;;;:24;;:::i;:::-;5656:300;;;:::o;1708:286:15:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:16:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;2241:406:26:-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;11731:734:27:-;11931:14;;;;;;;;;;;11926:111;;11969:24;11988:4;11969:9;:18;;;;:24;;;;:::i;:::-;11961:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11926:111;12118:11;12132:24;12140:4;12146:2;12150:5;12132:7;;;:24;;:::i;:::-;12118:38;;12166:19;12196:3;12188:5;:11;;;;:::i;:::-;12166:33;;12292:1;12286:3;:7;12282:73;;;12309:35;12323:4;12329:9;;;;;;;;;;;12340:3;12309:13;;;:35;;:::i;:::-;12282:73;12422:36;12436:4;12442:2;12446:11;12422:13;;;:36;;:::i;:::-;11836:629;;11731:734;;;:::o;4264:129:26:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;8871:165::-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;;;:55;;:::i;:::-;8967:62;;8871:165;;;;:::o;12561:457:27:-;12687:7;12776:30;12795:10;12776:9;:18;;;;:30;;;;:::i;:::-;:65;;;;12810:31;12829:11;12810:9;:18;;;;:31;;;;:::i;:::-;12776:65;12772:104;;;12864:1;12857:8;;;;12772:104;839:6;12980:13;;12971:6;:22;;;;:::i;:::-;:40;;;;:::i;:::-;12964:47;;12561:457;;;;;;:::o;6271:1107:6:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:30:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:180::-;6633:77;6630:1;6623:88;6730:4;6727:1;6720:15;6754:4;6751:1;6744:15;6771:410;6811:7;6834:20;6852:1;6834:20;:::i;:::-;6829:25;;6868:20;6886:1;6868:20;:::i;:::-;6863:25;;6923:1;6920;6916:9;6945:30;6963:11;6945:30;:::i;:::-;6934:41;;7124:1;7115:7;7111:15;7108:1;7105:22;7085:1;7078:9;7058:83;7035:139;;7154:18;;:::i;:::-;7035:139;6819:362;6771:410;;;;:::o;7187:180::-;7235:77;7232:1;7225:88;7332:4;7329:1;7322:15;7356:4;7353:1;7346:15;7373:185;7413:1;7430:20;7448:1;7430:20;:::i;:::-;7425:25;;7464:20;7482:1;7464:20;:::i;:::-;7459:25;;7503:1;7493:35;;7508:18;;:::i;:::-;7493:35;7550:1;7547;7543:9;7538:14;;7373:185;;;;:::o;7564:77::-;7601:7;7630:5;7619:16;;7564:77;;;:::o;7647:118::-;7734:24;7752:5;7734:24;:::i;:::-;7729:3;7722:37;7647:118;;:::o;7771:::-;7858:24;7876:5;7858:24;:::i;:::-;7853:3;7846:37;7771:118;;:::o;7895:::-;7982:24;8000:5;7982:24;:::i;:::-;7977:3;7970:37;7895:118;;:::o;8019:664::-;8224:4;8262:3;8251:9;8247:19;8239:27;;8276:71;8344:1;8333:9;8329:17;8320:6;8276:71;:::i;:::-;8357:72;8425:2;8414:9;8410:18;8401:6;8357:72;:::i;:::-;8439;8507:2;8496:9;8492:18;8483:6;8439:72;:::i;:::-;8521;8589:2;8578:9;8574:18;8565:6;8521:72;:::i;:::-;8603:73;8671:3;8660:9;8656:19;8647:6;8603:73;:::i;:::-;8019:664;;;;;;;;:::o;8689:222::-;8782:4;8820:2;8809:9;8805:18;8797:26;;8833:71;8901:1;8890:9;8886:17;8877:6;8833:71;:::i;:::-;8689:222;;;;:::o;8917:169::-;9001:11;9035:6;9030:3;9023:19;9075:4;9070:3;9066:14;9051:29;;8917:169;;;;:::o;9092:246::-;9173:1;9183:113;9197:6;9194:1;9191:13;9183:113;;;9282:1;9277:3;9273:11;9267:18;9263:1;9258:3;9254:11;9247:39;9219:2;9216:1;9212:10;9207:15;;9183:113;;;9330:1;9321:6;9316:3;9312:16;9305:27;9154:184;9092:246;;;:::o;9344:102::-;9385:6;9436:2;9432:7;9427:2;9420:5;9416:14;9412:28;9402:38;;9344:102;;;:::o;9452:377::-;9540:3;9568:39;9601:5;9568:39;:::i;:::-;9623:71;9687:6;9682:3;9623:71;:::i;:::-;9616:78;;9703:65;9761:6;9756:3;9749:4;9742:5;9738:16;9703:65;:::i;:::-;9793:29;9815:6;9793:29;:::i;:::-;9788:3;9784:39;9777:46;;9544:285;9452:377;;;;:::o;9835:313::-;9948:4;9986:2;9975:9;9971:18;9963:26;;10035:9;10029:4;10025:20;10021:1;10010:9;10006:17;9999:47;10063:78;10136:4;10127:6;10063:78;:::i;:::-;10055:86;;9835:313;;;;:::o;10154:98::-;10205:6;10239:5;10233:12;10223:22;;10154:98;;;:::o;10258:116::-;10309:4;10332:3;10324:11;;10362:4;10357:3;10353:14;10345:22;;10258:116;;;:::o;10380:154::-;10423:11;10459:29;10483:3;10477:10;10459:29;:::i;:::-;10522:5;10498:29;;10435:99;10380:154;;;:::o;10540:594::-;10624:5;10655:38;10687:5;10655:38;:::i;:::-;10718:5;10745:40;10779:5;10745:40;:::i;:::-;10733:52;;10804:35;10830:8;10804:35;:::i;:::-;10795:44;;10863:2;10855:6;10852:14;10849:278;;;10934:169;11019:66;10989:6;10985:2;10981:15;10978:1;10974:23;10934:169;:::i;:::-;10911:5;10890:227;10881:236;;10849:278;10630:504;;10540:594;;;:::o;11140:178::-;11280:30;11276:1;11268:6;11264:14;11257:54;11140:178;:::o;11324:366::-;11466:3;11487:67;11551:2;11546:3;11487:67;:::i;:::-;11480:74;;11563:93;11652:3;11563:93;:::i;:::-;11681:2;11676:3;11672:12;11665:19;;11324:366;;;:::o;11696:419::-;11862:4;11900:2;11889:9;11885:18;11877:26;;11949:9;11943:4;11939:20;11935:1;11924:9;11920:17;11913:47;11977:131;12103:4;11977:131;:::i;:::-;11969:139;;11696:419;;;:::o;12121:194::-;12161:4;12181:20;12199:1;12181:20;:::i;:::-;12176:25;;12215:20;12233:1;12215:20;:::i;:::-;12210:25;;12259:1;12256;12252:9;12244:17;;12283:1;12277:4;12274:11;12271:37;;;12288:18;;:::i;:::-;12271:37;12121:194;;;;:::o;12321:191::-;12361:3;12380:20;12398:1;12380:20;:::i;:::-;12375:25;;12414:20;12432:1;12414:20;:::i;:::-;12409:25;;12457:1;12454;12450:9;12443:16;;12478:3;12475:1;12472:10;12469:36;;;12485:18;;:::i;:::-;12469:36;12321:191;;;;:::o;12518:442::-;12667:4;12705:2;12694:9;12690:18;12682:26;;12718:71;12786:1;12775:9;12771:17;12762:6;12718:71;:::i;:::-;12799:72;12867:2;12856:9;12852:18;12843:6;12799:72;:::i;:::-;12881;12949:2;12938:9;12934:18;12925:6;12881:72;:::i;:::-;12518:442;;;;;;:::o;12966:222::-;13059:4;13097:2;13086:9;13082:18;13074:26;;13110:71;13178:1;13167:9;13163:17;13154:6;13110:71;:::i;:::-;12966:222;;;;:::o;518:12502:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":4021,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1745":{"entryPoint":2229,"id":1745,"parameterSlots":0,"returnSlots":1},"@MANAGER_ROLE_7260":{"entryPoint":5177,"id":7260,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3593":{"entryPoint":6931,"id":3593,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3605":{"entryPoint":6990,"id":3605,"parameterSlots":0,"returnSlots":1},"@_add_6683":{"entryPoint":8789,"id":6683,"parameterSlots":2,"returnSlots":1},"@_approve_1405":{"entryPoint":5327,"id":1405,"parameterSlots":3,"returnSlots":0},"@_approve_1465":{"entryPoint":7210,"id":1465,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3523":{"entryPoint":8246,"id":3523,"parameterSlots":0,"returnSlots":1},"@_checkRole_114":{"entryPoint":7681,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":5345,"id":93,"parameterSlots":1,"returnSlots":0},"@_contains_6786":{"entryPoint":10439,"id":6786,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_3502":{"entryPoint":6047,"id":3502,"parameterSlots":0,"returnSlots":1},"@_getTax_8041":{"entryPoint":9790,"id":8041,"parameterSlots":3,"returnSlots":1},"@_grantRole_256":{"entryPoint":5805,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3539":{"entryPoint":7136,"id":3539,"parameterSlots":1,"returnSlots":1},"@_msgSender_2363":{"entryPoint":5319,"id":2363,"parameterSlots":0,"returnSlots":1},"@_processApproval_7670":{"entryPoint":6473,"id":7670,"parameterSlots":1,"returnSlots":0},"@_remove_6767":{"entryPoint":7762,"id":6767,"parameterSlots":2,"returnSlots":1},"@_resetApprovalIfExpired_7617":{"entryPoint":8396,"id":7617,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":6230,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1513":{"entryPoint":5413,"id":1513,"parameterSlots":3,"returnSlots":0},"@_throwError_3378":{"entryPoint":9386,"id":3378,"parameterSlots":2,"returnSlots":0},"@_transfer_1244":{"entryPoint":5561,"id":1244,"parameterSlots":3,"returnSlots":0},"@_update_1321":{"entryPoint":9890,"id":1321,"parameterSlots":3,"returnSlots":0},"@_update_8010":{"entryPoint":8038,"id":8010,"parameterSlots":3,"returnSlots":0},"@_useNonce_2423":{"entryPoint":7049,"id":2423,"parameterSlots":1,"returnSlots":1},"@addCanTrade_7906":{"entryPoint":4069,"id":7906,"parameterSlots":2,"returnSlots":0},"@addExemption_7839":{"entryPoint":2737,"id":7839,"parameterSlots":1,"returnSlots":0},"@add_6983":{"entryPoint":6810,"id":6983,"parameterSlots":2,"returnSlots":1},"@allowance_1141":{"entryPoint":4716,"id":1141,"parameterSlots":2,"returnSlots":1},"@approve_1165":{"entryPoint":1816,"id":1165,"parameterSlots":2,"returnSlots":1},"@balanceOf_1100":{"entryPoint":2945,"id":1100,"parameterSlots":1,"returnSlots":1},"@byteLength_2567":{"entryPoint":10590,"id":2567,"parameterSlots":1,"returnSlots":1},"@contains_7037":{"entryPoint":9742,"id":7037,"parameterSlots":2,"returnSlots":1},"@decimals_1078":{"entryPoint":2220,"id":1078,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3581":{"entryPoint":3320,"id":3581,"parameterSlots":0,"returnSlots":7},"@enableTrading_7711":{"entryPoint":3490,"id":7711,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_128":{"entryPoint":2116,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":2186,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":3768,"id":80,"parameterSlots":2,"returnSlots":1},"@name_1060":{"entryPoint":1670,"id":1060,"parameterSlots":0,"returnSlots":1},"@nonces_1735":{"entryPoint":3302,"id":1735,"parameterSlots":1,"returnSlots":1},"@nonces_2408":{"entryPoint":6858,"id":2408,"parameterSlots":1,"returnSlots":1},"@permit_1718":{"entryPoint":4354,"id":1718,"parameterSlots":7,"returnSlots":0},"@recover_3329":{"entryPoint":7162,"id":3329,"parameterSlots":4,"returnSlots":1},"@removeCanTrade_7951":{"entryPoint":3017,"id":7951,"parameterSlots":2,"returnSlots":0},"@removeExemption_7861":{"entryPoint":1851,"id":7861,"parameterSlots":1,"returnSlots":0},"@remove_7010":{"entryPoint":5365,"id":7010,"parameterSlots":2,"returnSlots":1},"@renounceRole_189":{"entryPoint":2244,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":4682,"id":166,"parameterSlots":2,"returnSlots":0},"@setTaxPercentage_7773":{"entryPoint":2386,"id":7773,"parameterSlots":1,"returnSlots":0},"@setTaxWallet_7817":{"entryPoint":4851,"id":7817,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3703":{"entryPoint":5213,"id":3703,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1548,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_1069":{"entryPoint":3875,"id":1069,"parameterSlots":0,"returnSlots":1},"@taxPercentage_7331":{"entryPoint":4063,"id":7331,"parameterSlots":0,"returnSlots":0},"@taxWallet_7317":{"entryPoint":2148,"id":7317,"parameterSlots":0,"returnSlots":0},"@toStringWithFallback_2634":{"entryPoint":8901,"id":2634,"parameterSlots":2,"returnSlots":1},"@toString_2535":{"entryPoint":10474,"id":2535,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3679":{"entryPoint":9077,"id":3679,"parameterSlots":2,"returnSlots":1},"@totalSupply_1087":{"entryPoint":2059,"id":1087,"parameterSlots":0,"returnSlots":1},"@tradingEnabled_7319":{"entryPoint":2367,"id":7319,"parameterSlots":0,"returnSlots":0},"@transferFrom_1197":{"entryPoint":2069,"id":1197,"parameterSlots":3,"returnSlots":1},"@transfer_1124":{"entryPoint":4028,"id":1124,"parameterSlots":2,"returnSlots":1},"@tryRecover_3293":{"entryPoint":9142,"id":3293,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":11118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":11789,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":11460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":12356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11344,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12377,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11193,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":11875,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":11481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11610,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":11729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":12070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11568,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":14450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10825,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":11996,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11526,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402_to_t_string_memory_ptr_fromStack":{"entryPoint":13491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f_to_t_string_memory_ptr_fromStack":{"entryPoint":13783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5_to_t_string_memory_ptr_fromStack":{"entryPoint":13637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78_to_t_string_memory_ptr_fromStack":{"entryPoint":13146,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2_to_t_string_memory_ptr_fromStack":{"entryPoint":14645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a_to_t_string_memory_ptr_fromStack":{"entryPoint":12778,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack":{"entryPoint":14992,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c_to_t_string_memory_ptr_fromStack":{"entryPoint":12962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816_to_t_string_memory_ptr_fromStack":{"entryPoint":14023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12055,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11302,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":13310,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":13333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":14473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14284,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":14811,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14511,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12201,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14187,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":15059,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15142,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13371,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":11702,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12039,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12011,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10867,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12094,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12022,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10878,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13213,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14759,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15371,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15258,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14852,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11077,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":11952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11427,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10680,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11045,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11139,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11674,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10895,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12650,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":14432,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":14414,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":13300,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14712,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15324,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15211,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12603,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":14904,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13850,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13897,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11779,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11774,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11784,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10675,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10670,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10937,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":14401,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354":{"entryPoint":13224,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402":{"entryPoint":13412,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f":{"entryPoint":13704,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5":{"entryPoint":13558,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78":{"entryPoint":13029,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7":{"entryPoint":14325,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2":{"entryPoint":14566,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61":{"entryPoint":14090,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a":{"entryPoint":12699,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f":{"entryPoint":14951,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c":{"entryPoint":12845,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816":{"entryPoint":13944,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11095,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11437,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10724,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11149,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":12333,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:34276:30","nodeType":"YulBlock","src":"0:34276:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"378:105:30","nodeType":"YulBlock","src":"378:105:30","statements":[{"nativeSrc":"388:89:30","nodeType":"YulAssignment","src":"388:89:30","value":{"arguments":[{"name":"value","nativeSrc":"403:5:30","nodeType":"YulIdentifier","src":"403:5:30"},{"kind":"number","nativeSrc":"410:66:30","nodeType":"YulLiteral","src":"410:66:30","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:30","nodeType":"YulIdentifier","src":"399:3:30"},"nativeSrc":"399:78:30","nodeType":"YulFunctionCall","src":"399:78:30"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:30","nodeType":"YulIdentifier","src":"388:7:30"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:30","nodeType":"YulTypedName","src":"360:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:30","nodeType":"YulTypedName","src":"370:7:30","type":""}],"src":"334:149:30"},{"body":{"nativeSrc":"531:78:30","nodeType":"YulBlock","src":"531:78:30","statements":[{"body":{"nativeSrc":"587:16:30","nodeType":"YulBlock","src":"587:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:30","nodeType":"YulLiteral","src":"596:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:30","nodeType":"YulLiteral","src":"599:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:30","nodeType":"YulIdentifier","src":"589:6:30"},"nativeSrc":"589:12:30","nodeType":"YulFunctionCall","src":"589:12:30"},"nativeSrc":"589:12:30","nodeType":"YulExpressionStatement","src":"589:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:30","nodeType":"YulIdentifier","src":"554:5:30"},{"arguments":[{"name":"value","nativeSrc":"578:5:30","nodeType":"YulIdentifier","src":"578:5:30"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:30","nodeType":"YulIdentifier","src":"561:16:30"},"nativeSrc":"561:23:30","nodeType":"YulFunctionCall","src":"561:23:30"}],"functionName":{"name":"eq","nativeSrc":"551:2:30","nodeType":"YulIdentifier","src":"551:2:30"},"nativeSrc":"551:34:30","nodeType":"YulFunctionCall","src":"551:34:30"}],"functionName":{"name":"iszero","nativeSrc":"544:6:30","nodeType":"YulIdentifier","src":"544:6:30"},"nativeSrc":"544:42:30","nodeType":"YulFunctionCall","src":"544:42:30"},"nativeSrc":"541:62:30","nodeType":"YulIf","src":"541:62:30"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:30","nodeType":"YulTypedName","src":"524:5:30","type":""}],"src":"489:120:30"},{"body":{"nativeSrc":"666:86:30","nodeType":"YulBlock","src":"666:86:30","statements":[{"nativeSrc":"676:29:30","nodeType":"YulAssignment","src":"676:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:30","nodeType":"YulIdentifier","src":"698:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:30","nodeType":"YulIdentifier","src":"685:12:30"},"nativeSrc":"685:20:30","nodeType":"YulFunctionCall","src":"685:20:30"},"variableNames":[{"name":"value","nativeSrc":"676:5:30","nodeType":"YulIdentifier","src":"676:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:30","nodeType":"YulIdentifier","src":"740:5:30"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:30","nodeType":"YulIdentifier","src":"714:25:30"},"nativeSrc":"714:32:30","nodeType":"YulFunctionCall","src":"714:32:30"},"nativeSrc":"714:32:30","nodeType":"YulExpressionStatement","src":"714:32:30"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:30","nodeType":"YulTypedName","src":"644:6:30","type":""},{"name":"end","nativeSrc":"652:3:30","nodeType":"YulTypedName","src":"652:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:30","nodeType":"YulTypedName","src":"660:5:30","type":""}],"src":"615:137:30"},{"body":{"nativeSrc":"823:262:30","nodeType":"YulBlock","src":"823:262:30","statements":[{"body":{"nativeSrc":"869:83:30","nodeType":"YulBlock","src":"869:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:30","nodeType":"YulIdentifier","src":"871:77:30"},"nativeSrc":"871:79:30","nodeType":"YulFunctionCall","src":"871:79:30"},"nativeSrc":"871:79:30","nodeType":"YulExpressionStatement","src":"871:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:30","nodeType":"YulIdentifier","src":"844:7:30"},{"name":"headStart","nativeSrc":"853:9:30","nodeType":"YulIdentifier","src":"853:9:30"}],"functionName":{"name":"sub","nativeSrc":"840:3:30","nodeType":"YulIdentifier","src":"840:3:30"},"nativeSrc":"840:23:30","nodeType":"YulFunctionCall","src":"840:23:30"},{"kind":"number","nativeSrc":"865:2:30","nodeType":"YulLiteral","src":"865:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:30","nodeType":"YulIdentifier","src":"836:3:30"},"nativeSrc":"836:32:30","nodeType":"YulFunctionCall","src":"836:32:30"},"nativeSrc":"833:119:30","nodeType":"YulIf","src":"833:119:30"},{"nativeSrc":"962:116:30","nodeType":"YulBlock","src":"962:116:30","statements":[{"nativeSrc":"977:15:30","nodeType":"YulVariableDeclaration","src":"977:15:30","value":{"kind":"number","nativeSrc":"991:1:30","nodeType":"YulLiteral","src":"991:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:30","nodeType":"YulTypedName","src":"981:6:30","type":""}]},{"nativeSrc":"1006:62:30","nodeType":"YulAssignment","src":"1006:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:30","nodeType":"YulIdentifier","src":"1040:9:30"},{"name":"offset","nativeSrc":"1051:6:30","nodeType":"YulIdentifier","src":"1051:6:30"}],"functionName":{"name":"add","nativeSrc":"1036:3:30","nodeType":"YulIdentifier","src":"1036:3:30"},"nativeSrc":"1036:22:30","nodeType":"YulFunctionCall","src":"1036:22:30"},{"name":"dataEnd","nativeSrc":"1060:7:30","nodeType":"YulIdentifier","src":"1060:7:30"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:30","nodeType":"YulIdentifier","src":"1016:19:30"},"nativeSrc":"1016:52:30","nodeType":"YulFunctionCall","src":"1016:52:30"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:30","nodeType":"YulIdentifier","src":"1006:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:30","nodeType":"YulTypedName","src":"793:9:30","type":""},{"name":"dataEnd","nativeSrc":"804:7:30","nodeType":"YulTypedName","src":"804:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:30","nodeType":"YulTypedName","src":"816:6:30","type":""}],"src":"758:327:30"},{"body":{"nativeSrc":"1133:48:30","nodeType":"YulBlock","src":"1133:48:30","statements":[{"nativeSrc":"1143:32:30","nodeType":"YulAssignment","src":"1143:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:30","nodeType":"YulIdentifier","src":"1168:5:30"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:30","nodeType":"YulIdentifier","src":"1161:6:30"},"nativeSrc":"1161:13:30","nodeType":"YulFunctionCall","src":"1161:13:30"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:30","nodeType":"YulIdentifier","src":"1154:6:30"},"nativeSrc":"1154:21:30","nodeType":"YulFunctionCall","src":"1154:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:30","nodeType":"YulIdentifier","src":"1143:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:30","nodeType":"YulTypedName","src":"1115:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:30","nodeType":"YulTypedName","src":"1125:7:30","type":""}],"src":"1091:90:30"},{"body":{"nativeSrc":"1246:50:30","nodeType":"YulBlock","src":"1246:50:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:30","nodeType":"YulIdentifier","src":"1263:3:30"},{"arguments":[{"name":"value","nativeSrc":"1283:5:30","nodeType":"YulIdentifier","src":"1283:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:30","nodeType":"YulIdentifier","src":"1268:14:30"},"nativeSrc":"1268:21:30","nodeType":"YulFunctionCall","src":"1268:21:30"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:30","nodeType":"YulIdentifier","src":"1256:6:30"},"nativeSrc":"1256:34:30","nodeType":"YulFunctionCall","src":"1256:34:30"},"nativeSrc":"1256:34:30","nodeType":"YulExpressionStatement","src":"1256:34:30"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:30","nodeType":"YulTypedName","src":"1234:5:30","type":""},{"name":"pos","nativeSrc":"1241:3:30","nodeType":"YulTypedName","src":"1241:3:30","type":""}],"src":"1187:109:30"},{"body":{"nativeSrc":"1394:118:30","nodeType":"YulBlock","src":"1394:118:30","statements":[{"nativeSrc":"1404:26:30","nodeType":"YulAssignment","src":"1404:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:30","nodeType":"YulIdentifier","src":"1416:9:30"},{"kind":"number","nativeSrc":"1427:2:30","nodeType":"YulLiteral","src":"1427:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:30","nodeType":"YulIdentifier","src":"1412:3:30"},"nativeSrc":"1412:18:30","nodeType":"YulFunctionCall","src":"1412:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:30","nodeType":"YulIdentifier","src":"1404:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:30","nodeType":"YulIdentifier","src":"1478:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:30","nodeType":"YulIdentifier","src":"1491:9:30"},{"kind":"number","nativeSrc":"1502:1:30","nodeType":"YulLiteral","src":"1502:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:30","nodeType":"YulIdentifier","src":"1487:3:30"},"nativeSrc":"1487:17:30","nodeType":"YulFunctionCall","src":"1487:17:30"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:30","nodeType":"YulIdentifier","src":"1440:37:30"},"nativeSrc":"1440:65:30","nodeType":"YulFunctionCall","src":"1440:65:30"},"nativeSrc":"1440:65:30","nodeType":"YulExpressionStatement","src":"1440:65:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:30","nodeType":"YulTypedName","src":"1366:9:30","type":""},{"name":"value0","nativeSrc":"1378:6:30","nodeType":"YulTypedName","src":"1378:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:30","nodeType":"YulTypedName","src":"1389:4:30","type":""}],"src":"1302:210:30"},{"body":{"nativeSrc":"1577:40:30","nodeType":"YulBlock","src":"1577:40:30","statements":[{"nativeSrc":"1588:22:30","nodeType":"YulAssignment","src":"1588:22:30","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:30","nodeType":"YulIdentifier","src":"1604:5:30"}],"functionName":{"name":"mload","nativeSrc":"1598:5:30","nodeType":"YulIdentifier","src":"1598:5:30"},"nativeSrc":"1598:12:30","nodeType":"YulFunctionCall","src":"1598:12:30"},"variableNames":[{"name":"length","nativeSrc":"1588:6:30","nodeType":"YulIdentifier","src":"1588:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:30","nodeType":"YulTypedName","src":"1560:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:30","nodeType":"YulTypedName","src":"1570:6:30","type":""}],"src":"1518:99:30"},{"body":{"nativeSrc":"1719:73:30","nodeType":"YulBlock","src":"1719:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:30","nodeType":"YulIdentifier","src":"1736:3:30"},{"name":"length","nativeSrc":"1741:6:30","nodeType":"YulIdentifier","src":"1741:6:30"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:30","nodeType":"YulIdentifier","src":"1729:6:30"},"nativeSrc":"1729:19:30","nodeType":"YulFunctionCall","src":"1729:19:30"},"nativeSrc":"1729:19:30","nodeType":"YulExpressionStatement","src":"1729:19:30"},{"nativeSrc":"1757:29:30","nodeType":"YulAssignment","src":"1757:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:30","nodeType":"YulIdentifier","src":"1776:3:30"},{"kind":"number","nativeSrc":"1781:4:30","nodeType":"YulLiteral","src":"1781:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:30","nodeType":"YulIdentifier","src":"1772:3:30"},"nativeSrc":"1772:14:30","nodeType":"YulFunctionCall","src":"1772:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:30","nodeType":"YulIdentifier","src":"1757:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:30","nodeType":"YulTypedName","src":"1691:3:30","type":""},{"name":"length","nativeSrc":"1696:6:30","nodeType":"YulTypedName","src":"1696:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:30","nodeType":"YulTypedName","src":"1707:11:30","type":""}],"src":"1623:169:30"},{"body":{"nativeSrc":"1860:184:30","nodeType":"YulBlock","src":"1860:184:30","statements":[{"nativeSrc":"1870:10:30","nodeType":"YulVariableDeclaration","src":"1870:10:30","value":{"kind":"number","nativeSrc":"1879:1:30","nodeType":"YulLiteral","src":"1879:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:30","nodeType":"YulTypedName","src":"1874:1:30","type":""}]},{"body":{"nativeSrc":"1939:63:30","nodeType":"YulBlock","src":"1939:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:30","nodeType":"YulIdentifier","src":"1964:3:30"},{"name":"i","nativeSrc":"1969:1:30","nodeType":"YulIdentifier","src":"1969:1:30"}],"functionName":{"name":"add","nativeSrc":"1960:3:30","nodeType":"YulIdentifier","src":"1960:3:30"},"nativeSrc":"1960:11:30","nodeType":"YulFunctionCall","src":"1960:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:30","nodeType":"YulIdentifier","src":"1983:3:30"},{"name":"i","nativeSrc":"1988:1:30","nodeType":"YulIdentifier","src":"1988:1:30"}],"functionName":{"name":"add","nativeSrc":"1979:3:30","nodeType":"YulIdentifier","src":"1979:3:30"},"nativeSrc":"1979:11:30","nodeType":"YulFunctionCall","src":"1979:11:30"}],"functionName":{"name":"mload","nativeSrc":"1973:5:30","nodeType":"YulIdentifier","src":"1973:5:30"},"nativeSrc":"1973:18:30","nodeType":"YulFunctionCall","src":"1973:18:30"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:30","nodeType":"YulIdentifier","src":"1953:6:30"},"nativeSrc":"1953:39:30","nodeType":"YulFunctionCall","src":"1953:39:30"},"nativeSrc":"1953:39:30","nodeType":"YulExpressionStatement","src":"1953:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:30","nodeType":"YulIdentifier","src":"1900:1:30"},{"name":"length","nativeSrc":"1903:6:30","nodeType":"YulIdentifier","src":"1903:6:30"}],"functionName":{"name":"lt","nativeSrc":"1897:2:30","nodeType":"YulIdentifier","src":"1897:2:30"},"nativeSrc":"1897:13:30","nodeType":"YulFunctionCall","src":"1897:13:30"},"nativeSrc":"1889:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:30","nodeType":"YulBlock","src":"1911:19:30","statements":[{"nativeSrc":"1913:15:30","nodeType":"YulAssignment","src":"1913:15:30","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:30","nodeType":"YulIdentifier","src":"1922:1:30"},{"kind":"number","nativeSrc":"1925:2:30","nodeType":"YulLiteral","src":"1925:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:30","nodeType":"YulIdentifier","src":"1918:3:30"},"nativeSrc":"1918:10:30","nodeType":"YulFunctionCall","src":"1918:10:30"},"variableNames":[{"name":"i","nativeSrc":"1913:1:30","nodeType":"YulIdentifier","src":"1913:1:30"}]}]},"pre":{"nativeSrc":"1893:3:30","nodeType":"YulBlock","src":"1893:3:30","statements":[]},"src":"1889:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:30","nodeType":"YulIdentifier","src":"2022:3:30"},{"name":"length","nativeSrc":"2027:6:30","nodeType":"YulIdentifier","src":"2027:6:30"}],"functionName":{"name":"add","nativeSrc":"2018:3:30","nodeType":"YulIdentifier","src":"2018:3:30"},"nativeSrc":"2018:16:30","nodeType":"YulFunctionCall","src":"2018:16:30"},{"kind":"number","nativeSrc":"2036:1:30","nodeType":"YulLiteral","src":"2036:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:30","nodeType":"YulIdentifier","src":"2011:6:30"},"nativeSrc":"2011:27:30","nodeType":"YulFunctionCall","src":"2011:27:30"},"nativeSrc":"2011:27:30","nodeType":"YulExpressionStatement","src":"2011:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:30","nodeType":"YulTypedName","src":"1842:3:30","type":""},{"name":"dst","nativeSrc":"1847:3:30","nodeType":"YulTypedName","src":"1847:3:30","type":""},{"name":"length","nativeSrc":"1852:6:30","nodeType":"YulTypedName","src":"1852:6:30","type":""}],"src":"1798:246:30"},{"body":{"nativeSrc":"2098:54:30","nodeType":"YulBlock","src":"2098:54:30","statements":[{"nativeSrc":"2108:38:30","nodeType":"YulAssignment","src":"2108:38:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:30","nodeType":"YulIdentifier","src":"2126:5:30"},{"kind":"number","nativeSrc":"2133:2:30","nodeType":"YulLiteral","src":"2133:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:30","nodeType":"YulIdentifier","src":"2122:3:30"},"nativeSrc":"2122:14:30","nodeType":"YulFunctionCall","src":"2122:14:30"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:30","nodeType":"YulLiteral","src":"2142:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:30","nodeType":"YulIdentifier","src":"2138:3:30"},"nativeSrc":"2138:7:30","nodeType":"YulFunctionCall","src":"2138:7:30"}],"functionName":{"name":"and","nativeSrc":"2118:3:30","nodeType":"YulIdentifier","src":"2118:3:30"},"nativeSrc":"2118:28:30","nodeType":"YulFunctionCall","src":"2118:28:30"},"variableNames":[{"name":"result","nativeSrc":"2108:6:30","nodeType":"YulIdentifier","src":"2108:6:30"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:30","nodeType":"YulTypedName","src":"2081:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:30","nodeType":"YulTypedName","src":"2091:6:30","type":""}],"src":"2050:102:30"},{"body":{"nativeSrc":"2250:285:30","nodeType":"YulBlock","src":"2250:285:30","statements":[{"nativeSrc":"2260:53:30","nodeType":"YulVariableDeclaration","src":"2260:53:30","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:30","nodeType":"YulIdentifier","src":"2307:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:30","nodeType":"YulIdentifier","src":"2274:32:30"},"nativeSrc":"2274:39:30","nodeType":"YulFunctionCall","src":"2274:39:30"},"variables":[{"name":"length","nativeSrc":"2264:6:30","nodeType":"YulTypedName","src":"2264:6:30","type":""}]},{"nativeSrc":"2322:78:30","nodeType":"YulAssignment","src":"2322:78:30","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:30","nodeType":"YulIdentifier","src":"2388:3:30"},{"name":"length","nativeSrc":"2393:6:30","nodeType":"YulIdentifier","src":"2393:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:30","nodeType":"YulIdentifier","src":"2329:58:30"},"nativeSrc":"2329:71:30","nodeType":"YulFunctionCall","src":"2329:71:30"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:30","nodeType":"YulIdentifier","src":"2322:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:30","nodeType":"YulIdentifier","src":"2448:5:30"},{"kind":"number","nativeSrc":"2455:4:30","nodeType":"YulLiteral","src":"2455:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:30","nodeType":"YulIdentifier","src":"2444:3:30"},"nativeSrc":"2444:16:30","nodeType":"YulFunctionCall","src":"2444:16:30"},{"name":"pos","nativeSrc":"2462:3:30","nodeType":"YulIdentifier","src":"2462:3:30"},{"name":"length","nativeSrc":"2467:6:30","nodeType":"YulIdentifier","src":"2467:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:30","nodeType":"YulIdentifier","src":"2409:34:30"},"nativeSrc":"2409:65:30","nodeType":"YulFunctionCall","src":"2409:65:30"},"nativeSrc":"2409:65:30","nodeType":"YulExpressionStatement","src":"2409:65:30"},{"nativeSrc":"2483:46:30","nodeType":"YulAssignment","src":"2483:46:30","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:30","nodeType":"YulIdentifier","src":"2494:3:30"},{"arguments":[{"name":"length","nativeSrc":"2521:6:30","nodeType":"YulIdentifier","src":"2521:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:30","nodeType":"YulIdentifier","src":"2499:21:30"},"nativeSrc":"2499:29:30","nodeType":"YulFunctionCall","src":"2499:29:30"}],"functionName":{"name":"add","nativeSrc":"2490:3:30","nodeType":"YulIdentifier","src":"2490:3:30"},"nativeSrc":"2490:39:30","nodeType":"YulFunctionCall","src":"2490:39:30"},"variableNames":[{"name":"end","nativeSrc":"2483:3:30","nodeType":"YulIdentifier","src":"2483:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:30","nodeType":"YulTypedName","src":"2231:5:30","type":""},{"name":"pos","nativeSrc":"2238:3:30","nodeType":"YulTypedName","src":"2238:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:30","nodeType":"YulTypedName","src":"2246:3:30","type":""}],"src":"2158:377:30"},{"body":{"nativeSrc":"2659:195:30","nodeType":"YulBlock","src":"2659:195:30","statements":[{"nativeSrc":"2669:26:30","nodeType":"YulAssignment","src":"2669:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:30","nodeType":"YulIdentifier","src":"2681:9:30"},{"kind":"number","nativeSrc":"2692:2:30","nodeType":"YulLiteral","src":"2692:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:30","nodeType":"YulIdentifier","src":"2677:3:30"},"nativeSrc":"2677:18:30","nodeType":"YulFunctionCall","src":"2677:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:30","nodeType":"YulIdentifier","src":"2669:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:30","nodeType":"YulIdentifier","src":"2716:9:30"},{"kind":"number","nativeSrc":"2727:1:30","nodeType":"YulLiteral","src":"2727:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:30","nodeType":"YulIdentifier","src":"2712:3:30"},"nativeSrc":"2712:17:30","nodeType":"YulFunctionCall","src":"2712:17:30"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:30","nodeType":"YulIdentifier","src":"2735:4:30"},{"name":"headStart","nativeSrc":"2741:9:30","nodeType":"YulIdentifier","src":"2741:9:30"}],"functionName":{"name":"sub","nativeSrc":"2731:3:30","nodeType":"YulIdentifier","src":"2731:3:30"},"nativeSrc":"2731:20:30","nodeType":"YulFunctionCall","src":"2731:20:30"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:30","nodeType":"YulIdentifier","src":"2705:6:30"},"nativeSrc":"2705:47:30","nodeType":"YulFunctionCall","src":"2705:47:30"},"nativeSrc":"2705:47:30","nodeType":"YulExpressionStatement","src":"2705:47:30"},{"nativeSrc":"2761:86:30","nodeType":"YulAssignment","src":"2761:86:30","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:30","nodeType":"YulIdentifier","src":"2833:6:30"},{"name":"tail","nativeSrc":"2842:4:30","nodeType":"YulIdentifier","src":"2842:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:30","nodeType":"YulIdentifier","src":"2769:63:30"},"nativeSrc":"2769:78:30","nodeType":"YulFunctionCall","src":"2769:78:30"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:30","nodeType":"YulIdentifier","src":"2761:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:30","nodeType":"YulTypedName","src":"2631:9:30","type":""},{"name":"value0","nativeSrc":"2643:6:30","nodeType":"YulTypedName","src":"2643:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:30","nodeType":"YulTypedName","src":"2654:4:30","type":""}],"src":"2541:313:30"},{"body":{"nativeSrc":"2905:81:30","nodeType":"YulBlock","src":"2905:81:30","statements":[{"nativeSrc":"2915:65:30","nodeType":"YulAssignment","src":"2915:65:30","value":{"arguments":[{"name":"value","nativeSrc":"2930:5:30","nodeType":"YulIdentifier","src":"2930:5:30"},{"kind":"number","nativeSrc":"2937:42:30","nodeType":"YulLiteral","src":"2937:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2926:3:30","nodeType":"YulIdentifier","src":"2926:3:30"},"nativeSrc":"2926:54:30","nodeType":"YulFunctionCall","src":"2926:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:30","nodeType":"YulIdentifier","src":"2915:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2860:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:30","nodeType":"YulTypedName","src":"2887:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:30","nodeType":"YulTypedName","src":"2897:7:30","type":""}],"src":"2860:126:30"},{"body":{"nativeSrc":"3037:51:30","nodeType":"YulBlock","src":"3037:51:30","statements":[{"nativeSrc":"3047:35:30","nodeType":"YulAssignment","src":"3047:35:30","value":{"arguments":[{"name":"value","nativeSrc":"3076:5:30","nodeType":"YulIdentifier","src":"3076:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3058:17:30","nodeType":"YulIdentifier","src":"3058:17:30"},"nativeSrc":"3058:24:30","nodeType":"YulFunctionCall","src":"3058:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"3047:7:30","nodeType":"YulIdentifier","src":"3047:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"2992:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3019:5:30","nodeType":"YulTypedName","src":"3019:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3029:7:30","nodeType":"YulTypedName","src":"3029:7:30","type":""}],"src":"2992:96:30"},{"body":{"nativeSrc":"3137:79:30","nodeType":"YulBlock","src":"3137:79:30","statements":[{"body":{"nativeSrc":"3194:16:30","nodeType":"YulBlock","src":"3194:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3203:1:30","nodeType":"YulLiteral","src":"3203:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3206:1:30","nodeType":"YulLiteral","src":"3206:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3196:6:30","nodeType":"YulIdentifier","src":"3196:6:30"},"nativeSrc":"3196:12:30","nodeType":"YulFunctionCall","src":"3196:12:30"},"nativeSrc":"3196:12:30","nodeType":"YulExpressionStatement","src":"3196:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3160:5:30","nodeType":"YulIdentifier","src":"3160:5:30"},{"arguments":[{"name":"value","nativeSrc":"3185:5:30","nodeType":"YulIdentifier","src":"3185:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3167:17:30","nodeType":"YulIdentifier","src":"3167:17:30"},"nativeSrc":"3167:24:30","nodeType":"YulFunctionCall","src":"3167:24:30"}],"functionName":{"name":"eq","nativeSrc":"3157:2:30","nodeType":"YulIdentifier","src":"3157:2:30"},"nativeSrc":"3157:35:30","nodeType":"YulFunctionCall","src":"3157:35:30"}],"functionName":{"name":"iszero","nativeSrc":"3150:6:30","nodeType":"YulIdentifier","src":"3150:6:30"},"nativeSrc":"3150:43:30","nodeType":"YulFunctionCall","src":"3150:43:30"},"nativeSrc":"3147:63:30","nodeType":"YulIf","src":"3147:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"3094:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3130:5:30","nodeType":"YulTypedName","src":"3130:5:30","type":""}],"src":"3094:122:30"},{"body":{"nativeSrc":"3274:87:30","nodeType":"YulBlock","src":"3274:87:30","statements":[{"nativeSrc":"3284:29:30","nodeType":"YulAssignment","src":"3284:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"3306:6:30","nodeType":"YulIdentifier","src":"3306:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"3293:12:30","nodeType":"YulIdentifier","src":"3293:12:30"},"nativeSrc":"3293:20:30","nodeType":"YulFunctionCall","src":"3293:20:30"},"variableNames":[{"name":"value","nativeSrc":"3284:5:30","nodeType":"YulIdentifier","src":"3284:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3349:5:30","nodeType":"YulIdentifier","src":"3349:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3322:26:30","nodeType":"YulIdentifier","src":"3322:26:30"},"nativeSrc":"3322:33:30","nodeType":"YulFunctionCall","src":"3322:33:30"},"nativeSrc":"3322:33:30","nodeType":"YulExpressionStatement","src":"3322:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"3222:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3252:6:30","nodeType":"YulTypedName","src":"3252:6:30","type":""},{"name":"end","nativeSrc":"3260:3:30","nodeType":"YulTypedName","src":"3260:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3268:5:30","nodeType":"YulTypedName","src":"3268:5:30","type":""}],"src":"3222:139:30"},{"body":{"nativeSrc":"3412:32:30","nodeType":"YulBlock","src":"3412:32:30","statements":[{"nativeSrc":"3422:16:30","nodeType":"YulAssignment","src":"3422:16:30","value":{"name":"value","nativeSrc":"3433:5:30","nodeType":"YulIdentifier","src":"3433:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"3422:7:30","nodeType":"YulIdentifier","src":"3422:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3367:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3394:5:30","nodeType":"YulTypedName","src":"3394:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3404:7:30","nodeType":"YulTypedName","src":"3404:7:30","type":""}],"src":"3367:77:30"},{"body":{"nativeSrc":"3493:79:30","nodeType":"YulBlock","src":"3493:79:30","statements":[{"body":{"nativeSrc":"3550:16:30","nodeType":"YulBlock","src":"3550:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3559:1:30","nodeType":"YulLiteral","src":"3559:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3562:1:30","nodeType":"YulLiteral","src":"3562:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3552:6:30","nodeType":"YulIdentifier","src":"3552:6:30"},"nativeSrc":"3552:12:30","nodeType":"YulFunctionCall","src":"3552:12:30"},"nativeSrc":"3552:12:30","nodeType":"YulExpressionStatement","src":"3552:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3516:5:30","nodeType":"YulIdentifier","src":"3516:5:30"},{"arguments":[{"name":"value","nativeSrc":"3541:5:30","nodeType":"YulIdentifier","src":"3541:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3523:17:30","nodeType":"YulIdentifier","src":"3523:17:30"},"nativeSrc":"3523:24:30","nodeType":"YulFunctionCall","src":"3523:24:30"}],"functionName":{"name":"eq","nativeSrc":"3513:2:30","nodeType":"YulIdentifier","src":"3513:2:30"},"nativeSrc":"3513:35:30","nodeType":"YulFunctionCall","src":"3513:35:30"}],"functionName":{"name":"iszero","nativeSrc":"3506:6:30","nodeType":"YulIdentifier","src":"3506:6:30"},"nativeSrc":"3506:43:30","nodeType":"YulFunctionCall","src":"3506:43:30"},"nativeSrc":"3503:63:30","nodeType":"YulIf","src":"3503:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"3450:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3486:5:30","nodeType":"YulTypedName","src":"3486:5:30","type":""}],"src":"3450:122:30"},{"body":{"nativeSrc":"3630:87:30","nodeType":"YulBlock","src":"3630:87:30","statements":[{"nativeSrc":"3640:29:30","nodeType":"YulAssignment","src":"3640:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"3662:6:30","nodeType":"YulIdentifier","src":"3662:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"3649:12:30","nodeType":"YulIdentifier","src":"3649:12:30"},"nativeSrc":"3649:20:30","nodeType":"YulFunctionCall","src":"3649:20:30"},"variableNames":[{"name":"value","nativeSrc":"3640:5:30","nodeType":"YulIdentifier","src":"3640:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3705:5:30","nodeType":"YulIdentifier","src":"3705:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3678:26:30","nodeType":"YulIdentifier","src":"3678:26:30"},"nativeSrc":"3678:33:30","nodeType":"YulFunctionCall","src":"3678:33:30"},"nativeSrc":"3678:33:30","nodeType":"YulExpressionStatement","src":"3678:33:30"}]},"name":"abi_decode_t_uint256","nativeSrc":"3578:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3608:6:30","nodeType":"YulTypedName","src":"3608:6:30","type":""},{"name":"end","nativeSrc":"3616:3:30","nodeType":"YulTypedName","src":"3616:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3624:5:30","nodeType":"YulTypedName","src":"3624:5:30","type":""}],"src":"3578:139:30"},{"body":{"nativeSrc":"3806:391:30","nodeType":"YulBlock","src":"3806:391:30","statements":[{"body":{"nativeSrc":"3852:83:30","nodeType":"YulBlock","src":"3852:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3854:77:30","nodeType":"YulIdentifier","src":"3854:77:30"},"nativeSrc":"3854:79:30","nodeType":"YulFunctionCall","src":"3854:79:30"},"nativeSrc":"3854:79:30","nodeType":"YulExpressionStatement","src":"3854:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3827:7:30","nodeType":"YulIdentifier","src":"3827:7:30"},{"name":"headStart","nativeSrc":"3836:9:30","nodeType":"YulIdentifier","src":"3836:9:30"}],"functionName":{"name":"sub","nativeSrc":"3823:3:30","nodeType":"YulIdentifier","src":"3823:3:30"},"nativeSrc":"3823:23:30","nodeType":"YulFunctionCall","src":"3823:23:30"},{"kind":"number","nativeSrc":"3848:2:30","nodeType":"YulLiteral","src":"3848:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3819:3:30","nodeType":"YulIdentifier","src":"3819:3:30"},"nativeSrc":"3819:32:30","nodeType":"YulFunctionCall","src":"3819:32:30"},"nativeSrc":"3816:119:30","nodeType":"YulIf","src":"3816:119:30"},{"nativeSrc":"3945:117:30","nodeType":"YulBlock","src":"3945:117:30","statements":[{"nativeSrc":"3960:15:30","nodeType":"YulVariableDeclaration","src":"3960:15:30","value":{"kind":"number","nativeSrc":"3974:1:30","nodeType":"YulLiteral","src":"3974:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3964:6:30","nodeType":"YulTypedName","src":"3964:6:30","type":""}]},{"nativeSrc":"3989:63:30","nodeType":"YulAssignment","src":"3989:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4024:9:30","nodeType":"YulIdentifier","src":"4024:9:30"},{"name":"offset","nativeSrc":"4035:6:30","nodeType":"YulIdentifier","src":"4035:6:30"}],"functionName":{"name":"add","nativeSrc":"4020:3:30","nodeType":"YulIdentifier","src":"4020:3:30"},"nativeSrc":"4020:22:30","nodeType":"YulFunctionCall","src":"4020:22:30"},{"name":"dataEnd","nativeSrc":"4044:7:30","nodeType":"YulIdentifier","src":"4044:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3999:20:30","nodeType":"YulIdentifier","src":"3999:20:30"},"nativeSrc":"3999:53:30","nodeType":"YulFunctionCall","src":"3999:53:30"},"variableNames":[{"name":"value0","nativeSrc":"3989:6:30","nodeType":"YulIdentifier","src":"3989:6:30"}]}]},{"nativeSrc":"4072:118:30","nodeType":"YulBlock","src":"4072:118:30","statements":[{"nativeSrc":"4087:16:30","nodeType":"YulVariableDeclaration","src":"4087:16:30","value":{"kind":"number","nativeSrc":"4101:2:30","nodeType":"YulLiteral","src":"4101:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4091:6:30","nodeType":"YulTypedName","src":"4091:6:30","type":""}]},{"nativeSrc":"4117:63:30","nodeType":"YulAssignment","src":"4117:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4152:9:30","nodeType":"YulIdentifier","src":"4152:9:30"},{"name":"offset","nativeSrc":"4163:6:30","nodeType":"YulIdentifier","src":"4163:6:30"}],"functionName":{"name":"add","nativeSrc":"4148:3:30","nodeType":"YulIdentifier","src":"4148:3:30"},"nativeSrc":"4148:22:30","nodeType":"YulFunctionCall","src":"4148:22:30"},{"name":"dataEnd","nativeSrc":"4172:7:30","nodeType":"YulIdentifier","src":"4172:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4127:20:30","nodeType":"YulIdentifier","src":"4127:20:30"},"nativeSrc":"4127:53:30","nodeType":"YulFunctionCall","src":"4127:53:30"},"variableNames":[{"name":"value1","nativeSrc":"4117:6:30","nodeType":"YulIdentifier","src":"4117:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3723:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3768:9:30","nodeType":"YulTypedName","src":"3768:9:30","type":""},{"name":"dataEnd","nativeSrc":"3779:7:30","nodeType":"YulTypedName","src":"3779:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3791:6:30","nodeType":"YulTypedName","src":"3791:6:30","type":""},{"name":"value1","nativeSrc":"3799:6:30","nodeType":"YulTypedName","src":"3799:6:30","type":""}],"src":"3723:474:30"},{"body":{"nativeSrc":"4269:263:30","nodeType":"YulBlock","src":"4269:263:30","statements":[{"body":{"nativeSrc":"4315:83:30","nodeType":"YulBlock","src":"4315:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4317:77:30","nodeType":"YulIdentifier","src":"4317:77:30"},"nativeSrc":"4317:79:30","nodeType":"YulFunctionCall","src":"4317:79:30"},"nativeSrc":"4317:79:30","nodeType":"YulExpressionStatement","src":"4317:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4290:7:30","nodeType":"YulIdentifier","src":"4290:7:30"},{"name":"headStart","nativeSrc":"4299:9:30","nodeType":"YulIdentifier","src":"4299:9:30"}],"functionName":{"name":"sub","nativeSrc":"4286:3:30","nodeType":"YulIdentifier","src":"4286:3:30"},"nativeSrc":"4286:23:30","nodeType":"YulFunctionCall","src":"4286:23:30"},{"kind":"number","nativeSrc":"4311:2:30","nodeType":"YulLiteral","src":"4311:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4282:3:30","nodeType":"YulIdentifier","src":"4282:3:30"},"nativeSrc":"4282:32:30","nodeType":"YulFunctionCall","src":"4282:32:30"},"nativeSrc":"4279:119:30","nodeType":"YulIf","src":"4279:119:30"},{"nativeSrc":"4408:117:30","nodeType":"YulBlock","src":"4408:117:30","statements":[{"nativeSrc":"4423:15:30","nodeType":"YulVariableDeclaration","src":"4423:15:30","value":{"kind":"number","nativeSrc":"4437:1:30","nodeType":"YulLiteral","src":"4437:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4427:6:30","nodeType":"YulTypedName","src":"4427:6:30","type":""}]},{"nativeSrc":"4452:63:30","nodeType":"YulAssignment","src":"4452:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4487:9:30","nodeType":"YulIdentifier","src":"4487:9:30"},{"name":"offset","nativeSrc":"4498:6:30","nodeType":"YulIdentifier","src":"4498:6:30"}],"functionName":{"name":"add","nativeSrc":"4483:3:30","nodeType":"YulIdentifier","src":"4483:3:30"},"nativeSrc":"4483:22:30","nodeType":"YulFunctionCall","src":"4483:22:30"},{"name":"dataEnd","nativeSrc":"4507:7:30","nodeType":"YulIdentifier","src":"4507:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4462:20:30","nodeType":"YulIdentifier","src":"4462:20:30"},"nativeSrc":"4462:53:30","nodeType":"YulFunctionCall","src":"4462:53:30"},"variableNames":[{"name":"value0","nativeSrc":"4452:6:30","nodeType":"YulIdentifier","src":"4452:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4203:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4239:9:30","nodeType":"YulTypedName","src":"4239:9:30","type":""},{"name":"dataEnd","nativeSrc":"4250:7:30","nodeType":"YulTypedName","src":"4250:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4262:6:30","nodeType":"YulTypedName","src":"4262:6:30","type":""}],"src":"4203:329:30"},{"body":{"nativeSrc":"4603:53:30","nodeType":"YulBlock","src":"4603:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4620:3:30","nodeType":"YulIdentifier","src":"4620:3:30"},{"arguments":[{"name":"value","nativeSrc":"4643:5:30","nodeType":"YulIdentifier","src":"4643:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4625:17:30","nodeType":"YulIdentifier","src":"4625:17:30"},"nativeSrc":"4625:24:30","nodeType":"YulFunctionCall","src":"4625:24:30"}],"functionName":{"name":"mstore","nativeSrc":"4613:6:30","nodeType":"YulIdentifier","src":"4613:6:30"},"nativeSrc":"4613:37:30","nodeType":"YulFunctionCall","src":"4613:37:30"},"nativeSrc":"4613:37:30","nodeType":"YulExpressionStatement","src":"4613:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4538:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4591:5:30","nodeType":"YulTypedName","src":"4591:5:30","type":""},{"name":"pos","nativeSrc":"4598:3:30","nodeType":"YulTypedName","src":"4598:3:30","type":""}],"src":"4538:118:30"},{"body":{"nativeSrc":"4760:124:30","nodeType":"YulBlock","src":"4760:124:30","statements":[{"nativeSrc":"4770:26:30","nodeType":"YulAssignment","src":"4770:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4782:9:30","nodeType":"YulIdentifier","src":"4782:9:30"},{"kind":"number","nativeSrc":"4793:2:30","nodeType":"YulLiteral","src":"4793:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4778:3:30","nodeType":"YulIdentifier","src":"4778:3:30"},"nativeSrc":"4778:18:30","nodeType":"YulFunctionCall","src":"4778:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4770:4:30","nodeType":"YulIdentifier","src":"4770:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4850:6:30","nodeType":"YulIdentifier","src":"4850:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4863:9:30","nodeType":"YulIdentifier","src":"4863:9:30"},{"kind":"number","nativeSrc":"4874:1:30","nodeType":"YulLiteral","src":"4874:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4859:3:30","nodeType":"YulIdentifier","src":"4859:3:30"},"nativeSrc":"4859:17:30","nodeType":"YulFunctionCall","src":"4859:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4806:43:30","nodeType":"YulIdentifier","src":"4806:43:30"},"nativeSrc":"4806:71:30","nodeType":"YulFunctionCall","src":"4806:71:30"},"nativeSrc":"4806:71:30","nodeType":"YulExpressionStatement","src":"4806:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4662:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4732:9:30","nodeType":"YulTypedName","src":"4732:9:30","type":""},{"name":"value0","nativeSrc":"4744:6:30","nodeType":"YulTypedName","src":"4744:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4755:4:30","nodeType":"YulTypedName","src":"4755:4:30","type":""}],"src":"4662:222:30"},{"body":{"nativeSrc":"4990:519:30","nodeType":"YulBlock","src":"4990:519:30","statements":[{"body":{"nativeSrc":"5036:83:30","nodeType":"YulBlock","src":"5036:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5038:77:30","nodeType":"YulIdentifier","src":"5038:77:30"},"nativeSrc":"5038:79:30","nodeType":"YulFunctionCall","src":"5038:79:30"},"nativeSrc":"5038:79:30","nodeType":"YulExpressionStatement","src":"5038:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5011:7:30","nodeType":"YulIdentifier","src":"5011:7:30"},{"name":"headStart","nativeSrc":"5020:9:30","nodeType":"YulIdentifier","src":"5020:9:30"}],"functionName":{"name":"sub","nativeSrc":"5007:3:30","nodeType":"YulIdentifier","src":"5007:3:30"},"nativeSrc":"5007:23:30","nodeType":"YulFunctionCall","src":"5007:23:30"},{"kind":"number","nativeSrc":"5032:2:30","nodeType":"YulLiteral","src":"5032:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5003:3:30","nodeType":"YulIdentifier","src":"5003:3:30"},"nativeSrc":"5003:32:30","nodeType":"YulFunctionCall","src":"5003:32:30"},"nativeSrc":"5000:119:30","nodeType":"YulIf","src":"5000:119:30"},{"nativeSrc":"5129:117:30","nodeType":"YulBlock","src":"5129:117:30","statements":[{"nativeSrc":"5144:15:30","nodeType":"YulVariableDeclaration","src":"5144:15:30","value":{"kind":"number","nativeSrc":"5158:1:30","nodeType":"YulLiteral","src":"5158:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5148:6:30","nodeType":"YulTypedName","src":"5148:6:30","type":""}]},{"nativeSrc":"5173:63:30","nodeType":"YulAssignment","src":"5173:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5208:9:30","nodeType":"YulIdentifier","src":"5208:9:30"},{"name":"offset","nativeSrc":"5219:6:30","nodeType":"YulIdentifier","src":"5219:6:30"}],"functionName":{"name":"add","nativeSrc":"5204:3:30","nodeType":"YulIdentifier","src":"5204:3:30"},"nativeSrc":"5204:22:30","nodeType":"YulFunctionCall","src":"5204:22:30"},{"name":"dataEnd","nativeSrc":"5228:7:30","nodeType":"YulIdentifier","src":"5228:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5183:20:30","nodeType":"YulIdentifier","src":"5183:20:30"},"nativeSrc":"5183:53:30","nodeType":"YulFunctionCall","src":"5183:53:30"},"variableNames":[{"name":"value0","nativeSrc":"5173:6:30","nodeType":"YulIdentifier","src":"5173:6:30"}]}]},{"nativeSrc":"5256:118:30","nodeType":"YulBlock","src":"5256:118:30","statements":[{"nativeSrc":"5271:16:30","nodeType":"YulVariableDeclaration","src":"5271:16:30","value":{"kind":"number","nativeSrc":"5285:2:30","nodeType":"YulLiteral","src":"5285:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5275:6:30","nodeType":"YulTypedName","src":"5275:6:30","type":""}]},{"nativeSrc":"5301:63:30","nodeType":"YulAssignment","src":"5301:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5336:9:30","nodeType":"YulIdentifier","src":"5336:9:30"},{"name":"offset","nativeSrc":"5347:6:30","nodeType":"YulIdentifier","src":"5347:6:30"}],"functionName":{"name":"add","nativeSrc":"5332:3:30","nodeType":"YulIdentifier","src":"5332:3:30"},"nativeSrc":"5332:22:30","nodeType":"YulFunctionCall","src":"5332:22:30"},{"name":"dataEnd","nativeSrc":"5356:7:30","nodeType":"YulIdentifier","src":"5356:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5311:20:30","nodeType":"YulIdentifier","src":"5311:20:30"},"nativeSrc":"5311:53:30","nodeType":"YulFunctionCall","src":"5311:53:30"},"variableNames":[{"name":"value1","nativeSrc":"5301:6:30","nodeType":"YulIdentifier","src":"5301:6:30"}]}]},{"nativeSrc":"5384:118:30","nodeType":"YulBlock","src":"5384:118:30","statements":[{"nativeSrc":"5399:16:30","nodeType":"YulVariableDeclaration","src":"5399:16:30","value":{"kind":"number","nativeSrc":"5413:2:30","nodeType":"YulLiteral","src":"5413:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5403:6:30","nodeType":"YulTypedName","src":"5403:6:30","type":""}]},{"nativeSrc":"5429:63:30","nodeType":"YulAssignment","src":"5429:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5464:9:30","nodeType":"YulIdentifier","src":"5464:9:30"},{"name":"offset","nativeSrc":"5475:6:30","nodeType":"YulIdentifier","src":"5475:6:30"}],"functionName":{"name":"add","nativeSrc":"5460:3:30","nodeType":"YulIdentifier","src":"5460:3:30"},"nativeSrc":"5460:22:30","nodeType":"YulFunctionCall","src":"5460:22:30"},{"name":"dataEnd","nativeSrc":"5484:7:30","nodeType":"YulIdentifier","src":"5484:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5439:20:30","nodeType":"YulIdentifier","src":"5439:20:30"},"nativeSrc":"5439:53:30","nodeType":"YulFunctionCall","src":"5439:53:30"},"variableNames":[{"name":"value2","nativeSrc":"5429:6:30","nodeType":"YulIdentifier","src":"5429:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4890:619:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4944:9:30","nodeType":"YulTypedName","src":"4944:9:30","type":""},{"name":"dataEnd","nativeSrc":"4955:7:30","nodeType":"YulTypedName","src":"4955:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4967:6:30","nodeType":"YulTypedName","src":"4967:6:30","type":""},{"name":"value1","nativeSrc":"4975:6:30","nodeType":"YulTypedName","src":"4975:6:30","type":""},{"name":"value2","nativeSrc":"4983:6:30","nodeType":"YulTypedName","src":"4983:6:30","type":""}],"src":"4890:619:30"},{"body":{"nativeSrc":"5560:32:30","nodeType":"YulBlock","src":"5560:32:30","statements":[{"nativeSrc":"5570:16:30","nodeType":"YulAssignment","src":"5570:16:30","value":{"name":"value","nativeSrc":"5581:5:30","nodeType":"YulIdentifier","src":"5581:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"5570:7:30","nodeType":"YulIdentifier","src":"5570:7:30"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5515:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5542:5:30","nodeType":"YulTypedName","src":"5542:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5552:7:30","nodeType":"YulTypedName","src":"5552:7:30","type":""}],"src":"5515:77:30"},{"body":{"nativeSrc":"5641:79:30","nodeType":"YulBlock","src":"5641:79:30","statements":[{"body":{"nativeSrc":"5698:16:30","nodeType":"YulBlock","src":"5698:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5707:1:30","nodeType":"YulLiteral","src":"5707:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5710:1:30","nodeType":"YulLiteral","src":"5710:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5700:6:30","nodeType":"YulIdentifier","src":"5700:6:30"},"nativeSrc":"5700:12:30","nodeType":"YulFunctionCall","src":"5700:12:30"},"nativeSrc":"5700:12:30","nodeType":"YulExpressionStatement","src":"5700:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5664:5:30","nodeType":"YulIdentifier","src":"5664:5:30"},{"arguments":[{"name":"value","nativeSrc":"5689:5:30","nodeType":"YulIdentifier","src":"5689:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5671:17:30","nodeType":"YulIdentifier","src":"5671:17:30"},"nativeSrc":"5671:24:30","nodeType":"YulFunctionCall","src":"5671:24:30"}],"functionName":{"name":"eq","nativeSrc":"5661:2:30","nodeType":"YulIdentifier","src":"5661:2:30"},"nativeSrc":"5661:35:30","nodeType":"YulFunctionCall","src":"5661:35:30"}],"functionName":{"name":"iszero","nativeSrc":"5654:6:30","nodeType":"YulIdentifier","src":"5654:6:30"},"nativeSrc":"5654:43:30","nodeType":"YulFunctionCall","src":"5654:43:30"},"nativeSrc":"5651:63:30","nodeType":"YulIf","src":"5651:63:30"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5598:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5634:5:30","nodeType":"YulTypedName","src":"5634:5:30","type":""}],"src":"5598:122:30"},{"body":{"nativeSrc":"5778:87:30","nodeType":"YulBlock","src":"5778:87:30","statements":[{"nativeSrc":"5788:29:30","nodeType":"YulAssignment","src":"5788:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"5810:6:30","nodeType":"YulIdentifier","src":"5810:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"5797:12:30","nodeType":"YulIdentifier","src":"5797:12:30"},"nativeSrc":"5797:20:30","nodeType":"YulFunctionCall","src":"5797:20:30"},"variableNames":[{"name":"value","nativeSrc":"5788:5:30","nodeType":"YulIdentifier","src":"5788:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5853:5:30","nodeType":"YulIdentifier","src":"5853:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5826:26:30","nodeType":"YulIdentifier","src":"5826:26:30"},"nativeSrc":"5826:33:30","nodeType":"YulFunctionCall","src":"5826:33:30"},"nativeSrc":"5826:33:30","nodeType":"YulExpressionStatement","src":"5826:33:30"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5726:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5756:6:30","nodeType":"YulTypedName","src":"5756:6:30","type":""},{"name":"end","nativeSrc":"5764:3:30","nodeType":"YulTypedName","src":"5764:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5772:5:30","nodeType":"YulTypedName","src":"5772:5:30","type":""}],"src":"5726:139:30"},{"body":{"nativeSrc":"5937:263:30","nodeType":"YulBlock","src":"5937:263:30","statements":[{"body":{"nativeSrc":"5983:83:30","nodeType":"YulBlock","src":"5983:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5985:77:30","nodeType":"YulIdentifier","src":"5985:77:30"},"nativeSrc":"5985:79:30","nodeType":"YulFunctionCall","src":"5985:79:30"},"nativeSrc":"5985:79:30","nodeType":"YulExpressionStatement","src":"5985:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5958:7:30","nodeType":"YulIdentifier","src":"5958:7:30"},{"name":"headStart","nativeSrc":"5967:9:30","nodeType":"YulIdentifier","src":"5967:9:30"}],"functionName":{"name":"sub","nativeSrc":"5954:3:30","nodeType":"YulIdentifier","src":"5954:3:30"},"nativeSrc":"5954:23:30","nodeType":"YulFunctionCall","src":"5954:23:30"},{"kind":"number","nativeSrc":"5979:2:30","nodeType":"YulLiteral","src":"5979:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5950:3:30","nodeType":"YulIdentifier","src":"5950:3:30"},"nativeSrc":"5950:32:30","nodeType":"YulFunctionCall","src":"5950:32:30"},"nativeSrc":"5947:119:30","nodeType":"YulIf","src":"5947:119:30"},{"nativeSrc":"6076:117:30","nodeType":"YulBlock","src":"6076:117:30","statements":[{"nativeSrc":"6091:15:30","nodeType":"YulVariableDeclaration","src":"6091:15:30","value":{"kind":"number","nativeSrc":"6105:1:30","nodeType":"YulLiteral","src":"6105:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6095:6:30","nodeType":"YulTypedName","src":"6095:6:30","type":""}]},{"nativeSrc":"6120:63:30","nodeType":"YulAssignment","src":"6120:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6155:9:30","nodeType":"YulIdentifier","src":"6155:9:30"},{"name":"offset","nativeSrc":"6166:6:30","nodeType":"YulIdentifier","src":"6166:6:30"}],"functionName":{"name":"add","nativeSrc":"6151:3:30","nodeType":"YulIdentifier","src":"6151:3:30"},"nativeSrc":"6151:22:30","nodeType":"YulFunctionCall","src":"6151:22:30"},{"name":"dataEnd","nativeSrc":"6175:7:30","nodeType":"YulIdentifier","src":"6175:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6130:20:30","nodeType":"YulIdentifier","src":"6130:20:30"},"nativeSrc":"6130:53:30","nodeType":"YulFunctionCall","src":"6130:53:30"},"variableNames":[{"name":"value0","nativeSrc":"6120:6:30","nodeType":"YulIdentifier","src":"6120:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5871:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5907:9:30","nodeType":"YulTypedName","src":"5907:9:30","type":""},{"name":"dataEnd","nativeSrc":"5918:7:30","nodeType":"YulTypedName","src":"5918:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5930:6:30","nodeType":"YulTypedName","src":"5930:6:30","type":""}],"src":"5871:329:30"},{"body":{"nativeSrc":"6271:53:30","nodeType":"YulBlock","src":"6271:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6288:3:30","nodeType":"YulIdentifier","src":"6288:3:30"},{"arguments":[{"name":"value","nativeSrc":"6311:5:30","nodeType":"YulIdentifier","src":"6311:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6293:17:30","nodeType":"YulIdentifier","src":"6293:17:30"},"nativeSrc":"6293:24:30","nodeType":"YulFunctionCall","src":"6293:24:30"}],"functionName":{"name":"mstore","nativeSrc":"6281:6:30","nodeType":"YulIdentifier","src":"6281:6:30"},"nativeSrc":"6281:37:30","nodeType":"YulFunctionCall","src":"6281:37:30"},"nativeSrc":"6281:37:30","nodeType":"YulExpressionStatement","src":"6281:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6206:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6259:5:30","nodeType":"YulTypedName","src":"6259:5:30","type":""},{"name":"pos","nativeSrc":"6266:3:30","nodeType":"YulTypedName","src":"6266:3:30","type":""}],"src":"6206:118:30"},{"body":{"nativeSrc":"6428:124:30","nodeType":"YulBlock","src":"6428:124:30","statements":[{"nativeSrc":"6438:26:30","nodeType":"YulAssignment","src":"6438:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6450:9:30","nodeType":"YulIdentifier","src":"6450:9:30"},{"kind":"number","nativeSrc":"6461:2:30","nodeType":"YulLiteral","src":"6461:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6446:3:30","nodeType":"YulIdentifier","src":"6446:3:30"},"nativeSrc":"6446:18:30","nodeType":"YulFunctionCall","src":"6446:18:30"},"variableNames":[{"name":"tail","nativeSrc":"6438:4:30","nodeType":"YulIdentifier","src":"6438:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6518:6:30","nodeType":"YulIdentifier","src":"6518:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6531:9:30","nodeType":"YulIdentifier","src":"6531:9:30"},{"kind":"number","nativeSrc":"6542:1:30","nodeType":"YulLiteral","src":"6542:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6527:3:30","nodeType":"YulIdentifier","src":"6527:3:30"},"nativeSrc":"6527:17:30","nodeType":"YulFunctionCall","src":"6527:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6474:43:30","nodeType":"YulIdentifier","src":"6474:43:30"},"nativeSrc":"6474:71:30","nodeType":"YulFunctionCall","src":"6474:71:30"},"nativeSrc":"6474:71:30","nodeType":"YulExpressionStatement","src":"6474:71:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6330:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6400:9:30","nodeType":"YulTypedName","src":"6400:9:30","type":""},{"name":"value0","nativeSrc":"6412:6:30","nodeType":"YulTypedName","src":"6412:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6423:4:30","nodeType":"YulTypedName","src":"6423:4:30","type":""}],"src":"6330:222:30"},{"body":{"nativeSrc":"6623:53:30","nodeType":"YulBlock","src":"6623:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6640:3:30","nodeType":"YulIdentifier","src":"6640:3:30"},{"arguments":[{"name":"value","nativeSrc":"6663:5:30","nodeType":"YulIdentifier","src":"6663:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6645:17:30","nodeType":"YulIdentifier","src":"6645:17:30"},"nativeSrc":"6645:24:30","nodeType":"YulFunctionCall","src":"6645:24:30"}],"functionName":{"name":"mstore","nativeSrc":"6633:6:30","nodeType":"YulIdentifier","src":"6633:6:30"},"nativeSrc":"6633:37:30","nodeType":"YulFunctionCall","src":"6633:37:30"},"nativeSrc":"6633:37:30","nodeType":"YulExpressionStatement","src":"6633:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6558:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6611:5:30","nodeType":"YulTypedName","src":"6611:5:30","type":""},{"name":"pos","nativeSrc":"6618:3:30","nodeType":"YulTypedName","src":"6618:3:30","type":""}],"src":"6558:118:30"},{"body":{"nativeSrc":"6780:124:30","nodeType":"YulBlock","src":"6780:124:30","statements":[{"nativeSrc":"6790:26:30","nodeType":"YulAssignment","src":"6790:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6802:9:30","nodeType":"YulIdentifier","src":"6802:9:30"},{"kind":"number","nativeSrc":"6813:2:30","nodeType":"YulLiteral","src":"6813:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6798:3:30","nodeType":"YulIdentifier","src":"6798:3:30"},"nativeSrc":"6798:18:30","nodeType":"YulFunctionCall","src":"6798:18:30"},"variableNames":[{"name":"tail","nativeSrc":"6790:4:30","nodeType":"YulIdentifier","src":"6790:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6870:6:30","nodeType":"YulIdentifier","src":"6870:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6883:9:30","nodeType":"YulIdentifier","src":"6883:9:30"},{"kind":"number","nativeSrc":"6894:1:30","nodeType":"YulLiteral","src":"6894:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6879:3:30","nodeType":"YulIdentifier","src":"6879:3:30"},"nativeSrc":"6879:17:30","nodeType":"YulFunctionCall","src":"6879:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6826:43:30","nodeType":"YulIdentifier","src":"6826:43:30"},"nativeSrc":"6826:71:30","nodeType":"YulFunctionCall","src":"6826:71:30"},"nativeSrc":"6826:71:30","nodeType":"YulExpressionStatement","src":"6826:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6682:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6752:9:30","nodeType":"YulTypedName","src":"6752:9:30","type":""},{"name":"value0","nativeSrc":"6764:6:30","nodeType":"YulTypedName","src":"6764:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6775:4:30","nodeType":"YulTypedName","src":"6775:4:30","type":""}],"src":"6682:222:30"},{"body":{"nativeSrc":"6993:391:30","nodeType":"YulBlock","src":"6993:391:30","statements":[{"body":{"nativeSrc":"7039:83:30","nodeType":"YulBlock","src":"7039:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7041:77:30","nodeType":"YulIdentifier","src":"7041:77:30"},"nativeSrc":"7041:79:30","nodeType":"YulFunctionCall","src":"7041:79:30"},"nativeSrc":"7041:79:30","nodeType":"YulExpressionStatement","src":"7041:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7014:7:30","nodeType":"YulIdentifier","src":"7014:7:30"},{"name":"headStart","nativeSrc":"7023:9:30","nodeType":"YulIdentifier","src":"7023:9:30"}],"functionName":{"name":"sub","nativeSrc":"7010:3:30","nodeType":"YulIdentifier","src":"7010:3:30"},"nativeSrc":"7010:23:30","nodeType":"YulFunctionCall","src":"7010:23:30"},{"kind":"number","nativeSrc":"7035:2:30","nodeType":"YulLiteral","src":"7035:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7006:3:30","nodeType":"YulIdentifier","src":"7006:3:30"},"nativeSrc":"7006:32:30","nodeType":"YulFunctionCall","src":"7006:32:30"},"nativeSrc":"7003:119:30","nodeType":"YulIf","src":"7003:119:30"},{"nativeSrc":"7132:117:30","nodeType":"YulBlock","src":"7132:117:30","statements":[{"nativeSrc":"7147:15:30","nodeType":"YulVariableDeclaration","src":"7147:15:30","value":{"kind":"number","nativeSrc":"7161:1:30","nodeType":"YulLiteral","src":"7161:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7151:6:30","nodeType":"YulTypedName","src":"7151:6:30","type":""}]},{"nativeSrc":"7176:63:30","nodeType":"YulAssignment","src":"7176:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7211:9:30","nodeType":"YulIdentifier","src":"7211:9:30"},{"name":"offset","nativeSrc":"7222:6:30","nodeType":"YulIdentifier","src":"7222:6:30"}],"functionName":{"name":"add","nativeSrc":"7207:3:30","nodeType":"YulIdentifier","src":"7207:3:30"},"nativeSrc":"7207:22:30","nodeType":"YulFunctionCall","src":"7207:22:30"},{"name":"dataEnd","nativeSrc":"7231:7:30","nodeType":"YulIdentifier","src":"7231:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7186:20:30","nodeType":"YulIdentifier","src":"7186:20:30"},"nativeSrc":"7186:53:30","nodeType":"YulFunctionCall","src":"7186:53:30"},"variableNames":[{"name":"value0","nativeSrc":"7176:6:30","nodeType":"YulIdentifier","src":"7176:6:30"}]}]},{"nativeSrc":"7259:118:30","nodeType":"YulBlock","src":"7259:118:30","statements":[{"nativeSrc":"7274:16:30","nodeType":"YulVariableDeclaration","src":"7274:16:30","value":{"kind":"number","nativeSrc":"7288:2:30","nodeType":"YulLiteral","src":"7288:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7278:6:30","nodeType":"YulTypedName","src":"7278:6:30","type":""}]},{"nativeSrc":"7304:63:30","nodeType":"YulAssignment","src":"7304:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7339:9:30","nodeType":"YulIdentifier","src":"7339:9:30"},{"name":"offset","nativeSrc":"7350:6:30","nodeType":"YulIdentifier","src":"7350:6:30"}],"functionName":{"name":"add","nativeSrc":"7335:3:30","nodeType":"YulIdentifier","src":"7335:3:30"},"nativeSrc":"7335:22:30","nodeType":"YulFunctionCall","src":"7335:22:30"},{"name":"dataEnd","nativeSrc":"7359:7:30","nodeType":"YulIdentifier","src":"7359:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7314:20:30","nodeType":"YulIdentifier","src":"7314:20:30"},"nativeSrc":"7314:53:30","nodeType":"YulFunctionCall","src":"7314:53:30"},"variableNames":[{"name":"value1","nativeSrc":"7304:6:30","nodeType":"YulIdentifier","src":"7304:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6910:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6955:9:30","nodeType":"YulTypedName","src":"6955:9:30","type":""},{"name":"dataEnd","nativeSrc":"6966:7:30","nodeType":"YulTypedName","src":"6966:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6978:6:30","nodeType":"YulTypedName","src":"6978:6:30","type":""},{"name":"value1","nativeSrc":"6986:6:30","nodeType":"YulTypedName","src":"6986:6:30","type":""}],"src":"6910:474:30"},{"body":{"nativeSrc":"7433:43:30","nodeType":"YulBlock","src":"7433:43:30","statements":[{"nativeSrc":"7443:27:30","nodeType":"YulAssignment","src":"7443:27:30","value":{"arguments":[{"name":"value","nativeSrc":"7458:5:30","nodeType":"YulIdentifier","src":"7458:5:30"},{"kind":"number","nativeSrc":"7465:4:30","nodeType":"YulLiteral","src":"7465:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7454:3:30","nodeType":"YulIdentifier","src":"7454:3:30"},"nativeSrc":"7454:16:30","nodeType":"YulFunctionCall","src":"7454:16:30"},"variableNames":[{"name":"cleaned","nativeSrc":"7443:7:30","nodeType":"YulIdentifier","src":"7443:7:30"}]}]},"name":"cleanup_t_uint8","nativeSrc":"7390:86:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7415:5:30","nodeType":"YulTypedName","src":"7415:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7425:7:30","nodeType":"YulTypedName","src":"7425:7:30","type":""}],"src":"7390:86:30"},{"body":{"nativeSrc":"7543:51:30","nodeType":"YulBlock","src":"7543:51:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7560:3:30","nodeType":"YulIdentifier","src":"7560:3:30"},{"arguments":[{"name":"value","nativeSrc":"7581:5:30","nodeType":"YulIdentifier","src":"7581:5:30"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"7565:15:30","nodeType":"YulIdentifier","src":"7565:15:30"},"nativeSrc":"7565:22:30","nodeType":"YulFunctionCall","src":"7565:22:30"}],"functionName":{"name":"mstore","nativeSrc":"7553:6:30","nodeType":"YulIdentifier","src":"7553:6:30"},"nativeSrc":"7553:35:30","nodeType":"YulFunctionCall","src":"7553:35:30"},"nativeSrc":"7553:35:30","nodeType":"YulExpressionStatement","src":"7553:35:30"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7482:112:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7531:5:30","nodeType":"YulTypedName","src":"7531:5:30","type":""},{"name":"pos","nativeSrc":"7538:3:30","nodeType":"YulTypedName","src":"7538:3:30","type":""}],"src":"7482:112:30"},{"body":{"nativeSrc":"7694:120:30","nodeType":"YulBlock","src":"7694:120:30","statements":[{"nativeSrc":"7704:26:30","nodeType":"YulAssignment","src":"7704:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7716:9:30","nodeType":"YulIdentifier","src":"7716:9:30"},{"kind":"number","nativeSrc":"7727:2:30","nodeType":"YulLiteral","src":"7727:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7712:3:30","nodeType":"YulIdentifier","src":"7712:3:30"},"nativeSrc":"7712:18:30","nodeType":"YulFunctionCall","src":"7712:18:30"},"variableNames":[{"name":"tail","nativeSrc":"7704:4:30","nodeType":"YulIdentifier","src":"7704:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7780:6:30","nodeType":"YulIdentifier","src":"7780:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"7793:9:30","nodeType":"YulIdentifier","src":"7793:9:30"},{"kind":"number","nativeSrc":"7804:1:30","nodeType":"YulLiteral","src":"7804:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7789:3:30","nodeType":"YulIdentifier","src":"7789:3:30"},"nativeSrc":"7789:17:30","nodeType":"YulFunctionCall","src":"7789:17:30"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7740:39:30","nodeType":"YulIdentifier","src":"7740:39:30"},"nativeSrc":"7740:67:30","nodeType":"YulFunctionCall","src":"7740:67:30"},"nativeSrc":"7740:67:30","nodeType":"YulExpressionStatement","src":"7740:67:30"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"7600:214:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7666:9:30","nodeType":"YulTypedName","src":"7666:9:30","type":""},{"name":"value0","nativeSrc":"7678:6:30","nodeType":"YulTypedName","src":"7678:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7689:4:30","nodeType":"YulTypedName","src":"7689:4:30","type":""}],"src":"7600:214:30"},{"body":{"nativeSrc":"7886:263:30","nodeType":"YulBlock","src":"7886:263:30","statements":[{"body":{"nativeSrc":"7932:83:30","nodeType":"YulBlock","src":"7932:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7934:77:30","nodeType":"YulIdentifier","src":"7934:77:30"},"nativeSrc":"7934:79:30","nodeType":"YulFunctionCall","src":"7934:79:30"},"nativeSrc":"7934:79:30","nodeType":"YulExpressionStatement","src":"7934:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7907:7:30","nodeType":"YulIdentifier","src":"7907:7:30"},{"name":"headStart","nativeSrc":"7916:9:30","nodeType":"YulIdentifier","src":"7916:9:30"}],"functionName":{"name":"sub","nativeSrc":"7903:3:30","nodeType":"YulIdentifier","src":"7903:3:30"},"nativeSrc":"7903:23:30","nodeType":"YulFunctionCall","src":"7903:23:30"},{"kind":"number","nativeSrc":"7928:2:30","nodeType":"YulLiteral","src":"7928:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7899:3:30","nodeType":"YulIdentifier","src":"7899:3:30"},"nativeSrc":"7899:32:30","nodeType":"YulFunctionCall","src":"7899:32:30"},"nativeSrc":"7896:119:30","nodeType":"YulIf","src":"7896:119:30"},{"nativeSrc":"8025:117:30","nodeType":"YulBlock","src":"8025:117:30","statements":[{"nativeSrc":"8040:15:30","nodeType":"YulVariableDeclaration","src":"8040:15:30","value":{"kind":"number","nativeSrc":"8054:1:30","nodeType":"YulLiteral","src":"8054:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8044:6:30","nodeType":"YulTypedName","src":"8044:6:30","type":""}]},{"nativeSrc":"8069:63:30","nodeType":"YulAssignment","src":"8069:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8104:9:30","nodeType":"YulIdentifier","src":"8104:9:30"},{"name":"offset","nativeSrc":"8115:6:30","nodeType":"YulIdentifier","src":"8115:6:30"}],"functionName":{"name":"add","nativeSrc":"8100:3:30","nodeType":"YulIdentifier","src":"8100:3:30"},"nativeSrc":"8100:22:30","nodeType":"YulFunctionCall","src":"8100:22:30"},{"name":"dataEnd","nativeSrc":"8124:7:30","nodeType":"YulIdentifier","src":"8124:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8079:20:30","nodeType":"YulIdentifier","src":"8079:20:30"},"nativeSrc":"8079:53:30","nodeType":"YulFunctionCall","src":"8079:53:30"},"variableNames":[{"name":"value0","nativeSrc":"8069:6:30","nodeType":"YulIdentifier","src":"8069:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"7820:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7856:9:30","nodeType":"YulTypedName","src":"7856:9:30","type":""},{"name":"dataEnd","nativeSrc":"7867:7:30","nodeType":"YulTypedName","src":"7867:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7879:6:30","nodeType":"YulTypedName","src":"7879:6:30","type":""}],"src":"7820:329:30"},{"body":{"nativeSrc":"8244:28:30","nodeType":"YulBlock","src":"8244:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8261:1:30","nodeType":"YulLiteral","src":"8261:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8264:1:30","nodeType":"YulLiteral","src":"8264:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8254:6:30","nodeType":"YulIdentifier","src":"8254:6:30"},"nativeSrc":"8254:12:30","nodeType":"YulFunctionCall","src":"8254:12:30"},"nativeSrc":"8254:12:30","nodeType":"YulExpressionStatement","src":"8254:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8155:117:30","nodeType":"YulFunctionDefinition","src":"8155:117:30"},{"body":{"nativeSrc":"8367:28:30","nodeType":"YulBlock","src":"8367:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8384:1:30","nodeType":"YulLiteral","src":"8384:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8387:1:30","nodeType":"YulLiteral","src":"8387:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8377:6:30","nodeType":"YulIdentifier","src":"8377:6:30"},"nativeSrc":"8377:12:30","nodeType":"YulFunctionCall","src":"8377:12:30"},"nativeSrc":"8377:12:30","nodeType":"YulExpressionStatement","src":"8377:12:30"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"8278:117:30","nodeType":"YulFunctionDefinition","src":"8278:117:30"},{"body":{"nativeSrc":"8490:28:30","nodeType":"YulBlock","src":"8490:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8507:1:30","nodeType":"YulLiteral","src":"8507:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"8510:1:30","nodeType":"YulLiteral","src":"8510:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8500:6:30","nodeType":"YulIdentifier","src":"8500:6:30"},"nativeSrc":"8500:12:30","nodeType":"YulFunctionCall","src":"8500:12:30"},"nativeSrc":"8500:12:30","nodeType":"YulExpressionStatement","src":"8500:12:30"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8401:117:30","nodeType":"YulFunctionDefinition","src":"8401:117:30"},{"body":{"nativeSrc":"8631:478:30","nodeType":"YulBlock","src":"8631:478:30","statements":[{"body":{"nativeSrc":"8680:83:30","nodeType":"YulBlock","src":"8680:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8682:77:30","nodeType":"YulIdentifier","src":"8682:77:30"},"nativeSrc":"8682:79:30","nodeType":"YulFunctionCall","src":"8682:79:30"},"nativeSrc":"8682:79:30","nodeType":"YulExpressionStatement","src":"8682:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8659:6:30","nodeType":"YulIdentifier","src":"8659:6:30"},{"kind":"number","nativeSrc":"8667:4:30","nodeType":"YulLiteral","src":"8667:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8655:3:30","nodeType":"YulIdentifier","src":"8655:3:30"},"nativeSrc":"8655:17:30","nodeType":"YulFunctionCall","src":"8655:17:30"},{"name":"end","nativeSrc":"8674:3:30","nodeType":"YulIdentifier","src":"8674:3:30"}],"functionName":{"name":"slt","nativeSrc":"8651:3:30","nodeType":"YulIdentifier","src":"8651:3:30"},"nativeSrc":"8651:27:30","nodeType":"YulFunctionCall","src":"8651:27:30"}],"functionName":{"name":"iszero","nativeSrc":"8644:6:30","nodeType":"YulIdentifier","src":"8644:6:30"},"nativeSrc":"8644:35:30","nodeType":"YulFunctionCall","src":"8644:35:30"},"nativeSrc":"8641:122:30","nodeType":"YulIf","src":"8641:122:30"},{"nativeSrc":"8772:30:30","nodeType":"YulAssignment","src":"8772:30:30","value":{"arguments":[{"name":"offset","nativeSrc":"8795:6:30","nodeType":"YulIdentifier","src":"8795:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"8782:12:30","nodeType":"YulIdentifier","src":"8782:12:30"},"nativeSrc":"8782:20:30","nodeType":"YulFunctionCall","src":"8782:20:30"},"variableNames":[{"name":"length","nativeSrc":"8772:6:30","nodeType":"YulIdentifier","src":"8772:6:30"}]},{"body":{"nativeSrc":"8845:83:30","nodeType":"YulBlock","src":"8845:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"8847:77:30","nodeType":"YulIdentifier","src":"8847:77:30"},"nativeSrc":"8847:79:30","nodeType":"YulFunctionCall","src":"8847:79:30"},"nativeSrc":"8847:79:30","nodeType":"YulExpressionStatement","src":"8847:79:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8817:6:30","nodeType":"YulIdentifier","src":"8817:6:30"},{"kind":"number","nativeSrc":"8825:18:30","nodeType":"YulLiteral","src":"8825:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8814:2:30","nodeType":"YulIdentifier","src":"8814:2:30"},"nativeSrc":"8814:30:30","nodeType":"YulFunctionCall","src":"8814:30:30"},"nativeSrc":"8811:117:30","nodeType":"YulIf","src":"8811:117:30"},{"nativeSrc":"8937:29:30","nodeType":"YulAssignment","src":"8937:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"8953:6:30","nodeType":"YulIdentifier","src":"8953:6:30"},{"kind":"number","nativeSrc":"8961:4:30","nodeType":"YulLiteral","src":"8961:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8949:3:30","nodeType":"YulIdentifier","src":"8949:3:30"},"nativeSrc":"8949:17:30","nodeType":"YulFunctionCall","src":"8949:17:30"},"variableNames":[{"name":"arrayPos","nativeSrc":"8937:8:30","nodeType":"YulIdentifier","src":"8937:8:30"}]},{"body":{"nativeSrc":"9020:83:30","nodeType":"YulBlock","src":"9020:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"9022:77:30","nodeType":"YulIdentifier","src":"9022:77:30"},"nativeSrc":"9022:79:30","nodeType":"YulFunctionCall","src":"9022:79:30"},"nativeSrc":"9022:79:30","nodeType":"YulExpressionStatement","src":"9022:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"8985:8:30","nodeType":"YulIdentifier","src":"8985:8:30"},{"arguments":[{"name":"length","nativeSrc":"8999:6:30","nodeType":"YulIdentifier","src":"8999:6:30"},{"kind":"number","nativeSrc":"9007:4:30","nodeType":"YulLiteral","src":"9007:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"8995:3:30","nodeType":"YulIdentifier","src":"8995:3:30"},"nativeSrc":"8995:17:30","nodeType":"YulFunctionCall","src":"8995:17:30"}],"functionName":{"name":"add","nativeSrc":"8981:3:30","nodeType":"YulIdentifier","src":"8981:3:30"},"nativeSrc":"8981:32:30","nodeType":"YulFunctionCall","src":"8981:32:30"},{"name":"end","nativeSrc":"9015:3:30","nodeType":"YulIdentifier","src":"9015:3:30"}],"functionName":{"name":"gt","nativeSrc":"8978:2:30","nodeType":"YulIdentifier","src":"8978:2:30"},"nativeSrc":"8978:41:30","nodeType":"YulFunctionCall","src":"8978:41:30"},"nativeSrc":"8975:128:30","nodeType":"YulIf","src":"8975:128:30"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"8541:568:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8598:6:30","nodeType":"YulTypedName","src":"8598:6:30","type":""},{"name":"end","nativeSrc":"8606:3:30","nodeType":"YulTypedName","src":"8606:3:30","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"8614:8:30","nodeType":"YulTypedName","src":"8614:8:30","type":""},{"name":"length","nativeSrc":"8624:6:30","nodeType":"YulTypedName","src":"8624:6:30","type":""}],"src":"8541:568:30"},{"body":{"nativeSrc":"9216:458:30","nodeType":"YulBlock","src":"9216:458:30","statements":[{"body":{"nativeSrc":"9262:83:30","nodeType":"YulBlock","src":"9262:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9264:77:30","nodeType":"YulIdentifier","src":"9264:77:30"},"nativeSrc":"9264:79:30","nodeType":"YulFunctionCall","src":"9264:79:30"},"nativeSrc":"9264:79:30","nodeType":"YulExpressionStatement","src":"9264:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9237:7:30","nodeType":"YulIdentifier","src":"9237:7:30"},{"name":"headStart","nativeSrc":"9246:9:30","nodeType":"YulIdentifier","src":"9246:9:30"}],"functionName":{"name":"sub","nativeSrc":"9233:3:30","nodeType":"YulIdentifier","src":"9233:3:30"},"nativeSrc":"9233:23:30","nodeType":"YulFunctionCall","src":"9233:23:30"},{"kind":"number","nativeSrc":"9258:2:30","nodeType":"YulLiteral","src":"9258:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9229:3:30","nodeType":"YulIdentifier","src":"9229:3:30"},"nativeSrc":"9229:32:30","nodeType":"YulFunctionCall","src":"9229:32:30"},"nativeSrc":"9226:119:30","nodeType":"YulIf","src":"9226:119:30"},{"nativeSrc":"9355:312:30","nodeType":"YulBlock","src":"9355:312:30","statements":[{"nativeSrc":"9370:45:30","nodeType":"YulVariableDeclaration","src":"9370:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9401:9:30","nodeType":"YulIdentifier","src":"9401:9:30"},{"kind":"number","nativeSrc":"9412:1:30","nodeType":"YulLiteral","src":"9412:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9397:3:30","nodeType":"YulIdentifier","src":"9397:3:30"},"nativeSrc":"9397:17:30","nodeType":"YulFunctionCall","src":"9397:17:30"}],"functionName":{"name":"calldataload","nativeSrc":"9384:12:30","nodeType":"YulIdentifier","src":"9384:12:30"},"nativeSrc":"9384:31:30","nodeType":"YulFunctionCall","src":"9384:31:30"},"variables":[{"name":"offset","nativeSrc":"9374:6:30","nodeType":"YulTypedName","src":"9374:6:30","type":""}]},{"body":{"nativeSrc":"9462:83:30","nodeType":"YulBlock","src":"9462:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9464:77:30","nodeType":"YulIdentifier","src":"9464:77:30"},"nativeSrc":"9464:79:30","nodeType":"YulFunctionCall","src":"9464:79:30"},"nativeSrc":"9464:79:30","nodeType":"YulExpressionStatement","src":"9464:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9434:6:30","nodeType":"YulIdentifier","src":"9434:6:30"},{"kind":"number","nativeSrc":"9442:18:30","nodeType":"YulLiteral","src":"9442:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9431:2:30","nodeType":"YulIdentifier","src":"9431:2:30"},"nativeSrc":"9431:30:30","nodeType":"YulFunctionCall","src":"9431:30:30"},"nativeSrc":"9428:117:30","nodeType":"YulIf","src":"9428:117:30"},{"nativeSrc":"9559:98:30","nodeType":"YulAssignment","src":"9559:98:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9629:9:30","nodeType":"YulIdentifier","src":"9629:9:30"},{"name":"offset","nativeSrc":"9640:6:30","nodeType":"YulIdentifier","src":"9640:6:30"}],"functionName":{"name":"add","nativeSrc":"9625:3:30","nodeType":"YulIdentifier","src":"9625:3:30"},"nativeSrc":"9625:22:30","nodeType":"YulFunctionCall","src":"9625:22:30"},{"name":"dataEnd","nativeSrc":"9649:7:30","nodeType":"YulIdentifier","src":"9649:7:30"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"9577:47:30","nodeType":"YulIdentifier","src":"9577:47:30"},"nativeSrc":"9577:80:30","nodeType":"YulFunctionCall","src":"9577:80:30"},"variableNames":[{"name":"value0","nativeSrc":"9559:6:30","nodeType":"YulIdentifier","src":"9559:6:30"},{"name":"value1","nativeSrc":"9567:6:30","nodeType":"YulIdentifier","src":"9567:6:30"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"9115:559:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9178:9:30","nodeType":"YulTypedName","src":"9178:9:30","type":""},{"name":"dataEnd","nativeSrc":"9189:7:30","nodeType":"YulTypedName","src":"9189:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9201:6:30","nodeType":"YulTypedName","src":"9201:6:30","type":""},{"name":"value1","nativeSrc":"9209:6:30","nodeType":"YulTypedName","src":"9209:6:30","type":""}],"src":"9115:559:30"},{"body":{"nativeSrc":"9724:105:30","nodeType":"YulBlock","src":"9724:105:30","statements":[{"nativeSrc":"9734:89:30","nodeType":"YulAssignment","src":"9734:89:30","value":{"arguments":[{"name":"value","nativeSrc":"9749:5:30","nodeType":"YulIdentifier","src":"9749:5:30"},{"kind":"number","nativeSrc":"9756:66:30","nodeType":"YulLiteral","src":"9756:66:30","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"9745:3:30","nodeType":"YulIdentifier","src":"9745:3:30"},"nativeSrc":"9745:78:30","nodeType":"YulFunctionCall","src":"9745:78:30"},"variableNames":[{"name":"cleaned","nativeSrc":"9734:7:30","nodeType":"YulIdentifier","src":"9734:7:30"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"9680:149:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9706:5:30","nodeType":"YulTypedName","src":"9706:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9716:7:30","nodeType":"YulTypedName","src":"9716:7:30","type":""}],"src":"9680:149:30"},{"body":{"nativeSrc":"9898:52:30","nodeType":"YulBlock","src":"9898:52:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9915:3:30","nodeType":"YulIdentifier","src":"9915:3:30"},{"arguments":[{"name":"value","nativeSrc":"9937:5:30","nodeType":"YulIdentifier","src":"9937:5:30"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"9920:16:30","nodeType":"YulIdentifier","src":"9920:16:30"},"nativeSrc":"9920:23:30","nodeType":"YulFunctionCall","src":"9920:23:30"}],"functionName":{"name":"mstore","nativeSrc":"9908:6:30","nodeType":"YulIdentifier","src":"9908:6:30"},"nativeSrc":"9908:36:30","nodeType":"YulFunctionCall","src":"9908:36:30"},"nativeSrc":"9908:36:30","nodeType":"YulExpressionStatement","src":"9908:36:30"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9835:115:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9886:5:30","nodeType":"YulTypedName","src":"9886:5:30","type":""},{"name":"pos","nativeSrc":"9893:3:30","nodeType":"YulTypedName","src":"9893:3:30","type":""}],"src":"9835:115:30"},{"body":{"nativeSrc":"10030:40:30","nodeType":"YulBlock","src":"10030:40:30","statements":[{"nativeSrc":"10041:22:30","nodeType":"YulAssignment","src":"10041:22:30","value":{"arguments":[{"name":"value","nativeSrc":"10057:5:30","nodeType":"YulIdentifier","src":"10057:5:30"}],"functionName":{"name":"mload","nativeSrc":"10051:5:30","nodeType":"YulIdentifier","src":"10051:5:30"},"nativeSrc":"10051:12:30","nodeType":"YulFunctionCall","src":"10051:12:30"},"variableNames":[{"name":"length","nativeSrc":"10041:6:30","nodeType":"YulIdentifier","src":"10041:6:30"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9956:114:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10013:5:30","nodeType":"YulTypedName","src":"10013:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10023:6:30","nodeType":"YulTypedName","src":"10023:6:30","type":""}],"src":"9956:114:30"},{"body":{"nativeSrc":"10187:73:30","nodeType":"YulBlock","src":"10187:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10204:3:30","nodeType":"YulIdentifier","src":"10204:3:30"},{"name":"length","nativeSrc":"10209:6:30","nodeType":"YulIdentifier","src":"10209:6:30"}],"functionName":{"name":"mstore","nativeSrc":"10197:6:30","nodeType":"YulIdentifier","src":"10197:6:30"},"nativeSrc":"10197:19:30","nodeType":"YulFunctionCall","src":"10197:19:30"},"nativeSrc":"10197:19:30","nodeType":"YulExpressionStatement","src":"10197:19:30"},{"nativeSrc":"10225:29:30","nodeType":"YulAssignment","src":"10225:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"10244:3:30","nodeType":"YulIdentifier","src":"10244:3:30"},{"kind":"number","nativeSrc":"10249:4:30","nodeType":"YulLiteral","src":"10249:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10240:3:30","nodeType":"YulIdentifier","src":"10240:3:30"},"nativeSrc":"10240:14:30","nodeType":"YulFunctionCall","src":"10240:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"10225:11:30","nodeType":"YulIdentifier","src":"10225:11:30"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10076:184:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10159:3:30","nodeType":"YulTypedName","src":"10159:3:30","type":""},{"name":"length","nativeSrc":"10164:6:30","nodeType":"YulTypedName","src":"10164:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10175:11:30","nodeType":"YulTypedName","src":"10175:11:30","type":""}],"src":"10076:184:30"},{"body":{"nativeSrc":"10338:60:30","nodeType":"YulBlock","src":"10338:60:30","statements":[{"nativeSrc":"10348:11:30","nodeType":"YulAssignment","src":"10348:11:30","value":{"name":"ptr","nativeSrc":"10356:3:30","nodeType":"YulIdentifier","src":"10356:3:30"},"variableNames":[{"name":"data","nativeSrc":"10348:4:30","nodeType":"YulIdentifier","src":"10348:4:30"}]},{"nativeSrc":"10369:22:30","nodeType":"YulAssignment","src":"10369:22:30","value":{"arguments":[{"name":"ptr","nativeSrc":"10381:3:30","nodeType":"YulIdentifier","src":"10381:3:30"},{"kind":"number","nativeSrc":"10386:4:30","nodeType":"YulLiteral","src":"10386:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10377:3:30","nodeType":"YulIdentifier","src":"10377:3:30"},"nativeSrc":"10377:14:30","nodeType":"YulFunctionCall","src":"10377:14:30"},"variableNames":[{"name":"data","nativeSrc":"10369:4:30","nodeType":"YulIdentifier","src":"10369:4:30"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10266:132:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10325:3:30","nodeType":"YulTypedName","src":"10325:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10333:4:30","nodeType":"YulTypedName","src":"10333:4:30","type":""}],"src":"10266:132:30"},{"body":{"nativeSrc":"10459:53:30","nodeType":"YulBlock","src":"10459:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10476:3:30","nodeType":"YulIdentifier","src":"10476:3:30"},{"arguments":[{"name":"value","nativeSrc":"10499:5:30","nodeType":"YulIdentifier","src":"10499:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10481:17:30","nodeType":"YulIdentifier","src":"10481:17:30"},"nativeSrc":"10481:24:30","nodeType":"YulFunctionCall","src":"10481:24:30"}],"functionName":{"name":"mstore","nativeSrc":"10469:6:30","nodeType":"YulIdentifier","src":"10469:6:30"},"nativeSrc":"10469:37:30","nodeType":"YulFunctionCall","src":"10469:37:30"},"nativeSrc":"10469:37:30","nodeType":"YulExpressionStatement","src":"10469:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10404:108:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10447:5:30","nodeType":"YulTypedName","src":"10447:5:30","type":""},{"name":"pos","nativeSrc":"10454:3:30","nodeType":"YulTypedName","src":"10454:3:30","type":""}],"src":"10404:108:30"},{"body":{"nativeSrc":"10598:99:30","nodeType":"YulBlock","src":"10598:99:30","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"10642:6:30","nodeType":"YulIdentifier","src":"10642:6:30"},{"name":"pos","nativeSrc":"10650:3:30","nodeType":"YulIdentifier","src":"10650:3:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10608:33:30","nodeType":"YulIdentifier","src":"10608:33:30"},"nativeSrc":"10608:46:30","nodeType":"YulFunctionCall","src":"10608:46:30"},"nativeSrc":"10608:46:30","nodeType":"YulExpressionStatement","src":"10608:46:30"},{"nativeSrc":"10663:28:30","nodeType":"YulAssignment","src":"10663:28:30","value":{"arguments":[{"name":"pos","nativeSrc":"10681:3:30","nodeType":"YulIdentifier","src":"10681:3:30"},{"kind":"number","nativeSrc":"10686:4:30","nodeType":"YulLiteral","src":"10686:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10677:3:30","nodeType":"YulIdentifier","src":"10677:3:30"},"nativeSrc":"10677:14:30","nodeType":"YulFunctionCall","src":"10677:14:30"},"variableNames":[{"name":"updatedPos","nativeSrc":"10663:10:30","nodeType":"YulIdentifier","src":"10663:10:30"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"10518:179:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"10571:6:30","nodeType":"YulTypedName","src":"10571:6:30","type":""},{"name":"pos","nativeSrc":"10579:3:30","nodeType":"YulTypedName","src":"10579:3:30","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"10587:10:30","nodeType":"YulTypedName","src":"10587:10:30","type":""}],"src":"10518:179:30"},{"body":{"nativeSrc":"10778:38:30","nodeType":"YulBlock","src":"10778:38:30","statements":[{"nativeSrc":"10788:22:30","nodeType":"YulAssignment","src":"10788:22:30","value":{"arguments":[{"name":"ptr","nativeSrc":"10800:3:30","nodeType":"YulIdentifier","src":"10800:3:30"},{"kind":"number","nativeSrc":"10805:4:30","nodeType":"YulLiteral","src":"10805:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10796:3:30","nodeType":"YulIdentifier","src":"10796:3:30"},"nativeSrc":"10796:14:30","nodeType":"YulFunctionCall","src":"10796:14:30"},"variableNames":[{"name":"next","nativeSrc":"10788:4:30","nodeType":"YulIdentifier","src":"10788:4:30"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10703:113:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10765:3:30","nodeType":"YulTypedName","src":"10765:3:30","type":""}],"returnVariables":[{"name":"next","nativeSrc":"10773:4:30","nodeType":"YulTypedName","src":"10773:4:30","type":""}],"src":"10703:113:30"},{"body":{"nativeSrc":"10976:608:30","nodeType":"YulBlock","src":"10976:608:30","statements":[{"nativeSrc":"10986:68:30","nodeType":"YulVariableDeclaration","src":"10986:68:30","value":{"arguments":[{"name":"value","nativeSrc":"11048:5:30","nodeType":"YulIdentifier","src":"11048:5:30"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11000:47:30","nodeType":"YulIdentifier","src":"11000:47:30"},"nativeSrc":"11000:54:30","nodeType":"YulFunctionCall","src":"11000:54:30"},"variables":[{"name":"length","nativeSrc":"10990:6:30","nodeType":"YulTypedName","src":"10990:6:30","type":""}]},{"nativeSrc":"11063:93:30","nodeType":"YulAssignment","src":"11063:93:30","value":{"arguments":[{"name":"pos","nativeSrc":"11144:3:30","nodeType":"YulIdentifier","src":"11144:3:30"},{"name":"length","nativeSrc":"11149:6:30","nodeType":"YulIdentifier","src":"11149:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"11070:73:30","nodeType":"YulIdentifier","src":"11070:73:30"},"nativeSrc":"11070:86:30","nodeType":"YulFunctionCall","src":"11070:86:30"},"variableNames":[{"name":"pos","nativeSrc":"11063:3:30","nodeType":"YulIdentifier","src":"11063:3:30"}]},{"nativeSrc":"11165:71:30","nodeType":"YulVariableDeclaration","src":"11165:71:30","value":{"arguments":[{"name":"value","nativeSrc":"11230:5:30","nodeType":"YulIdentifier","src":"11230:5:30"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11180:49:30","nodeType":"YulIdentifier","src":"11180:49:30"},"nativeSrc":"11180:56:30","nodeType":"YulFunctionCall","src":"11180:56:30"},"variables":[{"name":"baseRef","nativeSrc":"11169:7:30","nodeType":"YulTypedName","src":"11169:7:30","type":""}]},{"nativeSrc":"11245:21:30","nodeType":"YulVariableDeclaration","src":"11245:21:30","value":{"name":"baseRef","nativeSrc":"11259:7:30","nodeType":"YulIdentifier","src":"11259:7:30"},"variables":[{"name":"srcPtr","nativeSrc":"11249:6:30","nodeType":"YulTypedName","src":"11249:6:30","type":""}]},{"body":{"nativeSrc":"11335:224:30","nodeType":"YulBlock","src":"11335:224:30","statements":[{"nativeSrc":"11349:34:30","nodeType":"YulVariableDeclaration","src":"11349:34:30","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11376:6:30","nodeType":"YulIdentifier","src":"11376:6:30"}],"functionName":{"name":"mload","nativeSrc":"11370:5:30","nodeType":"YulIdentifier","src":"11370:5:30"},"nativeSrc":"11370:13:30","nodeType":"YulFunctionCall","src":"11370:13:30"},"variables":[{"name":"elementValue0","nativeSrc":"11353:13:30","nodeType":"YulTypedName","src":"11353:13:30","type":""}]},{"nativeSrc":"11396:70:30","nodeType":"YulAssignment","src":"11396:70:30","value":{"arguments":[{"name":"elementValue0","nativeSrc":"11447:13:30","nodeType":"YulIdentifier","src":"11447:13:30"},{"name":"pos","nativeSrc":"11462:3:30","nodeType":"YulIdentifier","src":"11462:3:30"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"11403:43:30","nodeType":"YulIdentifier","src":"11403:43:30"},"nativeSrc":"11403:63:30","nodeType":"YulFunctionCall","src":"11403:63:30"},"variableNames":[{"name":"pos","nativeSrc":"11396:3:30","nodeType":"YulIdentifier","src":"11396:3:30"}]},{"nativeSrc":"11479:70:30","nodeType":"YulAssignment","src":"11479:70:30","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11542:6:30","nodeType":"YulIdentifier","src":"11542:6:30"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11489:52:30","nodeType":"YulIdentifier","src":"11489:52:30"},"nativeSrc":"11489:60:30","nodeType":"YulFunctionCall","src":"11489:60:30"},"variableNames":[{"name":"srcPtr","nativeSrc":"11479:6:30","nodeType":"YulIdentifier","src":"11479:6:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11297:1:30","nodeType":"YulIdentifier","src":"11297:1:30"},{"name":"length","nativeSrc":"11300:6:30","nodeType":"YulIdentifier","src":"11300:6:30"}],"functionName":{"name":"lt","nativeSrc":"11294:2:30","nodeType":"YulIdentifier","src":"11294:2:30"},"nativeSrc":"11294:13:30","nodeType":"YulFunctionCall","src":"11294:13:30"},"nativeSrc":"11275:284:30","nodeType":"YulForLoop","post":{"nativeSrc":"11308:18:30","nodeType":"YulBlock","src":"11308:18:30","statements":[{"nativeSrc":"11310:14:30","nodeType":"YulAssignment","src":"11310:14:30","value":{"arguments":[{"name":"i","nativeSrc":"11319:1:30","nodeType":"YulIdentifier","src":"11319:1:30"},{"kind":"number","nativeSrc":"11322:1:30","nodeType":"YulLiteral","src":"11322:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11315:3:30","nodeType":"YulIdentifier","src":"11315:3:30"},"nativeSrc":"11315:9:30","nodeType":"YulFunctionCall","src":"11315:9:30"},"variableNames":[{"name":"i","nativeSrc":"11310:1:30","nodeType":"YulIdentifier","src":"11310:1:30"}]}]},"pre":{"nativeSrc":"11279:14:30","nodeType":"YulBlock","src":"11279:14:30","statements":[{"nativeSrc":"11281:10:30","nodeType":"YulVariableDeclaration","src":"11281:10:30","value":{"kind":"number","nativeSrc":"11290:1:30","nodeType":"YulLiteral","src":"11290:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11285:1:30","nodeType":"YulTypedName","src":"11285:1:30","type":""}]}]},"src":"11275:284:30"},{"nativeSrc":"11568:10:30","nodeType":"YulAssignment","src":"11568:10:30","value":{"name":"pos","nativeSrc":"11575:3:30","nodeType":"YulIdentifier","src":"11575:3:30"},"variableNames":[{"name":"end","nativeSrc":"11568:3:30","nodeType":"YulIdentifier","src":"11568:3:30"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10852:732:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10955:5:30","nodeType":"YulTypedName","src":"10955:5:30","type":""},{"name":"pos","nativeSrc":"10962:3:30","nodeType":"YulTypedName","src":"10962:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10971:3:30","nodeType":"YulTypedName","src":"10971:3:30","type":""}],"src":"10852:732:30"},{"body":{"nativeSrc":"11944:861:30","nodeType":"YulBlock","src":"11944:861:30","statements":[{"nativeSrc":"11954:27:30","nodeType":"YulAssignment","src":"11954:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"11966:9:30","nodeType":"YulIdentifier","src":"11966:9:30"},{"kind":"number","nativeSrc":"11977:3:30","nodeType":"YulLiteral","src":"11977:3:30","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11962:3:30","nodeType":"YulIdentifier","src":"11962:3:30"},"nativeSrc":"11962:19:30","nodeType":"YulFunctionCall","src":"11962:19:30"},"variableNames":[{"name":"tail","nativeSrc":"11954:4:30","nodeType":"YulIdentifier","src":"11954:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12033:6:30","nodeType":"YulIdentifier","src":"12033:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12046:9:30","nodeType":"YulIdentifier","src":"12046:9:30"},{"kind":"number","nativeSrc":"12057:1:30","nodeType":"YulLiteral","src":"12057:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12042:3:30","nodeType":"YulIdentifier","src":"12042:3:30"},"nativeSrc":"12042:17:30","nodeType":"YulFunctionCall","src":"12042:17:30"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"11991:41:30","nodeType":"YulIdentifier","src":"11991:41:30"},"nativeSrc":"11991:69:30","nodeType":"YulFunctionCall","src":"11991:69:30"},"nativeSrc":"11991:69:30","nodeType":"YulExpressionStatement","src":"11991:69:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12081:9:30","nodeType":"YulIdentifier","src":"12081:9:30"},{"kind":"number","nativeSrc":"12092:2:30","nodeType":"YulLiteral","src":"12092:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12077:3:30","nodeType":"YulIdentifier","src":"12077:3:30"},"nativeSrc":"12077:18:30","nodeType":"YulFunctionCall","src":"12077:18:30"},{"arguments":[{"name":"tail","nativeSrc":"12101:4:30","nodeType":"YulIdentifier","src":"12101:4:30"},{"name":"headStart","nativeSrc":"12107:9:30","nodeType":"YulIdentifier","src":"12107:9:30"}],"functionName":{"name":"sub","nativeSrc":"12097:3:30","nodeType":"YulIdentifier","src":"12097:3:30"},"nativeSrc":"12097:20:30","nodeType":"YulFunctionCall","src":"12097:20:30"}],"functionName":{"name":"mstore","nativeSrc":"12070:6:30","nodeType":"YulIdentifier","src":"12070:6:30"},"nativeSrc":"12070:48:30","nodeType":"YulFunctionCall","src":"12070:48:30"},"nativeSrc":"12070:48:30","nodeType":"YulExpressionStatement","src":"12070:48:30"},{"nativeSrc":"12127:86:30","nodeType":"YulAssignment","src":"12127:86:30","value":{"arguments":[{"name":"value1","nativeSrc":"12199:6:30","nodeType":"YulIdentifier","src":"12199:6:30"},{"name":"tail","nativeSrc":"12208:4:30","nodeType":"YulIdentifier","src":"12208:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12135:63:30","nodeType":"YulIdentifier","src":"12135:63:30"},"nativeSrc":"12135:78:30","nodeType":"YulFunctionCall","src":"12135:78:30"},"variableNames":[{"name":"tail","nativeSrc":"12127:4:30","nodeType":"YulIdentifier","src":"12127:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12234:9:30","nodeType":"YulIdentifier","src":"12234:9:30"},{"kind":"number","nativeSrc":"12245:2:30","nodeType":"YulLiteral","src":"12245:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12230:3:30","nodeType":"YulIdentifier","src":"12230:3:30"},"nativeSrc":"12230:18:30","nodeType":"YulFunctionCall","src":"12230:18:30"},{"arguments":[{"name":"tail","nativeSrc":"12254:4:30","nodeType":"YulIdentifier","src":"12254:4:30"},{"name":"headStart","nativeSrc":"12260:9:30","nodeType":"YulIdentifier","src":"12260:9:30"}],"functionName":{"name":"sub","nativeSrc":"12250:3:30","nodeType":"YulIdentifier","src":"12250:3:30"},"nativeSrc":"12250:20:30","nodeType":"YulFunctionCall","src":"12250:20:30"}],"functionName":{"name":"mstore","nativeSrc":"12223:6:30","nodeType":"YulIdentifier","src":"12223:6:30"},"nativeSrc":"12223:48:30","nodeType":"YulFunctionCall","src":"12223:48:30"},"nativeSrc":"12223:48:30","nodeType":"YulExpressionStatement","src":"12223:48:30"},{"nativeSrc":"12280:86:30","nodeType":"YulAssignment","src":"12280:86:30","value":{"arguments":[{"name":"value2","nativeSrc":"12352:6:30","nodeType":"YulIdentifier","src":"12352:6:30"},{"name":"tail","nativeSrc":"12361:4:30","nodeType":"YulIdentifier","src":"12361:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12288:63:30","nodeType":"YulIdentifier","src":"12288:63:30"},"nativeSrc":"12288:78:30","nodeType":"YulFunctionCall","src":"12288:78:30"},"variableNames":[{"name":"tail","nativeSrc":"12280:4:30","nodeType":"YulIdentifier","src":"12280:4:30"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12420:6:30","nodeType":"YulIdentifier","src":"12420:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12433:9:30","nodeType":"YulIdentifier","src":"12433:9:30"},{"kind":"number","nativeSrc":"12444:2:30","nodeType":"YulLiteral","src":"12444:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12429:3:30","nodeType":"YulIdentifier","src":"12429:3:30"},"nativeSrc":"12429:18:30","nodeType":"YulFunctionCall","src":"12429:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12376:43:30","nodeType":"YulIdentifier","src":"12376:43:30"},"nativeSrc":"12376:72:30","nodeType":"YulFunctionCall","src":"12376:72:30"},"nativeSrc":"12376:72:30","nodeType":"YulExpressionStatement","src":"12376:72:30"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12502:6:30","nodeType":"YulIdentifier","src":"12502:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12515:9:30","nodeType":"YulIdentifier","src":"12515:9:30"},{"kind":"number","nativeSrc":"12526:3:30","nodeType":"YulLiteral","src":"12526:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12511:3:30","nodeType":"YulIdentifier","src":"12511:3:30"},"nativeSrc":"12511:19:30","nodeType":"YulFunctionCall","src":"12511:19:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12458:43:30","nodeType":"YulIdentifier","src":"12458:43:30"},"nativeSrc":"12458:73:30","nodeType":"YulFunctionCall","src":"12458:73:30"},"nativeSrc":"12458:73:30","nodeType":"YulExpressionStatement","src":"12458:73:30"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12585:6:30","nodeType":"YulIdentifier","src":"12585:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"12598:9:30","nodeType":"YulIdentifier","src":"12598:9:30"},{"kind":"number","nativeSrc":"12609:3:30","nodeType":"YulLiteral","src":"12609:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12594:3:30","nodeType":"YulIdentifier","src":"12594:3:30"},"nativeSrc":"12594:19:30","nodeType":"YulFunctionCall","src":"12594:19:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12541:43:30","nodeType":"YulIdentifier","src":"12541:43:30"},"nativeSrc":"12541:73:30","nodeType":"YulFunctionCall","src":"12541:73:30"},"nativeSrc":"12541:73:30","nodeType":"YulExpressionStatement","src":"12541:73:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12635:9:30","nodeType":"YulIdentifier","src":"12635:9:30"},{"kind":"number","nativeSrc":"12646:3:30","nodeType":"YulLiteral","src":"12646:3:30","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12631:3:30","nodeType":"YulIdentifier","src":"12631:3:30"},"nativeSrc":"12631:19:30","nodeType":"YulFunctionCall","src":"12631:19:30"},{"arguments":[{"name":"tail","nativeSrc":"12656:4:30","nodeType":"YulIdentifier","src":"12656:4:30"},{"name":"headStart","nativeSrc":"12662:9:30","nodeType":"YulIdentifier","src":"12662:9:30"}],"functionName":{"name":"sub","nativeSrc":"12652:3:30","nodeType":"YulIdentifier","src":"12652:3:30"},"nativeSrc":"12652:20:30","nodeType":"YulFunctionCall","src":"12652:20:30"}],"functionName":{"name":"mstore","nativeSrc":"12624:6:30","nodeType":"YulIdentifier","src":"12624:6:30"},"nativeSrc":"12624:49:30","nodeType":"YulFunctionCall","src":"12624:49:30"},"nativeSrc":"12624:49:30","nodeType":"YulExpressionStatement","src":"12624:49:30"},{"nativeSrc":"12682:116:30","nodeType":"YulAssignment","src":"12682:116:30","value":{"arguments":[{"name":"value6","nativeSrc":"12784:6:30","nodeType":"YulIdentifier","src":"12784:6:30"},{"name":"tail","nativeSrc":"12793:4:30","nodeType":"YulIdentifier","src":"12793:4:30"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12690:93:30","nodeType":"YulIdentifier","src":"12690:93:30"},"nativeSrc":"12690:108:30","nodeType":"YulFunctionCall","src":"12690:108:30"},"variableNames":[{"name":"tail","nativeSrc":"12682:4:30","nodeType":"YulIdentifier","src":"12682:4:30"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"11590:1215:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11868:9:30","nodeType":"YulTypedName","src":"11868:9:30","type":""},{"name":"value6","nativeSrc":"11880:6:30","nodeType":"YulTypedName","src":"11880:6:30","type":""},{"name":"value5","nativeSrc":"11888:6:30","nodeType":"YulTypedName","src":"11888:6:30","type":""},{"name":"value4","nativeSrc":"11896:6:30","nodeType":"YulTypedName","src":"11896:6:30","type":""},{"name":"value3","nativeSrc":"11904:6:30","nodeType":"YulTypedName","src":"11904:6:30","type":""},{"name":"value2","nativeSrc":"11912:6:30","nodeType":"YulTypedName","src":"11912:6:30","type":""},{"name":"value1","nativeSrc":"11920:6:30","nodeType":"YulTypedName","src":"11920:6:30","type":""},{"name":"value0","nativeSrc":"11928:6:30","nodeType":"YulTypedName","src":"11928:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11939:4:30","nodeType":"YulTypedName","src":"11939:4:30","type":""}],"src":"11590:1215:30"},{"body":{"nativeSrc":"12852:77:30","nodeType":"YulBlock","src":"12852:77:30","statements":[{"body":{"nativeSrc":"12907:16:30","nodeType":"YulBlock","src":"12907:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12916:1:30","nodeType":"YulLiteral","src":"12916:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"12919:1:30","nodeType":"YulLiteral","src":"12919:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12909:6:30","nodeType":"YulIdentifier","src":"12909:6:30"},"nativeSrc":"12909:12:30","nodeType":"YulFunctionCall","src":"12909:12:30"},"nativeSrc":"12909:12:30","nodeType":"YulExpressionStatement","src":"12909:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12875:5:30","nodeType":"YulIdentifier","src":"12875:5:30"},{"arguments":[{"name":"value","nativeSrc":"12898:5:30","nodeType":"YulIdentifier","src":"12898:5:30"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"12882:15:30","nodeType":"YulIdentifier","src":"12882:15:30"},"nativeSrc":"12882:22:30","nodeType":"YulFunctionCall","src":"12882:22:30"}],"functionName":{"name":"eq","nativeSrc":"12872:2:30","nodeType":"YulIdentifier","src":"12872:2:30"},"nativeSrc":"12872:33:30","nodeType":"YulFunctionCall","src":"12872:33:30"}],"functionName":{"name":"iszero","nativeSrc":"12865:6:30","nodeType":"YulIdentifier","src":"12865:6:30"},"nativeSrc":"12865:41:30","nodeType":"YulFunctionCall","src":"12865:41:30"},"nativeSrc":"12862:61:30","nodeType":"YulIf","src":"12862:61:30"}]},"name":"validator_revert_t_uint8","nativeSrc":"12811:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12845:5:30","nodeType":"YulTypedName","src":"12845:5:30","type":""}],"src":"12811:118:30"},{"body":{"nativeSrc":"12985:85:30","nodeType":"YulBlock","src":"12985:85:30","statements":[{"nativeSrc":"12995:29:30","nodeType":"YulAssignment","src":"12995:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"13017:6:30","nodeType":"YulIdentifier","src":"13017:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"13004:12:30","nodeType":"YulIdentifier","src":"13004:12:30"},"nativeSrc":"13004:20:30","nodeType":"YulFunctionCall","src":"13004:20:30"},"variableNames":[{"name":"value","nativeSrc":"12995:5:30","nodeType":"YulIdentifier","src":"12995:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13058:5:30","nodeType":"YulIdentifier","src":"13058:5:30"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"13033:24:30","nodeType":"YulIdentifier","src":"13033:24:30"},"nativeSrc":"13033:31:30","nodeType":"YulFunctionCall","src":"13033:31:30"},"nativeSrc":"13033:31:30","nodeType":"YulExpressionStatement","src":"13033:31:30"}]},"name":"abi_decode_t_uint8","nativeSrc":"12935:135:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12963:6:30","nodeType":"YulTypedName","src":"12963:6:30","type":""},{"name":"end","nativeSrc":"12971:3:30","nodeType":"YulTypedName","src":"12971:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12979:5:30","nodeType":"YulTypedName","src":"12979:5:30","type":""}],"src":"12935:135:30"},{"body":{"nativeSrc":"13242:1033:30","nodeType":"YulBlock","src":"13242:1033:30","statements":[{"body":{"nativeSrc":"13289:83:30","nodeType":"YulBlock","src":"13289:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13291:77:30","nodeType":"YulIdentifier","src":"13291:77:30"},"nativeSrc":"13291:79:30","nodeType":"YulFunctionCall","src":"13291:79:30"},"nativeSrc":"13291:79:30","nodeType":"YulExpressionStatement","src":"13291:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13263:7:30","nodeType":"YulIdentifier","src":"13263:7:30"},{"name":"headStart","nativeSrc":"13272:9:30","nodeType":"YulIdentifier","src":"13272:9:30"}],"functionName":{"name":"sub","nativeSrc":"13259:3:30","nodeType":"YulIdentifier","src":"13259:3:30"},"nativeSrc":"13259:23:30","nodeType":"YulFunctionCall","src":"13259:23:30"},{"kind":"number","nativeSrc":"13284:3:30","nodeType":"YulLiteral","src":"13284:3:30","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"13255:3:30","nodeType":"YulIdentifier","src":"13255:3:30"},"nativeSrc":"13255:33:30","nodeType":"YulFunctionCall","src":"13255:33:30"},"nativeSrc":"13252:120:30","nodeType":"YulIf","src":"13252:120:30"},{"nativeSrc":"13382:117:30","nodeType":"YulBlock","src":"13382:117:30","statements":[{"nativeSrc":"13397:15:30","nodeType":"YulVariableDeclaration","src":"13397:15:30","value":{"kind":"number","nativeSrc":"13411:1:30","nodeType":"YulLiteral","src":"13411:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13401:6:30","nodeType":"YulTypedName","src":"13401:6:30","type":""}]},{"nativeSrc":"13426:63:30","nodeType":"YulAssignment","src":"13426:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13461:9:30","nodeType":"YulIdentifier","src":"13461:9:30"},{"name":"offset","nativeSrc":"13472:6:30","nodeType":"YulIdentifier","src":"13472:6:30"}],"functionName":{"name":"add","nativeSrc":"13457:3:30","nodeType":"YulIdentifier","src":"13457:3:30"},"nativeSrc":"13457:22:30","nodeType":"YulFunctionCall","src":"13457:22:30"},{"name":"dataEnd","nativeSrc":"13481:7:30","nodeType":"YulIdentifier","src":"13481:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13436:20:30","nodeType":"YulIdentifier","src":"13436:20:30"},"nativeSrc":"13436:53:30","nodeType":"YulFunctionCall","src":"13436:53:30"},"variableNames":[{"name":"value0","nativeSrc":"13426:6:30","nodeType":"YulIdentifier","src":"13426:6:30"}]}]},{"nativeSrc":"13509:118:30","nodeType":"YulBlock","src":"13509:118:30","statements":[{"nativeSrc":"13524:16:30","nodeType":"YulVariableDeclaration","src":"13524:16:30","value":{"kind":"number","nativeSrc":"13538:2:30","nodeType":"YulLiteral","src":"13538:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13528:6:30","nodeType":"YulTypedName","src":"13528:6:30","type":""}]},{"nativeSrc":"13554:63:30","nodeType":"YulAssignment","src":"13554:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13589:9:30","nodeType":"YulIdentifier","src":"13589:9:30"},{"name":"offset","nativeSrc":"13600:6:30","nodeType":"YulIdentifier","src":"13600:6:30"}],"functionName":{"name":"add","nativeSrc":"13585:3:30","nodeType":"YulIdentifier","src":"13585:3:30"},"nativeSrc":"13585:22:30","nodeType":"YulFunctionCall","src":"13585:22:30"},{"name":"dataEnd","nativeSrc":"13609:7:30","nodeType":"YulIdentifier","src":"13609:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13564:20:30","nodeType":"YulIdentifier","src":"13564:20:30"},"nativeSrc":"13564:53:30","nodeType":"YulFunctionCall","src":"13564:53:30"},"variableNames":[{"name":"value1","nativeSrc":"13554:6:30","nodeType":"YulIdentifier","src":"13554:6:30"}]}]},{"nativeSrc":"13637:118:30","nodeType":"YulBlock","src":"13637:118:30","statements":[{"nativeSrc":"13652:16:30","nodeType":"YulVariableDeclaration","src":"13652:16:30","value":{"kind":"number","nativeSrc":"13666:2:30","nodeType":"YulLiteral","src":"13666:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"13656:6:30","nodeType":"YulTypedName","src":"13656:6:30","type":""}]},{"nativeSrc":"13682:63:30","nodeType":"YulAssignment","src":"13682:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13717:9:30","nodeType":"YulIdentifier","src":"13717:9:30"},{"name":"offset","nativeSrc":"13728:6:30","nodeType":"YulIdentifier","src":"13728:6:30"}],"functionName":{"name":"add","nativeSrc":"13713:3:30","nodeType":"YulIdentifier","src":"13713:3:30"},"nativeSrc":"13713:22:30","nodeType":"YulFunctionCall","src":"13713:22:30"},{"name":"dataEnd","nativeSrc":"13737:7:30","nodeType":"YulIdentifier","src":"13737:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13692:20:30","nodeType":"YulIdentifier","src":"13692:20:30"},"nativeSrc":"13692:53:30","nodeType":"YulFunctionCall","src":"13692:53:30"},"variableNames":[{"name":"value2","nativeSrc":"13682:6:30","nodeType":"YulIdentifier","src":"13682:6:30"}]}]},{"nativeSrc":"13765:118:30","nodeType":"YulBlock","src":"13765:118:30","statements":[{"nativeSrc":"13780:16:30","nodeType":"YulVariableDeclaration","src":"13780:16:30","value":{"kind":"number","nativeSrc":"13794:2:30","nodeType":"YulLiteral","src":"13794:2:30","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13784:6:30","nodeType":"YulTypedName","src":"13784:6:30","type":""}]},{"nativeSrc":"13810:63:30","nodeType":"YulAssignment","src":"13810:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13845:9:30","nodeType":"YulIdentifier","src":"13845:9:30"},{"name":"offset","nativeSrc":"13856:6:30","nodeType":"YulIdentifier","src":"13856:6:30"}],"functionName":{"name":"add","nativeSrc":"13841:3:30","nodeType":"YulIdentifier","src":"13841:3:30"},"nativeSrc":"13841:22:30","nodeType":"YulFunctionCall","src":"13841:22:30"},{"name":"dataEnd","nativeSrc":"13865:7:30","nodeType":"YulIdentifier","src":"13865:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13820:20:30","nodeType":"YulIdentifier","src":"13820:20:30"},"nativeSrc":"13820:53:30","nodeType":"YulFunctionCall","src":"13820:53:30"},"variableNames":[{"name":"value3","nativeSrc":"13810:6:30","nodeType":"YulIdentifier","src":"13810:6:30"}]}]},{"nativeSrc":"13893:117:30","nodeType":"YulBlock","src":"13893:117:30","statements":[{"nativeSrc":"13908:17:30","nodeType":"YulVariableDeclaration","src":"13908:17:30","value":{"kind":"number","nativeSrc":"13922:3:30","nodeType":"YulLiteral","src":"13922:3:30","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"13912:6:30","nodeType":"YulTypedName","src":"13912:6:30","type":""}]},{"nativeSrc":"13939:61:30","nodeType":"YulAssignment","src":"13939:61:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13972:9:30","nodeType":"YulIdentifier","src":"13972:9:30"},{"name":"offset","nativeSrc":"13983:6:30","nodeType":"YulIdentifier","src":"13983:6:30"}],"functionName":{"name":"add","nativeSrc":"13968:3:30","nodeType":"YulIdentifier","src":"13968:3:30"},"nativeSrc":"13968:22:30","nodeType":"YulFunctionCall","src":"13968:22:30"},{"name":"dataEnd","nativeSrc":"13992:7:30","nodeType":"YulIdentifier","src":"13992:7:30"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"13949:18:30","nodeType":"YulIdentifier","src":"13949:18:30"},"nativeSrc":"13949:51:30","nodeType":"YulFunctionCall","src":"13949:51:30"},"variableNames":[{"name":"value4","nativeSrc":"13939:6:30","nodeType":"YulIdentifier","src":"13939:6:30"}]}]},{"nativeSrc":"14020:119:30","nodeType":"YulBlock","src":"14020:119:30","statements":[{"nativeSrc":"14035:17:30","nodeType":"YulVariableDeclaration","src":"14035:17:30","value":{"kind":"number","nativeSrc":"14049:3:30","nodeType":"YulLiteral","src":"14049:3:30","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"14039:6:30","nodeType":"YulTypedName","src":"14039:6:30","type":""}]},{"nativeSrc":"14066:63:30","nodeType":"YulAssignment","src":"14066:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14101:9:30","nodeType":"YulIdentifier","src":"14101:9:30"},{"name":"offset","nativeSrc":"14112:6:30","nodeType":"YulIdentifier","src":"14112:6:30"}],"functionName":{"name":"add","nativeSrc":"14097:3:30","nodeType":"YulIdentifier","src":"14097:3:30"},"nativeSrc":"14097:22:30","nodeType":"YulFunctionCall","src":"14097:22:30"},{"name":"dataEnd","nativeSrc":"14121:7:30","nodeType":"YulIdentifier","src":"14121:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14076:20:30","nodeType":"YulIdentifier","src":"14076:20:30"},"nativeSrc":"14076:53:30","nodeType":"YulFunctionCall","src":"14076:53:30"},"variableNames":[{"name":"value5","nativeSrc":"14066:6:30","nodeType":"YulIdentifier","src":"14066:6:30"}]}]},{"nativeSrc":"14149:119:30","nodeType":"YulBlock","src":"14149:119:30","statements":[{"nativeSrc":"14164:17:30","nodeType":"YulVariableDeclaration","src":"14164:17:30","value":{"kind":"number","nativeSrc":"14178:3:30","nodeType":"YulLiteral","src":"14178:3:30","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"14168:6:30","nodeType":"YulTypedName","src":"14168:6:30","type":""}]},{"nativeSrc":"14195:63:30","nodeType":"YulAssignment","src":"14195:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14230:9:30","nodeType":"YulIdentifier","src":"14230:9:30"},{"name":"offset","nativeSrc":"14241:6:30","nodeType":"YulIdentifier","src":"14241:6:30"}],"functionName":{"name":"add","nativeSrc":"14226:3:30","nodeType":"YulIdentifier","src":"14226:3:30"},"nativeSrc":"14226:22:30","nodeType":"YulFunctionCall","src":"14226:22:30"},{"name":"dataEnd","nativeSrc":"14250:7:30","nodeType":"YulIdentifier","src":"14250:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14205:20:30","nodeType":"YulIdentifier","src":"14205:20:30"},"nativeSrc":"14205:53:30","nodeType":"YulFunctionCall","src":"14205:53:30"},"variableNames":[{"name":"value6","nativeSrc":"14195:6:30","nodeType":"YulIdentifier","src":"14195:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"13076:1199:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13164:9:30","nodeType":"YulTypedName","src":"13164:9:30","type":""},{"name":"dataEnd","nativeSrc":"13175:7:30","nodeType":"YulTypedName","src":"13175:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13187:6:30","nodeType":"YulTypedName","src":"13187:6:30","type":""},{"name":"value1","nativeSrc":"13195:6:30","nodeType":"YulTypedName","src":"13195:6:30","type":""},{"name":"value2","nativeSrc":"13203:6:30","nodeType":"YulTypedName","src":"13203:6:30","type":""},{"name":"value3","nativeSrc":"13211:6:30","nodeType":"YulTypedName","src":"13211:6:30","type":""},{"name":"value4","nativeSrc":"13219:6:30","nodeType":"YulTypedName","src":"13219:6:30","type":""},{"name":"value5","nativeSrc":"13227:6:30","nodeType":"YulTypedName","src":"13227:6:30","type":""},{"name":"value6","nativeSrc":"13235:6:30","nodeType":"YulTypedName","src":"13235:6:30","type":""}],"src":"13076:1199:30"},{"body":{"nativeSrc":"14364:391:30","nodeType":"YulBlock","src":"14364:391:30","statements":[{"body":{"nativeSrc":"14410:83:30","nodeType":"YulBlock","src":"14410:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14412:77:30","nodeType":"YulIdentifier","src":"14412:77:30"},"nativeSrc":"14412:79:30","nodeType":"YulFunctionCall","src":"14412:79:30"},"nativeSrc":"14412:79:30","nodeType":"YulExpressionStatement","src":"14412:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14385:7:30","nodeType":"YulIdentifier","src":"14385:7:30"},{"name":"headStart","nativeSrc":"14394:9:30","nodeType":"YulIdentifier","src":"14394:9:30"}],"functionName":{"name":"sub","nativeSrc":"14381:3:30","nodeType":"YulIdentifier","src":"14381:3:30"},"nativeSrc":"14381:23:30","nodeType":"YulFunctionCall","src":"14381:23:30"},{"kind":"number","nativeSrc":"14406:2:30","nodeType":"YulLiteral","src":"14406:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"14377:3:30","nodeType":"YulIdentifier","src":"14377:3:30"},"nativeSrc":"14377:32:30","nodeType":"YulFunctionCall","src":"14377:32:30"},"nativeSrc":"14374:119:30","nodeType":"YulIf","src":"14374:119:30"},{"nativeSrc":"14503:117:30","nodeType":"YulBlock","src":"14503:117:30","statements":[{"nativeSrc":"14518:15:30","nodeType":"YulVariableDeclaration","src":"14518:15:30","value":{"kind":"number","nativeSrc":"14532:1:30","nodeType":"YulLiteral","src":"14532:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14522:6:30","nodeType":"YulTypedName","src":"14522:6:30","type":""}]},{"nativeSrc":"14547:63:30","nodeType":"YulAssignment","src":"14547:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14582:9:30","nodeType":"YulIdentifier","src":"14582:9:30"},{"name":"offset","nativeSrc":"14593:6:30","nodeType":"YulIdentifier","src":"14593:6:30"}],"functionName":{"name":"add","nativeSrc":"14578:3:30","nodeType":"YulIdentifier","src":"14578:3:30"},"nativeSrc":"14578:22:30","nodeType":"YulFunctionCall","src":"14578:22:30"},{"name":"dataEnd","nativeSrc":"14602:7:30","nodeType":"YulIdentifier","src":"14602:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14557:20:30","nodeType":"YulIdentifier","src":"14557:20:30"},"nativeSrc":"14557:53:30","nodeType":"YulFunctionCall","src":"14557:53:30"},"variableNames":[{"name":"value0","nativeSrc":"14547:6:30","nodeType":"YulIdentifier","src":"14547:6:30"}]}]},{"nativeSrc":"14630:118:30","nodeType":"YulBlock","src":"14630:118:30","statements":[{"nativeSrc":"14645:16:30","nodeType":"YulVariableDeclaration","src":"14645:16:30","value":{"kind":"number","nativeSrc":"14659:2:30","nodeType":"YulLiteral","src":"14659:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"14649:6:30","nodeType":"YulTypedName","src":"14649:6:30","type":""}]},{"nativeSrc":"14675:63:30","nodeType":"YulAssignment","src":"14675:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14710:9:30","nodeType":"YulIdentifier","src":"14710:9:30"},{"name":"offset","nativeSrc":"14721:6:30","nodeType":"YulIdentifier","src":"14721:6:30"}],"functionName":{"name":"add","nativeSrc":"14706:3:30","nodeType":"YulIdentifier","src":"14706:3:30"},"nativeSrc":"14706:22:30","nodeType":"YulFunctionCall","src":"14706:22:30"},{"name":"dataEnd","nativeSrc":"14730:7:30","nodeType":"YulIdentifier","src":"14730:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14685:20:30","nodeType":"YulIdentifier","src":"14685:20:30"},"nativeSrc":"14685:53:30","nodeType":"YulFunctionCall","src":"14685:53:30"},"variableNames":[{"name":"value1","nativeSrc":"14675:6:30","nodeType":"YulIdentifier","src":"14675:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"14281:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14326:9:30","nodeType":"YulTypedName","src":"14326:9:30","type":""},{"name":"dataEnd","nativeSrc":"14337:7:30","nodeType":"YulTypedName","src":"14337:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14349:6:30","nodeType":"YulTypedName","src":"14349:6:30","type":""},{"name":"value1","nativeSrc":"14357:6:30","nodeType":"YulTypedName","src":"14357:6:30","type":""}],"src":"14281:474:30"},{"body":{"nativeSrc":"14789:152:30","nodeType":"YulBlock","src":"14789:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14806:1:30","nodeType":"YulLiteral","src":"14806:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"14809:77:30","nodeType":"YulLiteral","src":"14809:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14799:6:30","nodeType":"YulIdentifier","src":"14799:6:30"},"nativeSrc":"14799:88:30","nodeType":"YulFunctionCall","src":"14799:88:30"},"nativeSrc":"14799:88:30","nodeType":"YulExpressionStatement","src":"14799:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14903:1:30","nodeType":"YulLiteral","src":"14903:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"14906:4:30","nodeType":"YulLiteral","src":"14906:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"14896:6:30","nodeType":"YulIdentifier","src":"14896:6:30"},"nativeSrc":"14896:15:30","nodeType":"YulFunctionCall","src":"14896:15:30"},"nativeSrc":"14896:15:30","nodeType":"YulExpressionStatement","src":"14896:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14927:1:30","nodeType":"YulLiteral","src":"14927:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"14930:4:30","nodeType":"YulLiteral","src":"14930:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14920:6:30","nodeType":"YulIdentifier","src":"14920:6:30"},"nativeSrc":"14920:15:30","nodeType":"YulFunctionCall","src":"14920:15:30"},"nativeSrc":"14920:15:30","nodeType":"YulExpressionStatement","src":"14920:15:30"}]},"name":"panic_error_0x22","nativeSrc":"14761:180:30","nodeType":"YulFunctionDefinition","src":"14761:180:30"},{"body":{"nativeSrc":"14998:269:30","nodeType":"YulBlock","src":"14998:269:30","statements":[{"nativeSrc":"15008:22:30","nodeType":"YulAssignment","src":"15008:22:30","value":{"arguments":[{"name":"data","nativeSrc":"15022:4:30","nodeType":"YulIdentifier","src":"15022:4:30"},{"kind":"number","nativeSrc":"15028:1:30","nodeType":"YulLiteral","src":"15028:1:30","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"15018:3:30","nodeType":"YulIdentifier","src":"15018:3:30"},"nativeSrc":"15018:12:30","nodeType":"YulFunctionCall","src":"15018:12:30"},"variableNames":[{"name":"length","nativeSrc":"15008:6:30","nodeType":"YulIdentifier","src":"15008:6:30"}]},{"nativeSrc":"15039:38:30","nodeType":"YulVariableDeclaration","src":"15039:38:30","value":{"arguments":[{"name":"data","nativeSrc":"15069:4:30","nodeType":"YulIdentifier","src":"15069:4:30"},{"kind":"number","nativeSrc":"15075:1:30","nodeType":"YulLiteral","src":"15075:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15065:3:30","nodeType":"YulIdentifier","src":"15065:3:30"},"nativeSrc":"15065:12:30","nodeType":"YulFunctionCall","src":"15065:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"15043:18:30","nodeType":"YulTypedName","src":"15043:18:30","type":""}]},{"body":{"nativeSrc":"15116:51:30","nodeType":"YulBlock","src":"15116:51:30","statements":[{"nativeSrc":"15130:27:30","nodeType":"YulAssignment","src":"15130:27:30","value":{"arguments":[{"name":"length","nativeSrc":"15144:6:30","nodeType":"YulIdentifier","src":"15144:6:30"},{"kind":"number","nativeSrc":"15152:4:30","nodeType":"YulLiteral","src":"15152:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"15140:3:30","nodeType":"YulIdentifier","src":"15140:3:30"},"nativeSrc":"15140:17:30","nodeType":"YulFunctionCall","src":"15140:17:30"},"variableNames":[{"name":"length","nativeSrc":"15130:6:30","nodeType":"YulIdentifier","src":"15130:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15096:18:30","nodeType":"YulIdentifier","src":"15096:18:30"}],"functionName":{"name":"iszero","nativeSrc":"15089:6:30","nodeType":"YulIdentifier","src":"15089:6:30"},"nativeSrc":"15089:26:30","nodeType":"YulFunctionCall","src":"15089:26:30"},"nativeSrc":"15086:81:30","nodeType":"YulIf","src":"15086:81:30"},{"body":{"nativeSrc":"15219:42:30","nodeType":"YulBlock","src":"15219:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"15233:16:30","nodeType":"YulIdentifier","src":"15233:16:30"},"nativeSrc":"15233:18:30","nodeType":"YulFunctionCall","src":"15233:18:30"},"nativeSrc":"15233:18:30","nodeType":"YulExpressionStatement","src":"15233:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15183:18:30","nodeType":"YulIdentifier","src":"15183:18:30"},{"arguments":[{"name":"length","nativeSrc":"15206:6:30","nodeType":"YulIdentifier","src":"15206:6:30"},{"kind":"number","nativeSrc":"15214:2:30","nodeType":"YulLiteral","src":"15214:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"15203:2:30","nodeType":"YulIdentifier","src":"15203:2:30"},"nativeSrc":"15203:14:30","nodeType":"YulFunctionCall","src":"15203:14:30"}],"functionName":{"name":"eq","nativeSrc":"15180:2:30","nodeType":"YulIdentifier","src":"15180:2:30"},"nativeSrc":"15180:38:30","nodeType":"YulFunctionCall","src":"15180:38:30"},"nativeSrc":"15177:84:30","nodeType":"YulIf","src":"15177:84:30"}]},"name":"extract_byte_array_length","nativeSrc":"14947:320:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"14982:4:30","nodeType":"YulTypedName","src":"14982:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14991:6:30","nodeType":"YulTypedName","src":"14991:6:30","type":""}],"src":"14947:320:30"},{"body":{"nativeSrc":"15379:127:30","nodeType":"YulBlock","src":"15379:127:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15401:6:30","nodeType":"YulIdentifier","src":"15401:6:30"},{"kind":"number","nativeSrc":"15409:1:30","nodeType":"YulLiteral","src":"15409:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15397:3:30","nodeType":"YulIdentifier","src":"15397:3:30"},"nativeSrc":"15397:14:30","nodeType":"YulFunctionCall","src":"15397:14:30"},{"hexValue":"4172617261436f696e3a2041646472657373206e6f7420666f756e6420696e20","kind":"string","nativeSrc":"15413:34:30","nodeType":"YulLiteral","src":"15413:34:30","type":"","value":"AraraCoin: Address not found in "}],"functionName":{"name":"mstore","nativeSrc":"15390:6:30","nodeType":"YulIdentifier","src":"15390:6:30"},"nativeSrc":"15390:58:30","nodeType":"YulFunctionCall","src":"15390:58:30"},"nativeSrc":"15390:58:30","nodeType":"YulExpressionStatement","src":"15390:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15469:6:30","nodeType":"YulIdentifier","src":"15469:6:30"},{"kind":"number","nativeSrc":"15477:2:30","nodeType":"YulLiteral","src":"15477:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15465:3:30","nodeType":"YulIdentifier","src":"15465:3:30"},"nativeSrc":"15465:15:30","nodeType":"YulFunctionCall","src":"15465:15:30"},{"hexValue":"746865206578656d7074696f6e73","kind":"string","nativeSrc":"15482:16:30","nodeType":"YulLiteral","src":"15482:16:30","type":"","value":"the exemptions"}],"functionName":{"name":"mstore","nativeSrc":"15458:6:30","nodeType":"YulIdentifier","src":"15458:6:30"},"nativeSrc":"15458:41:30","nodeType":"YulFunctionCall","src":"15458:41:30"},"nativeSrc":"15458:41:30","nodeType":"YulExpressionStatement","src":"15458:41:30"}]},"name":"store_literal_in_memory_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a","nativeSrc":"15273:233:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15371:6:30","nodeType":"YulTypedName","src":"15371:6:30","type":""}],"src":"15273:233:30"},{"body":{"nativeSrc":"15658:220:30","nodeType":"YulBlock","src":"15658:220:30","statements":[{"nativeSrc":"15668:74:30","nodeType":"YulAssignment","src":"15668:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"15734:3:30","nodeType":"YulIdentifier","src":"15734:3:30"},{"kind":"number","nativeSrc":"15739:2:30","nodeType":"YulLiteral","src":"15739:2:30","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15675:58:30","nodeType":"YulIdentifier","src":"15675:58:30"},"nativeSrc":"15675:67:30","nodeType":"YulFunctionCall","src":"15675:67:30"},"variableNames":[{"name":"pos","nativeSrc":"15668:3:30","nodeType":"YulIdentifier","src":"15668:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15840:3:30","nodeType":"YulIdentifier","src":"15840:3:30"}],"functionName":{"name":"store_literal_in_memory_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a","nativeSrc":"15751:88:30","nodeType":"YulIdentifier","src":"15751:88:30"},"nativeSrc":"15751:93:30","nodeType":"YulFunctionCall","src":"15751:93:30"},"nativeSrc":"15751:93:30","nodeType":"YulExpressionStatement","src":"15751:93:30"},{"nativeSrc":"15853:19:30","nodeType":"YulAssignment","src":"15853:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"15864:3:30","nodeType":"YulIdentifier","src":"15864:3:30"},{"kind":"number","nativeSrc":"15869:2:30","nodeType":"YulLiteral","src":"15869:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15860:3:30","nodeType":"YulIdentifier","src":"15860:3:30"},"nativeSrc":"15860:12:30","nodeType":"YulFunctionCall","src":"15860:12:30"},"variableNames":[{"name":"end","nativeSrc":"15853:3:30","nodeType":"YulIdentifier","src":"15853:3:30"}]}]},"name":"abi_encode_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a_to_t_string_memory_ptr_fromStack","nativeSrc":"15512:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15646:3:30","nodeType":"YulTypedName","src":"15646:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15654:3:30","nodeType":"YulTypedName","src":"15654:3:30","type":""}],"src":"15512:366:30"},{"body":{"nativeSrc":"16055:248:30","nodeType":"YulBlock","src":"16055:248:30","statements":[{"nativeSrc":"16065:26:30","nodeType":"YulAssignment","src":"16065:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"16077:9:30","nodeType":"YulIdentifier","src":"16077:9:30"},{"kind":"number","nativeSrc":"16088:2:30","nodeType":"YulLiteral","src":"16088:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16073:3:30","nodeType":"YulIdentifier","src":"16073:3:30"},"nativeSrc":"16073:18:30","nodeType":"YulFunctionCall","src":"16073:18:30"},"variableNames":[{"name":"tail","nativeSrc":"16065:4:30","nodeType":"YulIdentifier","src":"16065:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16112:9:30","nodeType":"YulIdentifier","src":"16112:9:30"},{"kind":"number","nativeSrc":"16123:1:30","nodeType":"YulLiteral","src":"16123:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16108:3:30","nodeType":"YulIdentifier","src":"16108:3:30"},"nativeSrc":"16108:17:30","nodeType":"YulFunctionCall","src":"16108:17:30"},{"arguments":[{"name":"tail","nativeSrc":"16131:4:30","nodeType":"YulIdentifier","src":"16131:4:30"},{"name":"headStart","nativeSrc":"16137:9:30","nodeType":"YulIdentifier","src":"16137:9:30"}],"functionName":{"name":"sub","nativeSrc":"16127:3:30","nodeType":"YulIdentifier","src":"16127:3:30"},"nativeSrc":"16127:20:30","nodeType":"YulFunctionCall","src":"16127:20:30"}],"functionName":{"name":"mstore","nativeSrc":"16101:6:30","nodeType":"YulIdentifier","src":"16101:6:30"},"nativeSrc":"16101:47:30","nodeType":"YulFunctionCall","src":"16101:47:30"},"nativeSrc":"16101:47:30","nodeType":"YulExpressionStatement","src":"16101:47:30"},{"nativeSrc":"16157:139:30","nodeType":"YulAssignment","src":"16157:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"16291:4:30","nodeType":"YulIdentifier","src":"16291:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a_to_t_string_memory_ptr_fromStack","nativeSrc":"16165:124:30","nodeType":"YulIdentifier","src":"16165:124:30"},"nativeSrc":"16165:131:30","nodeType":"YulFunctionCall","src":"16165:131:30"},"variableNames":[{"name":"tail","nativeSrc":"16157:4:30","nodeType":"YulIdentifier","src":"16157:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15884:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16035:9:30","nodeType":"YulTypedName","src":"16035:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16050:4:30","nodeType":"YulTypedName","src":"16050:4:30","type":""}],"src":"15884:419:30"},{"body":{"nativeSrc":"16415:192:30","nodeType":"YulBlock","src":"16415:192:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16437:6:30","nodeType":"YulIdentifier","src":"16437:6:30"},{"kind":"number","nativeSrc":"16445:1:30","nodeType":"YulLiteral","src":"16445:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16433:3:30","nodeType":"YulIdentifier","src":"16433:3:30"},"nativeSrc":"16433:14:30","nodeType":"YulFunctionCall","src":"16433:14:30"},{"hexValue":"4172617261436f696e3a205461782070657263656e74616765206d7573742062","kind":"string","nativeSrc":"16449:34:30","nodeType":"YulLiteral","src":"16449:34:30","type":"","value":"AraraCoin: Tax percentage must b"}],"functionName":{"name":"mstore","nativeSrc":"16426:6:30","nodeType":"YulIdentifier","src":"16426:6:30"},"nativeSrc":"16426:58:30","nodeType":"YulFunctionCall","src":"16426:58:30"},"nativeSrc":"16426:58:30","nodeType":"YulExpressionStatement","src":"16426:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16505:6:30","nodeType":"YulIdentifier","src":"16505:6:30"},{"kind":"number","nativeSrc":"16513:2:30","nodeType":"YulLiteral","src":"16513:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16501:3:30","nodeType":"YulIdentifier","src":"16501:3:30"},"nativeSrc":"16501:15:30","nodeType":"YulFunctionCall","src":"16501:15:30"},{"hexValue":"65206265747765656e203020616e642031303020626173697320706f696e7473","kind":"string","nativeSrc":"16518:34:30","nodeType":"YulLiteral","src":"16518:34:30","type":"","value":"e between 0 and 100 basis points"}],"functionName":{"name":"mstore","nativeSrc":"16494:6:30","nodeType":"YulIdentifier","src":"16494:6:30"},"nativeSrc":"16494:59:30","nodeType":"YulFunctionCall","src":"16494:59:30"},"nativeSrc":"16494:59:30","nodeType":"YulExpressionStatement","src":"16494:59:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16574:6:30","nodeType":"YulIdentifier","src":"16574:6:30"},{"kind":"number","nativeSrc":"16582:2:30","nodeType":"YulLiteral","src":"16582:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16570:3:30","nodeType":"YulIdentifier","src":"16570:3:30"},"nativeSrc":"16570:15:30","nodeType":"YulFunctionCall","src":"16570:15:30"},{"hexValue":"20286d6178203125292e","kind":"string","nativeSrc":"16587:12:30","nodeType":"YulLiteral","src":"16587:12:30","type":"","value":" (max 1%)."}],"functionName":{"name":"mstore","nativeSrc":"16563:6:30","nodeType":"YulIdentifier","src":"16563:6:30"},"nativeSrc":"16563:37:30","nodeType":"YulFunctionCall","src":"16563:37:30"},"nativeSrc":"16563:37:30","nodeType":"YulExpressionStatement","src":"16563:37:30"}]},"name":"store_literal_in_memory_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c","nativeSrc":"16309:298:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16407:6:30","nodeType":"YulTypedName","src":"16407:6:30","type":""}],"src":"16309:298:30"},{"body":{"nativeSrc":"16759:220:30","nodeType":"YulBlock","src":"16759:220:30","statements":[{"nativeSrc":"16769:74:30","nodeType":"YulAssignment","src":"16769:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"16835:3:30","nodeType":"YulIdentifier","src":"16835:3:30"},{"kind":"number","nativeSrc":"16840:2:30","nodeType":"YulLiteral","src":"16840:2:30","type":"","value":"74"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16776:58:30","nodeType":"YulIdentifier","src":"16776:58:30"},"nativeSrc":"16776:67:30","nodeType":"YulFunctionCall","src":"16776:67:30"},"variableNames":[{"name":"pos","nativeSrc":"16769:3:30","nodeType":"YulIdentifier","src":"16769:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16941:3:30","nodeType":"YulIdentifier","src":"16941:3:30"}],"functionName":{"name":"store_literal_in_memory_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c","nativeSrc":"16852:88:30","nodeType":"YulIdentifier","src":"16852:88:30"},"nativeSrc":"16852:93:30","nodeType":"YulFunctionCall","src":"16852:93:30"},"nativeSrc":"16852:93:30","nodeType":"YulExpressionStatement","src":"16852:93:30"},{"nativeSrc":"16954:19:30","nodeType":"YulAssignment","src":"16954:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"16965:3:30","nodeType":"YulIdentifier","src":"16965:3:30"},{"kind":"number","nativeSrc":"16970:2:30","nodeType":"YulLiteral","src":"16970:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16961:3:30","nodeType":"YulIdentifier","src":"16961:3:30"},"nativeSrc":"16961:12:30","nodeType":"YulFunctionCall","src":"16961:12:30"},"variableNames":[{"name":"end","nativeSrc":"16954:3:30","nodeType":"YulIdentifier","src":"16954:3:30"}]}]},"name":"abi_encode_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c_to_t_string_memory_ptr_fromStack","nativeSrc":"16613:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16747:3:30","nodeType":"YulTypedName","src":"16747:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16755:3:30","nodeType":"YulTypedName","src":"16755:3:30","type":""}],"src":"16613:366:30"},{"body":{"nativeSrc":"17156:248:30","nodeType":"YulBlock","src":"17156:248:30","statements":[{"nativeSrc":"17166:26:30","nodeType":"YulAssignment","src":"17166:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"17178:9:30","nodeType":"YulIdentifier","src":"17178:9:30"},{"kind":"number","nativeSrc":"17189:2:30","nodeType":"YulLiteral","src":"17189:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17174:3:30","nodeType":"YulIdentifier","src":"17174:3:30"},"nativeSrc":"17174:18:30","nodeType":"YulFunctionCall","src":"17174:18:30"},"variableNames":[{"name":"tail","nativeSrc":"17166:4:30","nodeType":"YulIdentifier","src":"17166:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17213:9:30","nodeType":"YulIdentifier","src":"17213:9:30"},{"kind":"number","nativeSrc":"17224:1:30","nodeType":"YulLiteral","src":"17224:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17209:3:30","nodeType":"YulIdentifier","src":"17209:3:30"},"nativeSrc":"17209:17:30","nodeType":"YulFunctionCall","src":"17209:17:30"},{"arguments":[{"name":"tail","nativeSrc":"17232:4:30","nodeType":"YulIdentifier","src":"17232:4:30"},{"name":"headStart","nativeSrc":"17238:9:30","nodeType":"YulIdentifier","src":"17238:9:30"}],"functionName":{"name":"sub","nativeSrc":"17228:3:30","nodeType":"YulIdentifier","src":"17228:3:30"},"nativeSrc":"17228:20:30","nodeType":"YulFunctionCall","src":"17228:20:30"}],"functionName":{"name":"mstore","nativeSrc":"17202:6:30","nodeType":"YulIdentifier","src":"17202:6:30"},"nativeSrc":"17202:47:30","nodeType":"YulFunctionCall","src":"17202:47:30"},"nativeSrc":"17202:47:30","nodeType":"YulExpressionStatement","src":"17202:47:30"},{"nativeSrc":"17258:139:30","nodeType":"YulAssignment","src":"17258:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"17392:4:30","nodeType":"YulIdentifier","src":"17392:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c_to_t_string_memory_ptr_fromStack","nativeSrc":"17266:124:30","nodeType":"YulIdentifier","src":"17266:124:30"},"nativeSrc":"17266:131:30","nodeType":"YulFunctionCall","src":"17266:131:30"},"variableNames":[{"name":"tail","nativeSrc":"17258:4:30","nodeType":"YulIdentifier","src":"17258:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16985:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17136:9:30","nodeType":"YulTypedName","src":"17136:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17151:4:30","nodeType":"YulTypedName","src":"17151:4:30","type":""}],"src":"16985:419:30"},{"body":{"nativeSrc":"17516:189:30","nodeType":"YulBlock","src":"17516:189:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17538:6:30","nodeType":"YulIdentifier","src":"17538:6:30"},{"kind":"number","nativeSrc":"17546:1:30","nodeType":"YulLiteral","src":"17546:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17534:3:30","nodeType":"YulIdentifier","src":"17534:3:30"},"nativeSrc":"17534:14:30","nodeType":"YulFunctionCall","src":"17534:14:30"},{"hexValue":"4172617261436f696e3a204e6577207461782070657263656e74616765206d75","kind":"string","nativeSrc":"17550:34:30","nodeType":"YulLiteral","src":"17550:34:30","type":"","value":"AraraCoin: New tax percentage mu"}],"functionName":{"name":"mstore","nativeSrc":"17527:6:30","nodeType":"YulIdentifier","src":"17527:6:30"},"nativeSrc":"17527:58:30","nodeType":"YulFunctionCall","src":"17527:58:30"},"nativeSrc":"17527:58:30","nodeType":"YulExpressionStatement","src":"17527:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17606:6:30","nodeType":"YulIdentifier","src":"17606:6:30"},{"kind":"number","nativeSrc":"17614:2:30","nodeType":"YulLiteral","src":"17614:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17602:3:30","nodeType":"YulIdentifier","src":"17602:3:30"},"nativeSrc":"17602:15:30","nodeType":"YulFunctionCall","src":"17602:15:30"},{"hexValue":"737420626520646966666572656e742066726f6d207468652063757272656e74","kind":"string","nativeSrc":"17619:34:30","nodeType":"YulLiteral","src":"17619:34:30","type":"","value":"st be different from the current"}],"functionName":{"name":"mstore","nativeSrc":"17595:6:30","nodeType":"YulIdentifier","src":"17595:6:30"},"nativeSrc":"17595:59:30","nodeType":"YulFunctionCall","src":"17595:59:30"},"nativeSrc":"17595:59:30","nodeType":"YulExpressionStatement","src":"17595:59:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17675:6:30","nodeType":"YulIdentifier","src":"17675:6:30"},{"kind":"number","nativeSrc":"17683:2:30","nodeType":"YulLiteral","src":"17683:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17671:3:30","nodeType":"YulIdentifier","src":"17671:3:30"},"nativeSrc":"17671:15:30","nodeType":"YulFunctionCall","src":"17671:15:30"},{"hexValue":"2076616c75652e","kind":"string","nativeSrc":"17688:9:30","nodeType":"YulLiteral","src":"17688:9:30","type":"","value":" value."}],"functionName":{"name":"mstore","nativeSrc":"17664:6:30","nodeType":"YulIdentifier","src":"17664:6:30"},"nativeSrc":"17664:34:30","nodeType":"YulFunctionCall","src":"17664:34:30"},"nativeSrc":"17664:34:30","nodeType":"YulExpressionStatement","src":"17664:34:30"}]},"name":"store_literal_in_memory_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78","nativeSrc":"17410:295:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17508:6:30","nodeType":"YulTypedName","src":"17508:6:30","type":""}],"src":"17410:295:30"},{"body":{"nativeSrc":"17857:220:30","nodeType":"YulBlock","src":"17857:220:30","statements":[{"nativeSrc":"17867:74:30","nodeType":"YulAssignment","src":"17867:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"17933:3:30","nodeType":"YulIdentifier","src":"17933:3:30"},{"kind":"number","nativeSrc":"17938:2:30","nodeType":"YulLiteral","src":"17938:2:30","type":"","value":"71"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17874:58:30","nodeType":"YulIdentifier","src":"17874:58:30"},"nativeSrc":"17874:67:30","nodeType":"YulFunctionCall","src":"17874:67:30"},"variableNames":[{"name":"pos","nativeSrc":"17867:3:30","nodeType":"YulIdentifier","src":"17867:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18039:3:30","nodeType":"YulIdentifier","src":"18039:3:30"}],"functionName":{"name":"store_literal_in_memory_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78","nativeSrc":"17950:88:30","nodeType":"YulIdentifier","src":"17950:88:30"},"nativeSrc":"17950:93:30","nodeType":"YulFunctionCall","src":"17950:93:30"},"nativeSrc":"17950:93:30","nodeType":"YulExpressionStatement","src":"17950:93:30"},{"nativeSrc":"18052:19:30","nodeType":"YulAssignment","src":"18052:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"18063:3:30","nodeType":"YulIdentifier","src":"18063:3:30"},{"kind":"number","nativeSrc":"18068:2:30","nodeType":"YulLiteral","src":"18068:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18059:3:30","nodeType":"YulIdentifier","src":"18059:3:30"},"nativeSrc":"18059:12:30","nodeType":"YulFunctionCall","src":"18059:12:30"},"variableNames":[{"name":"end","nativeSrc":"18052:3:30","nodeType":"YulIdentifier","src":"18052:3:30"}]}]},"name":"abi_encode_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78_to_t_string_memory_ptr_fromStack","nativeSrc":"17711:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17845:3:30","nodeType":"YulTypedName","src":"17845:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17853:3:30","nodeType":"YulTypedName","src":"17853:3:30","type":""}],"src":"17711:366:30"},{"body":{"nativeSrc":"18254:248:30","nodeType":"YulBlock","src":"18254:248:30","statements":[{"nativeSrc":"18264:26:30","nodeType":"YulAssignment","src":"18264:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"18276:9:30","nodeType":"YulIdentifier","src":"18276:9:30"},{"kind":"number","nativeSrc":"18287:2:30","nodeType":"YulLiteral","src":"18287:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18272:3:30","nodeType":"YulIdentifier","src":"18272:3:30"},"nativeSrc":"18272:18:30","nodeType":"YulFunctionCall","src":"18272:18:30"},"variableNames":[{"name":"tail","nativeSrc":"18264:4:30","nodeType":"YulIdentifier","src":"18264:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18311:9:30","nodeType":"YulIdentifier","src":"18311:9:30"},{"kind":"number","nativeSrc":"18322:1:30","nodeType":"YulLiteral","src":"18322:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18307:3:30","nodeType":"YulIdentifier","src":"18307:3:30"},"nativeSrc":"18307:17:30","nodeType":"YulFunctionCall","src":"18307:17:30"},{"arguments":[{"name":"tail","nativeSrc":"18330:4:30","nodeType":"YulIdentifier","src":"18330:4:30"},{"name":"headStart","nativeSrc":"18336:9:30","nodeType":"YulIdentifier","src":"18336:9:30"}],"functionName":{"name":"sub","nativeSrc":"18326:3:30","nodeType":"YulIdentifier","src":"18326:3:30"},"nativeSrc":"18326:20:30","nodeType":"YulFunctionCall","src":"18326:20:30"}],"functionName":{"name":"mstore","nativeSrc":"18300:6:30","nodeType":"YulIdentifier","src":"18300:6:30"},"nativeSrc":"18300:47:30","nodeType":"YulFunctionCall","src":"18300:47:30"},"nativeSrc":"18300:47:30","nodeType":"YulExpressionStatement","src":"18300:47:30"},{"nativeSrc":"18356:139:30","nodeType":"YulAssignment","src":"18356:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"18490:4:30","nodeType":"YulIdentifier","src":"18490:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78_to_t_string_memory_ptr_fromStack","nativeSrc":"18364:124:30","nodeType":"YulIdentifier","src":"18364:124:30"},"nativeSrc":"18364:131:30","nodeType":"YulFunctionCall","src":"18364:131:30"},"variableNames":[{"name":"tail","nativeSrc":"18356:4:30","nodeType":"YulIdentifier","src":"18356:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18083:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18234:9:30","nodeType":"YulTypedName","src":"18234:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18249:4:30","nodeType":"YulTypedName","src":"18249:4:30","type":""}],"src":"18083:419:30"},{"body":{"nativeSrc":"18622:34:30","nodeType":"YulBlock","src":"18622:34:30","statements":[{"nativeSrc":"18632:18:30","nodeType":"YulAssignment","src":"18632:18:30","value":{"name":"pos","nativeSrc":"18647:3:30","nodeType":"YulIdentifier","src":"18647:3:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"18632:11:30","nodeType":"YulIdentifier","src":"18632:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18508:148:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18594:3:30","nodeType":"YulTypedName","src":"18594:3:30","type":""},{"name":"length","nativeSrc":"18599:6:30","nodeType":"YulTypedName","src":"18599:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"18610:11:30","nodeType":"YulTypedName","src":"18610:11:30","type":""}],"src":"18508:148:30"},{"body":{"nativeSrc":"18768:50:30","nodeType":"YulBlock","src":"18768:50:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18790:6:30","nodeType":"YulIdentifier","src":"18790:6:30"},{"kind":"number","nativeSrc":"18798:1:30","nodeType":"YulLiteral","src":"18798:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18786:3:30","nodeType":"YulIdentifier","src":"18786:3:30"},"nativeSrc":"18786:14:30","nodeType":"YulFunctionCall","src":"18786:14:30"},{"hexValue":"4e6577546178","kind":"string","nativeSrc":"18802:8:30","nodeType":"YulLiteral","src":"18802:8:30","type":"","value":"NewTax"}],"functionName":{"name":"mstore","nativeSrc":"18779:6:30","nodeType":"YulIdentifier","src":"18779:6:30"},"nativeSrc":"18779:32:30","nodeType":"YulFunctionCall","src":"18779:32:30"},"nativeSrc":"18779:32:30","nodeType":"YulExpressionStatement","src":"18779:32:30"}]},"name":"store_literal_in_memory_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354","nativeSrc":"18662:156:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18760:6:30","nodeType":"YulTypedName","src":"18760:6:30","type":""}],"src":"18662:156:30"},{"body":{"nativeSrc":"18988:236:30","nodeType":"YulBlock","src":"18988:236:30","statements":[{"nativeSrc":"18998:91:30","nodeType":"YulAssignment","src":"18998:91:30","value":{"arguments":[{"name":"pos","nativeSrc":"19082:3:30","nodeType":"YulIdentifier","src":"19082:3:30"},{"kind":"number","nativeSrc":"19087:1:30","nodeType":"YulLiteral","src":"19087:1:30","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19005:76:30","nodeType":"YulIdentifier","src":"19005:76:30"},"nativeSrc":"19005:84:30","nodeType":"YulFunctionCall","src":"19005:84:30"},"variableNames":[{"name":"pos","nativeSrc":"18998:3:30","nodeType":"YulIdentifier","src":"18998:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19187:3:30","nodeType":"YulIdentifier","src":"19187:3:30"}],"functionName":{"name":"store_literal_in_memory_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354","nativeSrc":"19098:88:30","nodeType":"YulIdentifier","src":"19098:88:30"},"nativeSrc":"19098:93:30","nodeType":"YulFunctionCall","src":"19098:93:30"},"nativeSrc":"19098:93:30","nodeType":"YulExpressionStatement","src":"19098:93:30"},{"nativeSrc":"19200:18:30","nodeType":"YulAssignment","src":"19200:18:30","value":{"arguments":[{"name":"pos","nativeSrc":"19211:3:30","nodeType":"YulIdentifier","src":"19211:3:30"},{"kind":"number","nativeSrc":"19216:1:30","nodeType":"YulLiteral","src":"19216:1:30","type":"","value":"6"}],"functionName":{"name":"add","nativeSrc":"19207:3:30","nodeType":"YulIdentifier","src":"19207:3:30"},"nativeSrc":"19207:11:30","nodeType":"YulFunctionCall","src":"19207:11:30"},"variableNames":[{"name":"end","nativeSrc":"19200:3:30","nodeType":"YulIdentifier","src":"19200:3:30"}]}]},"name":"abi_encode_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18824:400:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18976:3:30","nodeType":"YulTypedName","src":"18976:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18984:3:30","nodeType":"YulTypedName","src":"18984:3:30","type":""}],"src":"18824:400:30"},{"body":{"nativeSrc":"19277:32:30","nodeType":"YulBlock","src":"19277:32:30","statements":[{"nativeSrc":"19287:16:30","nodeType":"YulAssignment","src":"19287:16:30","value":{"name":"value","nativeSrc":"19298:5:30","nodeType":"YulIdentifier","src":"19298:5:30"},"variableNames":[{"name":"aligned","nativeSrc":"19287:7:30","nodeType":"YulIdentifier","src":"19287:7:30"}]}]},"name":"leftAlign_t_uint256","nativeSrc":"19230:79:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19259:5:30","nodeType":"YulTypedName","src":"19259:5:30","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"19269:7:30","nodeType":"YulTypedName","src":"19269:7:30","type":""}],"src":"19230:79:30"},{"body":{"nativeSrc":"19398:74:30","nodeType":"YulBlock","src":"19398:74:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19415:3:30","nodeType":"YulIdentifier","src":"19415:3:30"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19458:5:30","nodeType":"YulIdentifier","src":"19458:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19440:17:30","nodeType":"YulIdentifier","src":"19440:17:30"},"nativeSrc":"19440:24:30","nodeType":"YulFunctionCall","src":"19440:24:30"}],"functionName":{"name":"leftAlign_t_uint256","nativeSrc":"19420:19:30","nodeType":"YulIdentifier","src":"19420:19:30"},"nativeSrc":"19420:45:30","nodeType":"YulFunctionCall","src":"19420:45:30"}],"functionName":{"name":"mstore","nativeSrc":"19408:6:30","nodeType":"YulIdentifier","src":"19408:6:30"},"nativeSrc":"19408:58:30","nodeType":"YulFunctionCall","src":"19408:58:30"},"nativeSrc":"19408:58:30","nodeType":"YulExpressionStatement","src":"19408:58:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"19315:157:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19386:5:30","nodeType":"YulTypedName","src":"19386:5:30","type":""},{"name":"pos","nativeSrc":"19393:3:30","nodeType":"YulTypedName","src":"19393:3:30","type":""}],"src":"19315:157:30"},{"body":{"nativeSrc":"19695:305:30","nodeType":"YulBlock","src":"19695:305:30","statements":[{"nativeSrc":"19706:155:30","nodeType":"YulAssignment","src":"19706:155:30","value":{"arguments":[{"name":"pos","nativeSrc":"19857:3:30","nodeType":"YulIdentifier","src":"19857:3:30"}],"functionName":{"name":"abi_encode_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19713:142:30","nodeType":"YulIdentifier","src":"19713:142:30"},"nativeSrc":"19713:148:30","nodeType":"YulFunctionCall","src":"19713:148:30"},"variableNames":[{"name":"pos","nativeSrc":"19706:3:30","nodeType":"YulIdentifier","src":"19706:3:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19933:6:30","nodeType":"YulIdentifier","src":"19933:6:30"},{"name":"pos","nativeSrc":"19942:3:30","nodeType":"YulIdentifier","src":"19942:3:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"19871:61:30","nodeType":"YulIdentifier","src":"19871:61:30"},"nativeSrc":"19871:75:30","nodeType":"YulFunctionCall","src":"19871:75:30"},"nativeSrc":"19871:75:30","nodeType":"YulExpressionStatement","src":"19871:75:30"},{"nativeSrc":"19955:19:30","nodeType":"YulAssignment","src":"19955:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"19966:3:30","nodeType":"YulIdentifier","src":"19966:3:30"},{"kind":"number","nativeSrc":"19971:2:30","nodeType":"YulLiteral","src":"19971:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19962:3:30","nodeType":"YulIdentifier","src":"19962:3:30"},"nativeSrc":"19962:12:30","nodeType":"YulFunctionCall","src":"19962:12:30"},"variableNames":[{"name":"pos","nativeSrc":"19955:3:30","nodeType":"YulIdentifier","src":"19955:3:30"}]},{"nativeSrc":"19984:10:30","nodeType":"YulAssignment","src":"19984:10:30","value":{"name":"pos","nativeSrc":"19991:3:30","nodeType":"YulIdentifier","src":"19991:3:30"},"variableNames":[{"name":"end","nativeSrc":"19984:3:30","nodeType":"YulIdentifier","src":"19984:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"19478:522:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19674:3:30","nodeType":"YulTypedName","src":"19674:3:30","type":""},{"name":"value0","nativeSrc":"19680:6:30","nodeType":"YulTypedName","src":"19680:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19691:3:30","nodeType":"YulTypedName","src":"19691:3:30","type":""}],"src":"19478:522:30"},{"body":{"nativeSrc":"20132:206:30","nodeType":"YulBlock","src":"20132:206:30","statements":[{"nativeSrc":"20142:26:30","nodeType":"YulAssignment","src":"20142:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"20154:9:30","nodeType":"YulIdentifier","src":"20154:9:30"},{"kind":"number","nativeSrc":"20165:2:30","nodeType":"YulLiteral","src":"20165:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20150:3:30","nodeType":"YulIdentifier","src":"20150:3:30"},"nativeSrc":"20150:18:30","nodeType":"YulFunctionCall","src":"20150:18:30"},"variableNames":[{"name":"tail","nativeSrc":"20142:4:30","nodeType":"YulIdentifier","src":"20142:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20222:6:30","nodeType":"YulIdentifier","src":"20222:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"20235:9:30","nodeType":"YulIdentifier","src":"20235:9:30"},{"kind":"number","nativeSrc":"20246:1:30","nodeType":"YulLiteral","src":"20246:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20231:3:30","nodeType":"YulIdentifier","src":"20231:3:30"},"nativeSrc":"20231:17:30","nodeType":"YulFunctionCall","src":"20231:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20178:43:30","nodeType":"YulIdentifier","src":"20178:43:30"},"nativeSrc":"20178:71:30","nodeType":"YulFunctionCall","src":"20178:71:30"},"nativeSrc":"20178:71:30","nodeType":"YulExpressionStatement","src":"20178:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20303:6:30","nodeType":"YulIdentifier","src":"20303:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"20316:9:30","nodeType":"YulIdentifier","src":"20316:9:30"},{"kind":"number","nativeSrc":"20327:2:30","nodeType":"YulLiteral","src":"20327:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20312:3:30","nodeType":"YulIdentifier","src":"20312:3:30"},"nativeSrc":"20312:18:30","nodeType":"YulFunctionCall","src":"20312:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20259:43:30","nodeType":"YulIdentifier","src":"20259:43:30"},"nativeSrc":"20259:72:30","nodeType":"YulFunctionCall","src":"20259:72:30"},"nativeSrc":"20259:72:30","nodeType":"YulExpressionStatement","src":"20259:72:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"20006:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20096:9:30","nodeType":"YulTypedName","src":"20096:9:30","type":""},{"name":"value1","nativeSrc":"20108:6:30","nodeType":"YulTypedName","src":"20108:6:30","type":""},{"name":"value0","nativeSrc":"20116:6:30","nodeType":"YulTypedName","src":"20116:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20127:4:30","nodeType":"YulTypedName","src":"20127:4:30","type":""}],"src":"20006:332:30"},{"body":{"nativeSrc":"20450:132:30","nodeType":"YulBlock","src":"20450:132:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20472:6:30","nodeType":"YulIdentifier","src":"20472:6:30"},{"kind":"number","nativeSrc":"20480:1:30","nodeType":"YulLiteral","src":"20480:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20468:3:30","nodeType":"YulIdentifier","src":"20468:3:30"},"nativeSrc":"20468:14:30","nodeType":"YulFunctionCall","src":"20468:14:30"},{"hexValue":"4172617261436f696e3a204164647265737320616c7265616479206578697374","kind":"string","nativeSrc":"20484:34:30","nodeType":"YulLiteral","src":"20484:34:30","type":"","value":"AraraCoin: Address already exist"}],"functionName":{"name":"mstore","nativeSrc":"20461:6:30","nodeType":"YulIdentifier","src":"20461:6:30"},"nativeSrc":"20461:58:30","nodeType":"YulFunctionCall","src":"20461:58:30"},"nativeSrc":"20461:58:30","nodeType":"YulExpressionStatement","src":"20461:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20540:6:30","nodeType":"YulIdentifier","src":"20540:6:30"},{"kind":"number","nativeSrc":"20548:2:30","nodeType":"YulLiteral","src":"20548:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20536:3:30","nodeType":"YulIdentifier","src":"20536:3:30"},"nativeSrc":"20536:15:30","nodeType":"YulFunctionCall","src":"20536:15:30"},{"hexValue":"7320696e20746865206578656d7074696f6e73","kind":"string","nativeSrc":"20553:21:30","nodeType":"YulLiteral","src":"20553:21:30","type":"","value":"s in the exemptions"}],"functionName":{"name":"mstore","nativeSrc":"20529:6:30","nodeType":"YulIdentifier","src":"20529:6:30"},"nativeSrc":"20529:46:30","nodeType":"YulFunctionCall","src":"20529:46:30"},"nativeSrc":"20529:46:30","nodeType":"YulExpressionStatement","src":"20529:46:30"}]},"name":"store_literal_in_memory_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402","nativeSrc":"20344:238:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20442:6:30","nodeType":"YulTypedName","src":"20442:6:30","type":""}],"src":"20344:238:30"},{"body":{"nativeSrc":"20734:220:30","nodeType":"YulBlock","src":"20734:220:30","statements":[{"nativeSrc":"20744:74:30","nodeType":"YulAssignment","src":"20744:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"20810:3:30","nodeType":"YulIdentifier","src":"20810:3:30"},{"kind":"number","nativeSrc":"20815:2:30","nodeType":"YulLiteral","src":"20815:2:30","type":"","value":"51"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20751:58:30","nodeType":"YulIdentifier","src":"20751:58:30"},"nativeSrc":"20751:67:30","nodeType":"YulFunctionCall","src":"20751:67:30"},"variableNames":[{"name":"pos","nativeSrc":"20744:3:30","nodeType":"YulIdentifier","src":"20744:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20916:3:30","nodeType":"YulIdentifier","src":"20916:3:30"}],"functionName":{"name":"store_literal_in_memory_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402","nativeSrc":"20827:88:30","nodeType":"YulIdentifier","src":"20827:88:30"},"nativeSrc":"20827:93:30","nodeType":"YulFunctionCall","src":"20827:93:30"},"nativeSrc":"20827:93:30","nodeType":"YulExpressionStatement","src":"20827:93:30"},{"nativeSrc":"20929:19:30","nodeType":"YulAssignment","src":"20929:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"20940:3:30","nodeType":"YulIdentifier","src":"20940:3:30"},{"kind":"number","nativeSrc":"20945:2:30","nodeType":"YulLiteral","src":"20945:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20936:3:30","nodeType":"YulIdentifier","src":"20936:3:30"},"nativeSrc":"20936:12:30","nodeType":"YulFunctionCall","src":"20936:12:30"},"variableNames":[{"name":"end","nativeSrc":"20929:3:30","nodeType":"YulIdentifier","src":"20929:3:30"}]}]},"name":"abi_encode_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402_to_t_string_memory_ptr_fromStack","nativeSrc":"20588:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20722:3:30","nodeType":"YulTypedName","src":"20722:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20730:3:30","nodeType":"YulTypedName","src":"20730:3:30","type":""}],"src":"20588:366:30"},{"body":{"nativeSrc":"21131:248:30","nodeType":"YulBlock","src":"21131:248:30","statements":[{"nativeSrc":"21141:26:30","nodeType":"YulAssignment","src":"21141:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"21153:9:30","nodeType":"YulIdentifier","src":"21153:9:30"},{"kind":"number","nativeSrc":"21164:2:30","nodeType":"YulLiteral","src":"21164:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21149:3:30","nodeType":"YulIdentifier","src":"21149:3:30"},"nativeSrc":"21149:18:30","nodeType":"YulFunctionCall","src":"21149:18:30"},"variableNames":[{"name":"tail","nativeSrc":"21141:4:30","nodeType":"YulIdentifier","src":"21141:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21188:9:30","nodeType":"YulIdentifier","src":"21188:9:30"},{"kind":"number","nativeSrc":"21199:1:30","nodeType":"YulLiteral","src":"21199:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21184:3:30","nodeType":"YulIdentifier","src":"21184:3:30"},"nativeSrc":"21184:17:30","nodeType":"YulFunctionCall","src":"21184:17:30"},{"arguments":[{"name":"tail","nativeSrc":"21207:4:30","nodeType":"YulIdentifier","src":"21207:4:30"},{"name":"headStart","nativeSrc":"21213:9:30","nodeType":"YulIdentifier","src":"21213:9:30"}],"functionName":{"name":"sub","nativeSrc":"21203:3:30","nodeType":"YulIdentifier","src":"21203:3:30"},"nativeSrc":"21203:20:30","nodeType":"YulFunctionCall","src":"21203:20:30"}],"functionName":{"name":"mstore","nativeSrc":"21177:6:30","nodeType":"YulIdentifier","src":"21177:6:30"},"nativeSrc":"21177:47:30","nodeType":"YulFunctionCall","src":"21177:47:30"},"nativeSrc":"21177:47:30","nodeType":"YulExpressionStatement","src":"21177:47:30"},{"nativeSrc":"21233:139:30","nodeType":"YulAssignment","src":"21233:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"21367:4:30","nodeType":"YulIdentifier","src":"21367:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402_to_t_string_memory_ptr_fromStack","nativeSrc":"21241:124:30","nodeType":"YulIdentifier","src":"21241:124:30"},"nativeSrc":"21241:131:30","nodeType":"YulFunctionCall","src":"21241:131:30"},"variableNames":[{"name":"tail","nativeSrc":"21233:4:30","nodeType":"YulIdentifier","src":"21233:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20960:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21111:9:30","nodeType":"YulTypedName","src":"21111:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21126:4:30","nodeType":"YulTypedName","src":"21126:4:30","type":""}],"src":"20960:419:30"},{"body":{"nativeSrc":"21491:115:30","nodeType":"YulBlock","src":"21491:115:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21513:6:30","nodeType":"YulIdentifier","src":"21513:6:30"},{"kind":"number","nativeSrc":"21521:1:30","nodeType":"YulLiteral","src":"21521:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21509:3:30","nodeType":"YulIdentifier","src":"21509:3:30"},"nativeSrc":"21509:14:30","nodeType":"YulFunctionCall","src":"21509:14:30"},{"hexValue":"4172617261436f696e3a2054726164696e6720616c726561647920656e61626c","kind":"string","nativeSrc":"21525:34:30","nodeType":"YulLiteral","src":"21525:34:30","type":"","value":"AraraCoin: Trading already enabl"}],"functionName":{"name":"mstore","nativeSrc":"21502:6:30","nodeType":"YulIdentifier","src":"21502:6:30"},"nativeSrc":"21502:58:30","nodeType":"YulFunctionCall","src":"21502:58:30"},"nativeSrc":"21502:58:30","nodeType":"YulExpressionStatement","src":"21502:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21581:6:30","nodeType":"YulIdentifier","src":"21581:6:30"},{"kind":"number","nativeSrc":"21589:2:30","nodeType":"YulLiteral","src":"21589:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21577:3:30","nodeType":"YulIdentifier","src":"21577:3:30"},"nativeSrc":"21577:15:30","nodeType":"YulFunctionCall","src":"21577:15:30"},{"hexValue":"6564","kind":"string","nativeSrc":"21594:4:30","nodeType":"YulLiteral","src":"21594:4:30","type":"","value":"ed"}],"functionName":{"name":"mstore","nativeSrc":"21570:6:30","nodeType":"YulIdentifier","src":"21570:6:30"},"nativeSrc":"21570:29:30","nodeType":"YulFunctionCall","src":"21570:29:30"},"nativeSrc":"21570:29:30","nodeType":"YulExpressionStatement","src":"21570:29:30"}]},"name":"store_literal_in_memory_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","nativeSrc":"21385:221:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21483:6:30","nodeType":"YulTypedName","src":"21483:6:30","type":""}],"src":"21385:221:30"},{"body":{"nativeSrc":"21758:220:30","nodeType":"YulBlock","src":"21758:220:30","statements":[{"nativeSrc":"21768:74:30","nodeType":"YulAssignment","src":"21768:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"21834:3:30","nodeType":"YulIdentifier","src":"21834:3:30"},{"kind":"number","nativeSrc":"21839:2:30","nodeType":"YulLiteral","src":"21839:2:30","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21775:58:30","nodeType":"YulIdentifier","src":"21775:58:30"},"nativeSrc":"21775:67:30","nodeType":"YulFunctionCall","src":"21775:67:30"},"variableNames":[{"name":"pos","nativeSrc":"21768:3:30","nodeType":"YulIdentifier","src":"21768:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21940:3:30","nodeType":"YulIdentifier","src":"21940:3:30"}],"functionName":{"name":"store_literal_in_memory_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5","nativeSrc":"21851:88:30","nodeType":"YulIdentifier","src":"21851:88:30"},"nativeSrc":"21851:93:30","nodeType":"YulFunctionCall","src":"21851:93:30"},"nativeSrc":"21851:93:30","nodeType":"YulExpressionStatement","src":"21851:93:30"},{"nativeSrc":"21953:19:30","nodeType":"YulAssignment","src":"21953:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"21964:3:30","nodeType":"YulIdentifier","src":"21964:3:30"},{"kind":"number","nativeSrc":"21969:2:30","nodeType":"YulLiteral","src":"21969:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21960:3:30","nodeType":"YulIdentifier","src":"21960:3:30"},"nativeSrc":"21960:12:30","nodeType":"YulFunctionCall","src":"21960:12:30"},"variableNames":[{"name":"end","nativeSrc":"21953:3:30","nodeType":"YulIdentifier","src":"21953:3:30"}]}]},"name":"abi_encode_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5_to_t_string_memory_ptr_fromStack","nativeSrc":"21612:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21746:3:30","nodeType":"YulTypedName","src":"21746:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21754:3:30","nodeType":"YulTypedName","src":"21754:3:30","type":""}],"src":"21612:366:30"},{"body":{"nativeSrc":"22155:248:30","nodeType":"YulBlock","src":"22155:248:30","statements":[{"nativeSrc":"22165:26:30","nodeType":"YulAssignment","src":"22165:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"22177:9:30","nodeType":"YulIdentifier","src":"22177:9:30"},{"kind":"number","nativeSrc":"22188:2:30","nodeType":"YulLiteral","src":"22188:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22173:3:30","nodeType":"YulIdentifier","src":"22173:3:30"},"nativeSrc":"22173:18:30","nodeType":"YulFunctionCall","src":"22173:18:30"},"variableNames":[{"name":"tail","nativeSrc":"22165:4:30","nodeType":"YulIdentifier","src":"22165:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22212:9:30","nodeType":"YulIdentifier","src":"22212:9:30"},{"kind":"number","nativeSrc":"22223:1:30","nodeType":"YulLiteral","src":"22223:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22208:3:30","nodeType":"YulIdentifier","src":"22208:3:30"},"nativeSrc":"22208:17:30","nodeType":"YulFunctionCall","src":"22208:17:30"},{"arguments":[{"name":"tail","nativeSrc":"22231:4:30","nodeType":"YulIdentifier","src":"22231:4:30"},{"name":"headStart","nativeSrc":"22237:9:30","nodeType":"YulIdentifier","src":"22237:9:30"}],"functionName":{"name":"sub","nativeSrc":"22227:3:30","nodeType":"YulIdentifier","src":"22227:3:30"},"nativeSrc":"22227:20:30","nodeType":"YulFunctionCall","src":"22227:20:30"}],"functionName":{"name":"mstore","nativeSrc":"22201:6:30","nodeType":"YulIdentifier","src":"22201:6:30"},"nativeSrc":"22201:47:30","nodeType":"YulFunctionCall","src":"22201:47:30"},"nativeSrc":"22201:47:30","nodeType":"YulExpressionStatement","src":"22201:47:30"},{"nativeSrc":"22257:139:30","nodeType":"YulAssignment","src":"22257:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"22391:4:30","nodeType":"YulIdentifier","src":"22391:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5_to_t_string_memory_ptr_fromStack","nativeSrc":"22265:124:30","nodeType":"YulIdentifier","src":"22265:124:30"},"nativeSrc":"22265:131:30","nodeType":"YulFunctionCall","src":"22265:131:30"},"variableNames":[{"name":"tail","nativeSrc":"22257:4:30","nodeType":"YulIdentifier","src":"22257:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21984:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22135:9:30","nodeType":"YulTypedName","src":"22135:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22150:4:30","nodeType":"YulTypedName","src":"22150:4:30","type":""}],"src":"21984:419:30"},{"body":{"nativeSrc":"22515:134:30","nodeType":"YulBlock","src":"22515:134:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22537:6:30","nodeType":"YulIdentifier","src":"22537:6:30"},{"kind":"number","nativeSrc":"22545:1:30","nodeType":"YulLiteral","src":"22545:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22533:3:30","nodeType":"YulIdentifier","src":"22533:3:30"},"nativeSrc":"22533:14:30","nodeType":"YulFunctionCall","src":"22533:14:30"},{"hexValue":"4172617261436f696e3a204c697374206f6620616c6c6f776564206164647265","kind":"string","nativeSrc":"22549:34:30","nodeType":"YulLiteral","src":"22549:34:30","type":"","value":"AraraCoin: List of allowed addre"}],"functionName":{"name":"mstore","nativeSrc":"22526:6:30","nodeType":"YulIdentifier","src":"22526:6:30"},"nativeSrc":"22526:58:30","nodeType":"YulFunctionCall","src":"22526:58:30"},"nativeSrc":"22526:58:30","nodeType":"YulExpressionStatement","src":"22526:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22605:6:30","nodeType":"YulIdentifier","src":"22605:6:30"},{"kind":"number","nativeSrc":"22613:2:30","nodeType":"YulLiteral","src":"22613:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22601:3:30","nodeType":"YulIdentifier","src":"22601:3:30"},"nativeSrc":"22601:15:30","nodeType":"YulFunctionCall","src":"22601:15:30"},{"hexValue":"737365732063616e6e6f7420626520656d7074792e","kind":"string","nativeSrc":"22618:23:30","nodeType":"YulLiteral","src":"22618:23:30","type":"","value":"sses cannot be empty."}],"functionName":{"name":"mstore","nativeSrc":"22594:6:30","nodeType":"YulIdentifier","src":"22594:6:30"},"nativeSrc":"22594:48:30","nodeType":"YulFunctionCall","src":"22594:48:30"},"nativeSrc":"22594:48:30","nodeType":"YulExpressionStatement","src":"22594:48:30"}]},"name":"store_literal_in_memory_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","nativeSrc":"22409:240:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22507:6:30","nodeType":"YulTypedName","src":"22507:6:30","type":""}],"src":"22409:240:30"},{"body":{"nativeSrc":"22801:220:30","nodeType":"YulBlock","src":"22801:220:30","statements":[{"nativeSrc":"22811:74:30","nodeType":"YulAssignment","src":"22811:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"22877:3:30","nodeType":"YulIdentifier","src":"22877:3:30"},{"kind":"number","nativeSrc":"22882:2:30","nodeType":"YulLiteral","src":"22882:2:30","type":"","value":"53"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22818:58:30","nodeType":"YulIdentifier","src":"22818:58:30"},"nativeSrc":"22818:67:30","nodeType":"YulFunctionCall","src":"22818:67:30"},"variableNames":[{"name":"pos","nativeSrc":"22811:3:30","nodeType":"YulIdentifier","src":"22811:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22983:3:30","nodeType":"YulIdentifier","src":"22983:3:30"}],"functionName":{"name":"store_literal_in_memory_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f","nativeSrc":"22894:88:30","nodeType":"YulIdentifier","src":"22894:88:30"},"nativeSrc":"22894:93:30","nodeType":"YulFunctionCall","src":"22894:93:30"},"nativeSrc":"22894:93:30","nodeType":"YulExpressionStatement","src":"22894:93:30"},{"nativeSrc":"22996:19:30","nodeType":"YulAssignment","src":"22996:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"23007:3:30","nodeType":"YulIdentifier","src":"23007:3:30"},{"kind":"number","nativeSrc":"23012:2:30","nodeType":"YulLiteral","src":"23012:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23003:3:30","nodeType":"YulIdentifier","src":"23003:3:30"},"nativeSrc":"23003:12:30","nodeType":"YulFunctionCall","src":"23003:12:30"},"variableNames":[{"name":"end","nativeSrc":"22996:3:30","nodeType":"YulIdentifier","src":"22996:3:30"}]}]},"name":"abi_encode_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f_to_t_string_memory_ptr_fromStack","nativeSrc":"22655:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22789:3:30","nodeType":"YulTypedName","src":"22789:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22797:3:30","nodeType":"YulTypedName","src":"22797:3:30","type":""}],"src":"22655:366:30"},{"body":{"nativeSrc":"23198:248:30","nodeType":"YulBlock","src":"23198:248:30","statements":[{"nativeSrc":"23208:26:30","nodeType":"YulAssignment","src":"23208:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"23220:9:30","nodeType":"YulIdentifier","src":"23220:9:30"},{"kind":"number","nativeSrc":"23231:2:30","nodeType":"YulLiteral","src":"23231:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23216:3:30","nodeType":"YulIdentifier","src":"23216:3:30"},"nativeSrc":"23216:18:30","nodeType":"YulFunctionCall","src":"23216:18:30"},"variableNames":[{"name":"tail","nativeSrc":"23208:4:30","nodeType":"YulIdentifier","src":"23208:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23255:9:30","nodeType":"YulIdentifier","src":"23255:9:30"},{"kind":"number","nativeSrc":"23266:1:30","nodeType":"YulLiteral","src":"23266:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23251:3:30","nodeType":"YulIdentifier","src":"23251:3:30"},"nativeSrc":"23251:17:30","nodeType":"YulFunctionCall","src":"23251:17:30"},{"arguments":[{"name":"tail","nativeSrc":"23274:4:30","nodeType":"YulIdentifier","src":"23274:4:30"},{"name":"headStart","nativeSrc":"23280:9:30","nodeType":"YulIdentifier","src":"23280:9:30"}],"functionName":{"name":"sub","nativeSrc":"23270:3:30","nodeType":"YulIdentifier","src":"23270:3:30"},"nativeSrc":"23270:20:30","nodeType":"YulFunctionCall","src":"23270:20:30"}],"functionName":{"name":"mstore","nativeSrc":"23244:6:30","nodeType":"YulIdentifier","src":"23244:6:30"},"nativeSrc":"23244:47:30","nodeType":"YulFunctionCall","src":"23244:47:30"},"nativeSrc":"23244:47:30","nodeType":"YulExpressionStatement","src":"23244:47:30"},{"nativeSrc":"23300:139:30","nodeType":"YulAssignment","src":"23300:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"23434:4:30","nodeType":"YulIdentifier","src":"23434:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f_to_t_string_memory_ptr_fromStack","nativeSrc":"23308:124:30","nodeType":"YulIdentifier","src":"23308:124:30"},"nativeSrc":"23308:131:30","nodeType":"YulFunctionCall","src":"23308:131:30"},"variableNames":[{"name":"tail","nativeSrc":"23300:4:30","nodeType":"YulIdentifier","src":"23300:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23027:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23178:9:30","nodeType":"YulTypedName","src":"23178:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23193:4:30","nodeType":"YulTypedName","src":"23193:4:30","type":""}],"src":"23027:419:30"},{"body":{"nativeSrc":"23480:152:30","nodeType":"YulBlock","src":"23480:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23497:1:30","nodeType":"YulLiteral","src":"23497:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"23500:77:30","nodeType":"YulLiteral","src":"23500:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23490:6:30","nodeType":"YulIdentifier","src":"23490:6:30"},"nativeSrc":"23490:88:30","nodeType":"YulFunctionCall","src":"23490:88:30"},"nativeSrc":"23490:88:30","nodeType":"YulExpressionStatement","src":"23490:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23594:1:30","nodeType":"YulLiteral","src":"23594:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"23597:4:30","nodeType":"YulLiteral","src":"23597:4:30","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"23587:6:30","nodeType":"YulIdentifier","src":"23587:6:30"},"nativeSrc":"23587:15:30","nodeType":"YulFunctionCall","src":"23587:15:30"},"nativeSrc":"23587:15:30","nodeType":"YulExpressionStatement","src":"23587:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23618:1:30","nodeType":"YulLiteral","src":"23618:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"23621:4:30","nodeType":"YulLiteral","src":"23621:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23611:6:30","nodeType":"YulIdentifier","src":"23611:6:30"},"nativeSrc":"23611:15:30","nodeType":"YulFunctionCall","src":"23611:15:30"},"nativeSrc":"23611:15:30","nodeType":"YulExpressionStatement","src":"23611:15:30"}]},"name":"panic_error_0x32","nativeSrc":"23452:180:30","nodeType":"YulFunctionDefinition","src":"23452:180:30"},{"body":{"nativeSrc":"23666:152:30","nodeType":"YulBlock","src":"23666:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23683:1:30","nodeType":"YulLiteral","src":"23683:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"23686:77:30","nodeType":"YulLiteral","src":"23686:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23676:6:30","nodeType":"YulIdentifier","src":"23676:6:30"},"nativeSrc":"23676:88:30","nodeType":"YulFunctionCall","src":"23676:88:30"},"nativeSrc":"23676:88:30","nodeType":"YulExpressionStatement","src":"23676:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23780:1:30","nodeType":"YulLiteral","src":"23780:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"23783:4:30","nodeType":"YulLiteral","src":"23783:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"23773:6:30","nodeType":"YulIdentifier","src":"23773:6:30"},"nativeSrc":"23773:15:30","nodeType":"YulFunctionCall","src":"23773:15:30"},"nativeSrc":"23773:15:30","nodeType":"YulExpressionStatement","src":"23773:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23804:1:30","nodeType":"YulLiteral","src":"23804:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"23807:4:30","nodeType":"YulLiteral","src":"23807:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23797:6:30","nodeType":"YulIdentifier","src":"23797:6:30"},"nativeSrc":"23797:15:30","nodeType":"YulFunctionCall","src":"23797:15:30"},"nativeSrc":"23797:15:30","nodeType":"YulExpressionStatement","src":"23797:15:30"}]},"name":"panic_error_0x41","nativeSrc":"23638:180:30","nodeType":"YulFunctionDefinition","src":"23638:180:30"},{"body":{"nativeSrc":"23930:115:30","nodeType":"YulBlock","src":"23930:115:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23952:6:30","nodeType":"YulIdentifier","src":"23952:6:30"},{"kind":"number","nativeSrc":"23960:1:30","nodeType":"YulLiteral","src":"23960:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23948:3:30","nodeType":"YulIdentifier","src":"23948:3:30"},"nativeSrc":"23948:14:30","nodeType":"YulFunctionCall","src":"23948:14:30"},{"hexValue":"4172617261436f696e3a2074726164696e6720616c726561647920656e61626c","kind":"string","nativeSrc":"23964:34:30","nodeType":"YulLiteral","src":"23964:34:30","type":"","value":"AraraCoin: trading already enabl"}],"functionName":{"name":"mstore","nativeSrc":"23941:6:30","nodeType":"YulIdentifier","src":"23941:6:30"},"nativeSrc":"23941:58:30","nodeType":"YulFunctionCall","src":"23941:58:30"},"nativeSrc":"23941:58:30","nodeType":"YulExpressionStatement","src":"23941:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24020:6:30","nodeType":"YulIdentifier","src":"24020:6:30"},{"kind":"number","nativeSrc":"24028:2:30","nodeType":"YulLiteral","src":"24028:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24016:3:30","nodeType":"YulIdentifier","src":"24016:3:30"},"nativeSrc":"24016:15:30","nodeType":"YulFunctionCall","src":"24016:15:30"},{"hexValue":"6564","kind":"string","nativeSrc":"24033:4:30","nodeType":"YulLiteral","src":"24033:4:30","type":"","value":"ed"}],"functionName":{"name":"mstore","nativeSrc":"24009:6:30","nodeType":"YulIdentifier","src":"24009:6:30"},"nativeSrc":"24009:29:30","nodeType":"YulFunctionCall","src":"24009:29:30"},"nativeSrc":"24009:29:30","nodeType":"YulExpressionStatement","src":"24009:29:30"}]},"name":"store_literal_in_memory_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816","nativeSrc":"23824:221:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23922:6:30","nodeType":"YulTypedName","src":"23922:6:30","type":""}],"src":"23824:221:30"},{"body":{"nativeSrc":"24197:220:30","nodeType":"YulBlock","src":"24197:220:30","statements":[{"nativeSrc":"24207:74:30","nodeType":"YulAssignment","src":"24207:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"24273:3:30","nodeType":"YulIdentifier","src":"24273:3:30"},{"kind":"number","nativeSrc":"24278:2:30","nodeType":"YulLiteral","src":"24278:2:30","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24214:58:30","nodeType":"YulIdentifier","src":"24214:58:30"},"nativeSrc":"24214:67:30","nodeType":"YulFunctionCall","src":"24214:67:30"},"variableNames":[{"name":"pos","nativeSrc":"24207:3:30","nodeType":"YulIdentifier","src":"24207:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24379:3:30","nodeType":"YulIdentifier","src":"24379:3:30"}],"functionName":{"name":"store_literal_in_memory_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816","nativeSrc":"24290:88:30","nodeType":"YulIdentifier","src":"24290:88:30"},"nativeSrc":"24290:93:30","nodeType":"YulFunctionCall","src":"24290:93:30"},"nativeSrc":"24290:93:30","nodeType":"YulExpressionStatement","src":"24290:93:30"},{"nativeSrc":"24392:19:30","nodeType":"YulAssignment","src":"24392:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"24403:3:30","nodeType":"YulIdentifier","src":"24403:3:30"},{"kind":"number","nativeSrc":"24408:2:30","nodeType":"YulLiteral","src":"24408:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24399:3:30","nodeType":"YulIdentifier","src":"24399:3:30"},"nativeSrc":"24399:12:30","nodeType":"YulFunctionCall","src":"24399:12:30"},"variableNames":[{"name":"end","nativeSrc":"24392:3:30","nodeType":"YulIdentifier","src":"24392:3:30"}]}]},"name":"abi_encode_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816_to_t_string_memory_ptr_fromStack","nativeSrc":"24051:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24185:3:30","nodeType":"YulTypedName","src":"24185:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24193:3:30","nodeType":"YulTypedName","src":"24193:3:30","type":""}],"src":"24051:366:30"},{"body":{"nativeSrc":"24594:248:30","nodeType":"YulBlock","src":"24594:248:30","statements":[{"nativeSrc":"24604:26:30","nodeType":"YulAssignment","src":"24604:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"24616:9:30","nodeType":"YulIdentifier","src":"24616:9:30"},{"kind":"number","nativeSrc":"24627:2:30","nodeType":"YulLiteral","src":"24627:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24612:3:30","nodeType":"YulIdentifier","src":"24612:3:30"},"nativeSrc":"24612:18:30","nodeType":"YulFunctionCall","src":"24612:18:30"},"variableNames":[{"name":"tail","nativeSrc":"24604:4:30","nodeType":"YulIdentifier","src":"24604:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24651:9:30","nodeType":"YulIdentifier","src":"24651:9:30"},{"kind":"number","nativeSrc":"24662:1:30","nodeType":"YulLiteral","src":"24662:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24647:3:30","nodeType":"YulIdentifier","src":"24647:3:30"},"nativeSrc":"24647:17:30","nodeType":"YulFunctionCall","src":"24647:17:30"},{"arguments":[{"name":"tail","nativeSrc":"24670:4:30","nodeType":"YulIdentifier","src":"24670:4:30"},{"name":"headStart","nativeSrc":"24676:9:30","nodeType":"YulIdentifier","src":"24676:9:30"}],"functionName":{"name":"sub","nativeSrc":"24666:3:30","nodeType":"YulIdentifier","src":"24666:3:30"},"nativeSrc":"24666:20:30","nodeType":"YulFunctionCall","src":"24666:20:30"}],"functionName":{"name":"mstore","nativeSrc":"24640:6:30","nodeType":"YulIdentifier","src":"24640:6:30"},"nativeSrc":"24640:47:30","nodeType":"YulFunctionCall","src":"24640:47:30"},"nativeSrc":"24640:47:30","nodeType":"YulExpressionStatement","src":"24640:47:30"},{"nativeSrc":"24696:139:30","nodeType":"YulAssignment","src":"24696:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"24830:4:30","nodeType":"YulIdentifier","src":"24830:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816_to_t_string_memory_ptr_fromStack","nativeSrc":"24704:124:30","nodeType":"YulIdentifier","src":"24704:124:30"},"nativeSrc":"24704:131:30","nodeType":"YulFunctionCall","src":"24704:131:30"},"variableNames":[{"name":"tail","nativeSrc":"24696:4:30","nodeType":"YulIdentifier","src":"24696:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24423:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24574:9:30","nodeType":"YulTypedName","src":"24574:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24589:4:30","nodeType":"YulTypedName","src":"24589:4:30","type":""}],"src":"24423:419:30"},{"body":{"nativeSrc":"24954:57:30","nodeType":"YulBlock","src":"24954:57:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24976:6:30","nodeType":"YulIdentifier","src":"24976:6:30"},{"kind":"number","nativeSrc":"24984:1:30","nodeType":"YulLiteral","src":"24984:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24972:3:30","nodeType":"YulIdentifier","src":"24972:3:30"},"nativeSrc":"24972:14:30","nodeType":"YulFunctionCall","src":"24972:14:30"},{"hexValue":"456e61626c6554726164696e67","kind":"string","nativeSrc":"24988:15:30","nodeType":"YulLiteral","src":"24988:15:30","type":"","value":"EnableTrading"}],"functionName":{"name":"mstore","nativeSrc":"24965:6:30","nodeType":"YulIdentifier","src":"24965:6:30"},"nativeSrc":"24965:39:30","nodeType":"YulFunctionCall","src":"24965:39:30"},"nativeSrc":"24965:39:30","nodeType":"YulExpressionStatement","src":"24965:39:30"}]},"name":"store_literal_in_memory_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61","nativeSrc":"24848:163:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24946:6:30","nodeType":"YulTypedName","src":"24946:6:30","type":""}],"src":"24848:163:30"},{"body":{"nativeSrc":"25181:238:30","nodeType":"YulBlock","src":"25181:238:30","statements":[{"nativeSrc":"25191:92:30","nodeType":"YulAssignment","src":"25191:92:30","value":{"arguments":[{"name":"pos","nativeSrc":"25275:3:30","nodeType":"YulIdentifier","src":"25275:3:30"},{"kind":"number","nativeSrc":"25280:2:30","nodeType":"YulLiteral","src":"25280:2:30","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25198:76:30","nodeType":"YulIdentifier","src":"25198:76:30"},"nativeSrc":"25198:85:30","nodeType":"YulFunctionCall","src":"25198:85:30"},"variableNames":[{"name":"pos","nativeSrc":"25191:3:30","nodeType":"YulIdentifier","src":"25191:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25381:3:30","nodeType":"YulIdentifier","src":"25381:3:30"}],"functionName":{"name":"store_literal_in_memory_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61","nativeSrc":"25292:88:30","nodeType":"YulIdentifier","src":"25292:88:30"},"nativeSrc":"25292:93:30","nodeType":"YulFunctionCall","src":"25292:93:30"},"nativeSrc":"25292:93:30","nodeType":"YulExpressionStatement","src":"25292:93:30"},{"nativeSrc":"25394:19:30","nodeType":"YulAssignment","src":"25394:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"25405:3:30","nodeType":"YulIdentifier","src":"25405:3:30"},{"kind":"number","nativeSrc":"25410:2:30","nodeType":"YulLiteral","src":"25410:2:30","type":"","value":"13"}],"functionName":{"name":"add","nativeSrc":"25401:3:30","nodeType":"YulIdentifier","src":"25401:3:30"},"nativeSrc":"25401:12:30","nodeType":"YulFunctionCall","src":"25401:12:30"},"variableNames":[{"name":"end","nativeSrc":"25394:3:30","nodeType":"YulIdentifier","src":"25394:3:30"}]}]},"name":"abi_encode_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25017:402:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25169:3:30","nodeType":"YulTypedName","src":"25169:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25177:3:30","nodeType":"YulTypedName","src":"25177:3:30","type":""}],"src":"25017:402:30"},{"body":{"nativeSrc":"25614:192:30","nodeType":"YulBlock","src":"25614:192:30","statements":[{"nativeSrc":"25625:155:30","nodeType":"YulAssignment","src":"25625:155:30","value":{"arguments":[{"name":"pos","nativeSrc":"25776:3:30","nodeType":"YulIdentifier","src":"25776:3:30"}],"functionName":{"name":"abi_encode_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25632:142:30","nodeType":"YulIdentifier","src":"25632:142:30"},"nativeSrc":"25632:148:30","nodeType":"YulFunctionCall","src":"25632:148:30"},"variableNames":[{"name":"pos","nativeSrc":"25625:3:30","nodeType":"YulIdentifier","src":"25625:3:30"}]},{"nativeSrc":"25790:10:30","nodeType":"YulAssignment","src":"25790:10:30","value":{"name":"pos","nativeSrc":"25797:3:30","nodeType":"YulIdentifier","src":"25797:3:30"},"variableNames":[{"name":"end","nativeSrc":"25790:3:30","nodeType":"YulIdentifier","src":"25790:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"25425:381:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25601:3:30","nodeType":"YulTypedName","src":"25601:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25610:3:30","nodeType":"YulTypedName","src":"25610:3:30","type":""}],"src":"25425:381:30"},{"body":{"nativeSrc":"26050:537:30","nodeType":"YulBlock","src":"26050:537:30","statements":[{"nativeSrc":"26060:27:30","nodeType":"YulAssignment","src":"26060:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"26072:9:30","nodeType":"YulIdentifier","src":"26072:9:30"},{"kind":"number","nativeSrc":"26083:3:30","nodeType":"YulLiteral","src":"26083:3:30","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"26068:3:30","nodeType":"YulIdentifier","src":"26068:3:30"},"nativeSrc":"26068:19:30","nodeType":"YulFunctionCall","src":"26068:19:30"},"variableNames":[{"name":"tail","nativeSrc":"26060:4:30","nodeType":"YulIdentifier","src":"26060:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26141:6:30","nodeType":"YulIdentifier","src":"26141:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26154:9:30","nodeType":"YulIdentifier","src":"26154:9:30"},{"kind":"number","nativeSrc":"26165:1:30","nodeType":"YulLiteral","src":"26165:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26150:3:30","nodeType":"YulIdentifier","src":"26150:3:30"},"nativeSrc":"26150:17:30","nodeType":"YulFunctionCall","src":"26150:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26097:43:30","nodeType":"YulIdentifier","src":"26097:43:30"},"nativeSrc":"26097:71:30","nodeType":"YulFunctionCall","src":"26097:71:30"},"nativeSrc":"26097:71:30","nodeType":"YulExpressionStatement","src":"26097:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26222:6:30","nodeType":"YulIdentifier","src":"26222:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26235:9:30","nodeType":"YulIdentifier","src":"26235:9:30"},{"kind":"number","nativeSrc":"26246:2:30","nodeType":"YulLiteral","src":"26246:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26231:3:30","nodeType":"YulIdentifier","src":"26231:3:30"},"nativeSrc":"26231:18:30","nodeType":"YulFunctionCall","src":"26231:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26178:43:30","nodeType":"YulIdentifier","src":"26178:43:30"},"nativeSrc":"26178:72:30","nodeType":"YulFunctionCall","src":"26178:72:30"},"nativeSrc":"26178:72:30","nodeType":"YulExpressionStatement","src":"26178:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26304:6:30","nodeType":"YulIdentifier","src":"26304:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26317:9:30","nodeType":"YulIdentifier","src":"26317:9:30"},{"kind":"number","nativeSrc":"26328:2:30","nodeType":"YulLiteral","src":"26328:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26313:3:30","nodeType":"YulIdentifier","src":"26313:3:30"},"nativeSrc":"26313:18:30","nodeType":"YulFunctionCall","src":"26313:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26260:43:30","nodeType":"YulIdentifier","src":"26260:43:30"},"nativeSrc":"26260:72:30","nodeType":"YulFunctionCall","src":"26260:72:30"},"nativeSrc":"26260:72:30","nodeType":"YulExpressionStatement","src":"26260:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26386:6:30","nodeType":"YulIdentifier","src":"26386:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26399:9:30","nodeType":"YulIdentifier","src":"26399:9:30"},{"kind":"number","nativeSrc":"26410:2:30","nodeType":"YulLiteral","src":"26410:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26395:3:30","nodeType":"YulIdentifier","src":"26395:3:30"},"nativeSrc":"26395:18:30","nodeType":"YulFunctionCall","src":"26395:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26342:43:30","nodeType":"YulIdentifier","src":"26342:43:30"},"nativeSrc":"26342:72:30","nodeType":"YulFunctionCall","src":"26342:72:30"},"nativeSrc":"26342:72:30","nodeType":"YulExpressionStatement","src":"26342:72:30"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"26468:6:30","nodeType":"YulIdentifier","src":"26468:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26481:9:30","nodeType":"YulIdentifier","src":"26481:9:30"},{"kind":"number","nativeSrc":"26492:3:30","nodeType":"YulLiteral","src":"26492:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26477:3:30","nodeType":"YulIdentifier","src":"26477:3:30"},"nativeSrc":"26477:19:30","nodeType":"YulFunctionCall","src":"26477:19:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26424:43:30","nodeType":"YulIdentifier","src":"26424:43:30"},"nativeSrc":"26424:73:30","nodeType":"YulFunctionCall","src":"26424:73:30"},"nativeSrc":"26424:73:30","nodeType":"YulExpressionStatement","src":"26424:73:30"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"26551:6:30","nodeType":"YulIdentifier","src":"26551:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26564:9:30","nodeType":"YulIdentifier","src":"26564:9:30"},{"kind":"number","nativeSrc":"26575:3:30","nodeType":"YulLiteral","src":"26575:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"26560:3:30","nodeType":"YulIdentifier","src":"26560:3:30"},"nativeSrc":"26560:19:30","nodeType":"YulFunctionCall","src":"26560:19:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26507:43:30","nodeType":"YulIdentifier","src":"26507:43:30"},"nativeSrc":"26507:73:30","nodeType":"YulFunctionCall","src":"26507:73:30"},"nativeSrc":"26507:73:30","nodeType":"YulExpressionStatement","src":"26507:73:30"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"25812:775:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25982:9:30","nodeType":"YulTypedName","src":"25982:9:30","type":""},{"name":"value5","nativeSrc":"25994:6:30","nodeType":"YulTypedName","src":"25994:6:30","type":""},{"name":"value4","nativeSrc":"26002:6:30","nodeType":"YulTypedName","src":"26002:6:30","type":""},{"name":"value3","nativeSrc":"26010:6:30","nodeType":"YulTypedName","src":"26010:6:30","type":""},{"name":"value2","nativeSrc":"26018:6:30","nodeType":"YulTypedName","src":"26018:6:30","type":""},{"name":"value1","nativeSrc":"26026:6:30","nodeType":"YulTypedName","src":"26026:6:30","type":""},{"name":"value0","nativeSrc":"26034:6:30","nodeType":"YulTypedName","src":"26034:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26045:4:30","nodeType":"YulTypedName","src":"26045:4:30","type":""}],"src":"25812:775:30"},{"body":{"nativeSrc":"26719:206:30","nodeType":"YulBlock","src":"26719:206:30","statements":[{"nativeSrc":"26729:26:30","nodeType":"YulAssignment","src":"26729:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"26741:9:30","nodeType":"YulIdentifier","src":"26741:9:30"},{"kind":"number","nativeSrc":"26752:2:30","nodeType":"YulLiteral","src":"26752:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26737:3:30","nodeType":"YulIdentifier","src":"26737:3:30"},"nativeSrc":"26737:18:30","nodeType":"YulFunctionCall","src":"26737:18:30"},"variableNames":[{"name":"tail","nativeSrc":"26729:4:30","nodeType":"YulIdentifier","src":"26729:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26809:6:30","nodeType":"YulIdentifier","src":"26809:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26822:9:30","nodeType":"YulIdentifier","src":"26822:9:30"},{"kind":"number","nativeSrc":"26833:1:30","nodeType":"YulLiteral","src":"26833:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26818:3:30","nodeType":"YulIdentifier","src":"26818:3:30"},"nativeSrc":"26818:17:30","nodeType":"YulFunctionCall","src":"26818:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26765:43:30","nodeType":"YulIdentifier","src":"26765:43:30"},"nativeSrc":"26765:71:30","nodeType":"YulFunctionCall","src":"26765:71:30"},"nativeSrc":"26765:71:30","nodeType":"YulExpressionStatement","src":"26765:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26890:6:30","nodeType":"YulIdentifier","src":"26890:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"26903:9:30","nodeType":"YulIdentifier","src":"26903:9:30"},{"kind":"number","nativeSrc":"26914:2:30","nodeType":"YulLiteral","src":"26914:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26899:3:30","nodeType":"YulIdentifier","src":"26899:3:30"},"nativeSrc":"26899:18:30","nodeType":"YulFunctionCall","src":"26899:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26846:43:30","nodeType":"YulIdentifier","src":"26846:43:30"},"nativeSrc":"26846:72:30","nodeType":"YulFunctionCall","src":"26846:72:30"},"nativeSrc":"26846:72:30","nodeType":"YulExpressionStatement","src":"26846:72:30"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"26593:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26683:9:30","nodeType":"YulTypedName","src":"26683:9:30","type":""},{"name":"value1","nativeSrc":"26695:6:30","nodeType":"YulTypedName","src":"26695:6:30","type":""},{"name":"value0","nativeSrc":"26703:6:30","nodeType":"YulTypedName","src":"26703:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26714:4:30","nodeType":"YulTypedName","src":"26714:4:30","type":""}],"src":"26593:332:30"},{"body":{"nativeSrc":"27037:53:30","nodeType":"YulBlock","src":"27037:53:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27059:6:30","nodeType":"YulIdentifier","src":"27059:6:30"},{"kind":"number","nativeSrc":"27067:1:30","nodeType":"YulLiteral","src":"27067:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27055:3:30","nodeType":"YulIdentifier","src":"27055:3:30"},"nativeSrc":"27055:14:30","nodeType":"YulFunctionCall","src":"27055:14:30"},{"hexValue":"54617857616c6c6574","kind":"string","nativeSrc":"27071:11:30","nodeType":"YulLiteral","src":"27071:11:30","type":"","value":"TaxWallet"}],"functionName":{"name":"mstore","nativeSrc":"27048:6:30","nodeType":"YulIdentifier","src":"27048:6:30"},"nativeSrc":"27048:35:30","nodeType":"YulFunctionCall","src":"27048:35:30"},"nativeSrc":"27048:35:30","nodeType":"YulExpressionStatement","src":"27048:35:30"}]},"name":"store_literal_in_memory_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7","nativeSrc":"26931:159:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27029:6:30","nodeType":"YulTypedName","src":"27029:6:30","type":""}],"src":"26931:159:30"},{"body":{"nativeSrc":"27260:236:30","nodeType":"YulBlock","src":"27260:236:30","statements":[{"nativeSrc":"27270:91:30","nodeType":"YulAssignment","src":"27270:91:30","value":{"arguments":[{"name":"pos","nativeSrc":"27354:3:30","nodeType":"YulIdentifier","src":"27354:3:30"},{"kind":"number","nativeSrc":"27359:1:30","nodeType":"YulLiteral","src":"27359:1:30","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27277:76:30","nodeType":"YulIdentifier","src":"27277:76:30"},"nativeSrc":"27277:84:30","nodeType":"YulFunctionCall","src":"27277:84:30"},"variableNames":[{"name":"pos","nativeSrc":"27270:3:30","nodeType":"YulIdentifier","src":"27270:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27459:3:30","nodeType":"YulIdentifier","src":"27459:3:30"}],"functionName":{"name":"store_literal_in_memory_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7","nativeSrc":"27370:88:30","nodeType":"YulIdentifier","src":"27370:88:30"},"nativeSrc":"27370:93:30","nodeType":"YulFunctionCall","src":"27370:93:30"},"nativeSrc":"27370:93:30","nodeType":"YulExpressionStatement","src":"27370:93:30"},{"nativeSrc":"27472:18:30","nodeType":"YulAssignment","src":"27472:18:30","value":{"arguments":[{"name":"pos","nativeSrc":"27483:3:30","nodeType":"YulIdentifier","src":"27483:3:30"},{"kind":"number","nativeSrc":"27488:1:30","nodeType":"YulLiteral","src":"27488:1:30","type":"","value":"9"}],"functionName":{"name":"add","nativeSrc":"27479:3:30","nodeType":"YulIdentifier","src":"27479:3:30"},"nativeSrc":"27479:11:30","nodeType":"YulFunctionCall","src":"27479:11:30"},"variableNames":[{"name":"end","nativeSrc":"27472:3:30","nodeType":"YulIdentifier","src":"27472:3:30"}]}]},"name":"abi_encode_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"27096:400:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27248:3:30","nodeType":"YulTypedName","src":"27248:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27256:3:30","nodeType":"YulTypedName","src":"27256:3:30","type":""}],"src":"27096:400:30"},{"body":{"nativeSrc":"27544:52:30","nodeType":"YulBlock","src":"27544:52:30","statements":[{"nativeSrc":"27554:35:30","nodeType":"YulAssignment","src":"27554:35:30","value":{"arguments":[{"kind":"number","nativeSrc":"27579:2:30","nodeType":"YulLiteral","src":"27579:2:30","type":"","value":"96"},{"name":"value","nativeSrc":"27583:5:30","nodeType":"YulIdentifier","src":"27583:5:30"}],"functionName":{"name":"shl","nativeSrc":"27575:3:30","nodeType":"YulIdentifier","src":"27575:3:30"},"nativeSrc":"27575:14:30","nodeType":"YulFunctionCall","src":"27575:14:30"},"variableNames":[{"name":"newValue","nativeSrc":"27554:8:30","nodeType":"YulIdentifier","src":"27554:8:30"}]}]},"name":"shift_left_96","nativeSrc":"27502:94:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27525:5:30","nodeType":"YulTypedName","src":"27525:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"27535:8:30","nodeType":"YulTypedName","src":"27535:8:30","type":""}],"src":"27502:94:30"},{"body":{"nativeSrc":"27649:47:30","nodeType":"YulBlock","src":"27649:47:30","statements":[{"nativeSrc":"27659:31:30","nodeType":"YulAssignment","src":"27659:31:30","value":{"arguments":[{"name":"value","nativeSrc":"27684:5:30","nodeType":"YulIdentifier","src":"27684:5:30"}],"functionName":{"name":"shift_left_96","nativeSrc":"27670:13:30","nodeType":"YulIdentifier","src":"27670:13:30"},"nativeSrc":"27670:20:30","nodeType":"YulFunctionCall","src":"27670:20:30"},"variableNames":[{"name":"aligned","nativeSrc":"27659:7:30","nodeType":"YulIdentifier","src":"27659:7:30"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"27602:94:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27631:5:30","nodeType":"YulTypedName","src":"27631:5:30","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"27641:7:30","nodeType":"YulTypedName","src":"27641:7:30","type":""}],"src":"27602:94:30"},{"body":{"nativeSrc":"27749:53:30","nodeType":"YulBlock","src":"27749:53:30","statements":[{"nativeSrc":"27759:37:30","nodeType":"YulAssignment","src":"27759:37:30","value":{"arguments":[{"name":"value","nativeSrc":"27790:5:30","nodeType":"YulIdentifier","src":"27790:5:30"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"27770:19:30","nodeType":"YulIdentifier","src":"27770:19:30"},"nativeSrc":"27770:26:30","nodeType":"YulFunctionCall","src":"27770:26:30"},"variableNames":[{"name":"aligned","nativeSrc":"27759:7:30","nodeType":"YulIdentifier","src":"27759:7:30"}]}]},"name":"leftAlign_t_address","nativeSrc":"27702:100:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27731:5:30","nodeType":"YulTypedName","src":"27731:5:30","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"27741:7:30","nodeType":"YulTypedName","src":"27741:7:30","type":""}],"src":"27702:100:30"},{"body":{"nativeSrc":"27891:74:30","nodeType":"YulBlock","src":"27891:74:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"27908:3:30","nodeType":"YulIdentifier","src":"27908:3:30"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27951:5:30","nodeType":"YulIdentifier","src":"27951:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"27933:17:30","nodeType":"YulIdentifier","src":"27933:17:30"},"nativeSrc":"27933:24:30","nodeType":"YulFunctionCall","src":"27933:24:30"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"27913:19:30","nodeType":"YulIdentifier","src":"27913:19:30"},"nativeSrc":"27913:45:30","nodeType":"YulFunctionCall","src":"27913:45:30"}],"functionName":{"name":"mstore","nativeSrc":"27901:6:30","nodeType":"YulIdentifier","src":"27901:6:30"},"nativeSrc":"27901:58:30","nodeType":"YulFunctionCall","src":"27901:58:30"},"nativeSrc":"27901:58:30","nodeType":"YulExpressionStatement","src":"27901:58:30"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"27808:157:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27879:5:30","nodeType":"YulTypedName","src":"27879:5:30","type":""},{"name":"pos","nativeSrc":"27886:3:30","nodeType":"YulTypedName","src":"27886:3:30","type":""}],"src":"27808:157:30"},{"body":{"nativeSrc":"28188:305:30","nodeType":"YulBlock","src":"28188:305:30","statements":[{"nativeSrc":"28199:155:30","nodeType":"YulAssignment","src":"28199:155:30","value":{"arguments":[{"name":"pos","nativeSrc":"28350:3:30","nodeType":"YulIdentifier","src":"28350:3:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28206:142:30","nodeType":"YulIdentifier","src":"28206:142:30"},"nativeSrc":"28206:148:30","nodeType":"YulFunctionCall","src":"28206:148:30"},"variableNames":[{"name":"pos","nativeSrc":"28199:3:30","nodeType":"YulIdentifier","src":"28199:3:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28426:6:30","nodeType":"YulIdentifier","src":"28426:6:30"},{"name":"pos","nativeSrc":"28435:3:30","nodeType":"YulIdentifier","src":"28435:3:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"28364:61:30","nodeType":"YulIdentifier","src":"28364:61:30"},"nativeSrc":"28364:75:30","nodeType":"YulFunctionCall","src":"28364:75:30"},"nativeSrc":"28364:75:30","nodeType":"YulExpressionStatement","src":"28364:75:30"},{"nativeSrc":"28448:19:30","nodeType":"YulAssignment","src":"28448:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"28459:3:30","nodeType":"YulIdentifier","src":"28459:3:30"},{"kind":"number","nativeSrc":"28464:2:30","nodeType":"YulLiteral","src":"28464:2:30","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"28455:3:30","nodeType":"YulIdentifier","src":"28455:3:30"},"nativeSrc":"28455:12:30","nodeType":"YulFunctionCall","src":"28455:12:30"},"variableNames":[{"name":"pos","nativeSrc":"28448:3:30","nodeType":"YulIdentifier","src":"28448:3:30"}]},{"nativeSrc":"28477:10:30","nodeType":"YulAssignment","src":"28477:10:30","value":{"name":"pos","nativeSrc":"28484:3:30","nodeType":"YulIdentifier","src":"28484:3:30"},"variableNames":[{"name":"end","nativeSrc":"28477:3:30","nodeType":"YulIdentifier","src":"28477:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"27971:522:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28167:3:30","nodeType":"YulTypedName","src":"28167:3:30","type":""},{"name":"value0","nativeSrc":"28173:6:30","nodeType":"YulTypedName","src":"28173:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28184:3:30","nodeType":"YulTypedName","src":"28184:3:30","type":""}],"src":"27971:522:30"},{"body":{"nativeSrc":"28653:288:30","nodeType":"YulBlock","src":"28653:288:30","statements":[{"nativeSrc":"28663:26:30","nodeType":"YulAssignment","src":"28663:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"28675:9:30","nodeType":"YulIdentifier","src":"28675:9:30"},{"kind":"number","nativeSrc":"28686:2:30","nodeType":"YulLiteral","src":"28686:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28671:3:30","nodeType":"YulIdentifier","src":"28671:3:30"},"nativeSrc":"28671:18:30","nodeType":"YulFunctionCall","src":"28671:18:30"},"variableNames":[{"name":"tail","nativeSrc":"28663:4:30","nodeType":"YulIdentifier","src":"28663:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28743:6:30","nodeType":"YulIdentifier","src":"28743:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"28756:9:30","nodeType":"YulIdentifier","src":"28756:9:30"},{"kind":"number","nativeSrc":"28767:1:30","nodeType":"YulLiteral","src":"28767:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28752:3:30","nodeType":"YulIdentifier","src":"28752:3:30"},"nativeSrc":"28752:17:30","nodeType":"YulFunctionCall","src":"28752:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28699:43:30","nodeType":"YulIdentifier","src":"28699:43:30"},"nativeSrc":"28699:71:30","nodeType":"YulFunctionCall","src":"28699:71:30"},"nativeSrc":"28699:71:30","nodeType":"YulExpressionStatement","src":"28699:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28824:6:30","nodeType":"YulIdentifier","src":"28824:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"28837:9:30","nodeType":"YulIdentifier","src":"28837:9:30"},{"kind":"number","nativeSrc":"28848:2:30","nodeType":"YulLiteral","src":"28848:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28833:3:30","nodeType":"YulIdentifier","src":"28833:3:30"},"nativeSrc":"28833:18:30","nodeType":"YulFunctionCall","src":"28833:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28780:43:30","nodeType":"YulIdentifier","src":"28780:43:30"},"nativeSrc":"28780:72:30","nodeType":"YulFunctionCall","src":"28780:72:30"},"nativeSrc":"28780:72:30","nodeType":"YulExpressionStatement","src":"28780:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"28906:6:30","nodeType":"YulIdentifier","src":"28906:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"28919:9:30","nodeType":"YulIdentifier","src":"28919:9:30"},{"kind":"number","nativeSrc":"28930:2:30","nodeType":"YulLiteral","src":"28930:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28915:3:30","nodeType":"YulIdentifier","src":"28915:3:30"},"nativeSrc":"28915:18:30","nodeType":"YulFunctionCall","src":"28915:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28862:43:30","nodeType":"YulIdentifier","src":"28862:43:30"},"nativeSrc":"28862:72:30","nodeType":"YulFunctionCall","src":"28862:72:30"},"nativeSrc":"28862:72:30","nodeType":"YulExpressionStatement","src":"28862:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"28499:442:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28609:9:30","nodeType":"YulTypedName","src":"28609:9:30","type":""},{"name":"value2","nativeSrc":"28621:6:30","nodeType":"YulTypedName","src":"28621:6:30","type":""},{"name":"value1","nativeSrc":"28629:6:30","nodeType":"YulTypedName","src":"28629:6:30","type":""},{"name":"value0","nativeSrc":"28637:6:30","nodeType":"YulTypedName","src":"28637:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28648:4:30","nodeType":"YulTypedName","src":"28648:4:30","type":""}],"src":"28499:442:30"},{"body":{"nativeSrc":"29053:135:30","nodeType":"YulBlock","src":"29053:135:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29075:6:30","nodeType":"YulIdentifier","src":"29075:6:30"},{"kind":"number","nativeSrc":"29083:1:30","nodeType":"YulLiteral","src":"29083:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29071:3:30","nodeType":"YulIdentifier","src":"29071:3:30"},"nativeSrc":"29071:14:30","nodeType":"YulFunctionCall","src":"29071:14:30"},{"hexValue":"4172617261436f696e3a20596f75206861766520616c72656164792061707072","kind":"string","nativeSrc":"29087:34:30","nodeType":"YulLiteral","src":"29087:34:30","type":"","value":"AraraCoin: You have already appr"}],"functionName":{"name":"mstore","nativeSrc":"29064:6:30","nodeType":"YulIdentifier","src":"29064:6:30"},"nativeSrc":"29064:58:30","nodeType":"YulFunctionCall","src":"29064:58:30"},"nativeSrc":"29064:58:30","nodeType":"YulExpressionStatement","src":"29064:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29143:6:30","nodeType":"YulIdentifier","src":"29143:6:30"},{"kind":"number","nativeSrc":"29151:2:30","nodeType":"YulLiteral","src":"29151:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29139:3:30","nodeType":"YulIdentifier","src":"29139:3:30"},"nativeSrc":"29139:15:30","nodeType":"YulFunctionCall","src":"29139:15:30"},{"hexValue":"6f7665642074686973207472616e73616374696f6e2e","kind":"string","nativeSrc":"29156:24:30","nodeType":"YulLiteral","src":"29156:24:30","type":"","value":"oved this transaction."}],"functionName":{"name":"mstore","nativeSrc":"29132:6:30","nodeType":"YulIdentifier","src":"29132:6:30"},"nativeSrc":"29132:49:30","nodeType":"YulFunctionCall","src":"29132:49:30"},"nativeSrc":"29132:49:30","nodeType":"YulExpressionStatement","src":"29132:49:30"}]},"name":"store_literal_in_memory_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2","nativeSrc":"28947:241:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"29045:6:30","nodeType":"YulTypedName","src":"29045:6:30","type":""}],"src":"28947:241:30"},{"body":{"nativeSrc":"29340:220:30","nodeType":"YulBlock","src":"29340:220:30","statements":[{"nativeSrc":"29350:74:30","nodeType":"YulAssignment","src":"29350:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"29416:3:30","nodeType":"YulIdentifier","src":"29416:3:30"},{"kind":"number","nativeSrc":"29421:2:30","nodeType":"YulLiteral","src":"29421:2:30","type":"","value":"54"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"29357:58:30","nodeType":"YulIdentifier","src":"29357:58:30"},"nativeSrc":"29357:67:30","nodeType":"YulFunctionCall","src":"29357:67:30"},"variableNames":[{"name":"pos","nativeSrc":"29350:3:30","nodeType":"YulIdentifier","src":"29350:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"29522:3:30","nodeType":"YulIdentifier","src":"29522:3:30"}],"functionName":{"name":"store_literal_in_memory_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2","nativeSrc":"29433:88:30","nodeType":"YulIdentifier","src":"29433:88:30"},"nativeSrc":"29433:93:30","nodeType":"YulFunctionCall","src":"29433:93:30"},"nativeSrc":"29433:93:30","nodeType":"YulExpressionStatement","src":"29433:93:30"},{"nativeSrc":"29535:19:30","nodeType":"YulAssignment","src":"29535:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"29546:3:30","nodeType":"YulIdentifier","src":"29546:3:30"},{"kind":"number","nativeSrc":"29551:2:30","nodeType":"YulLiteral","src":"29551:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29542:3:30","nodeType":"YulIdentifier","src":"29542:3:30"},"nativeSrc":"29542:12:30","nodeType":"YulFunctionCall","src":"29542:12:30"},"variableNames":[{"name":"end","nativeSrc":"29535:3:30","nodeType":"YulIdentifier","src":"29535:3:30"}]}]},"name":"abi_encode_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2_to_t_string_memory_ptr_fromStack","nativeSrc":"29194:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29328:3:30","nodeType":"YulTypedName","src":"29328:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29336:3:30","nodeType":"YulTypedName","src":"29336:3:30","type":""}],"src":"29194:366:30"},{"body":{"nativeSrc":"29737:248:30","nodeType":"YulBlock","src":"29737:248:30","statements":[{"nativeSrc":"29747:26:30","nodeType":"YulAssignment","src":"29747:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"29759:9:30","nodeType":"YulIdentifier","src":"29759:9:30"},{"kind":"number","nativeSrc":"29770:2:30","nodeType":"YulLiteral","src":"29770:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29755:3:30","nodeType":"YulIdentifier","src":"29755:3:30"},"nativeSrc":"29755:18:30","nodeType":"YulFunctionCall","src":"29755:18:30"},"variableNames":[{"name":"tail","nativeSrc":"29747:4:30","nodeType":"YulIdentifier","src":"29747:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29794:9:30","nodeType":"YulIdentifier","src":"29794:9:30"},{"kind":"number","nativeSrc":"29805:1:30","nodeType":"YulLiteral","src":"29805:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29790:3:30","nodeType":"YulIdentifier","src":"29790:3:30"},"nativeSrc":"29790:17:30","nodeType":"YulFunctionCall","src":"29790:17:30"},{"arguments":[{"name":"tail","nativeSrc":"29813:4:30","nodeType":"YulIdentifier","src":"29813:4:30"},{"name":"headStart","nativeSrc":"29819:9:30","nodeType":"YulIdentifier","src":"29819:9:30"}],"functionName":{"name":"sub","nativeSrc":"29809:3:30","nodeType":"YulIdentifier","src":"29809:3:30"},"nativeSrc":"29809:20:30","nodeType":"YulFunctionCall","src":"29809:20:30"}],"functionName":{"name":"mstore","nativeSrc":"29783:6:30","nodeType":"YulIdentifier","src":"29783:6:30"},"nativeSrc":"29783:47:30","nodeType":"YulFunctionCall","src":"29783:47:30"},"nativeSrc":"29783:47:30","nodeType":"YulExpressionStatement","src":"29783:47:30"},{"nativeSrc":"29839:139:30","nodeType":"YulAssignment","src":"29839:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"29973:4:30","nodeType":"YulIdentifier","src":"29973:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2_to_t_string_memory_ptr_fromStack","nativeSrc":"29847:124:30","nodeType":"YulIdentifier","src":"29847:124:30"},"nativeSrc":"29847:131:30","nodeType":"YulFunctionCall","src":"29847:131:30"},"variableNames":[{"name":"tail","nativeSrc":"29839:4:30","nodeType":"YulIdentifier","src":"29839:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"29566:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29717:9:30","nodeType":"YulTypedName","src":"29717:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29732:4:30","nodeType":"YulTypedName","src":"29732:4:30","type":""}],"src":"29566:419:30"},{"body":{"nativeSrc":"30019:152:30","nodeType":"YulBlock","src":"30019:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30036:1:30","nodeType":"YulLiteral","src":"30036:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"30039:77:30","nodeType":"YulLiteral","src":"30039:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"30029:6:30","nodeType":"YulIdentifier","src":"30029:6:30"},"nativeSrc":"30029:88:30","nodeType":"YulFunctionCall","src":"30029:88:30"},"nativeSrc":"30029:88:30","nodeType":"YulExpressionStatement","src":"30029:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30133:1:30","nodeType":"YulLiteral","src":"30133:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"30136:4:30","nodeType":"YulLiteral","src":"30136:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"30126:6:30","nodeType":"YulIdentifier","src":"30126:6:30"},"nativeSrc":"30126:15:30","nodeType":"YulFunctionCall","src":"30126:15:30"},"nativeSrc":"30126:15:30","nodeType":"YulExpressionStatement","src":"30126:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30157:1:30","nodeType":"YulLiteral","src":"30157:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"30160:4:30","nodeType":"YulLiteral","src":"30160:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"30150:6:30","nodeType":"YulIdentifier","src":"30150:6:30"},"nativeSrc":"30150:15:30","nodeType":"YulFunctionCall","src":"30150:15:30"},"nativeSrc":"30150:15:30","nodeType":"YulExpressionStatement","src":"30150:15:30"}]},"name":"panic_error_0x11","nativeSrc":"29991:180:30","nodeType":"YulFunctionDefinition","src":"29991:180:30"},{"body":{"nativeSrc":"30221:147:30","nodeType":"YulBlock","src":"30221:147:30","statements":[{"nativeSrc":"30231:25:30","nodeType":"YulAssignment","src":"30231:25:30","value":{"arguments":[{"name":"x","nativeSrc":"30254:1:30","nodeType":"YulIdentifier","src":"30254:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30236:17:30","nodeType":"YulIdentifier","src":"30236:17:30"},"nativeSrc":"30236:20:30","nodeType":"YulFunctionCall","src":"30236:20:30"},"variableNames":[{"name":"x","nativeSrc":"30231:1:30","nodeType":"YulIdentifier","src":"30231:1:30"}]},{"nativeSrc":"30265:25:30","nodeType":"YulAssignment","src":"30265:25:30","value":{"arguments":[{"name":"y","nativeSrc":"30288:1:30","nodeType":"YulIdentifier","src":"30288:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30270:17:30","nodeType":"YulIdentifier","src":"30270:17:30"},"nativeSrc":"30270:20:30","nodeType":"YulFunctionCall","src":"30270:20:30"},"variableNames":[{"name":"y","nativeSrc":"30265:1:30","nodeType":"YulIdentifier","src":"30265:1:30"}]},{"nativeSrc":"30299:16:30","nodeType":"YulAssignment","src":"30299:16:30","value":{"arguments":[{"name":"x","nativeSrc":"30310:1:30","nodeType":"YulIdentifier","src":"30310:1:30"},{"name":"y","nativeSrc":"30313:1:30","nodeType":"YulIdentifier","src":"30313:1:30"}],"functionName":{"name":"add","nativeSrc":"30306:3:30","nodeType":"YulIdentifier","src":"30306:3:30"},"nativeSrc":"30306:9:30","nodeType":"YulFunctionCall","src":"30306:9:30"},"variableNames":[{"name":"sum","nativeSrc":"30299:3:30","nodeType":"YulIdentifier","src":"30299:3:30"}]},{"body":{"nativeSrc":"30339:22:30","nodeType":"YulBlock","src":"30339:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"30341:16:30","nodeType":"YulIdentifier","src":"30341:16:30"},"nativeSrc":"30341:18:30","nodeType":"YulFunctionCall","src":"30341:18:30"},"nativeSrc":"30341:18:30","nodeType":"YulExpressionStatement","src":"30341:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"30331:1:30","nodeType":"YulIdentifier","src":"30331:1:30"},{"name":"sum","nativeSrc":"30334:3:30","nodeType":"YulIdentifier","src":"30334:3:30"}],"functionName":{"name":"gt","nativeSrc":"30328:2:30","nodeType":"YulIdentifier","src":"30328:2:30"},"nativeSrc":"30328:10:30","nodeType":"YulFunctionCall","src":"30328:10:30"},"nativeSrc":"30325:36:30","nodeType":"YulIf","src":"30325:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"30177:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"30208:1:30","nodeType":"YulTypedName","src":"30208:1:30","type":""},{"name":"y","nativeSrc":"30211:1:30","nodeType":"YulTypedName","src":"30211:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"30217:3:30","nodeType":"YulTypedName","src":"30217:3:30","type":""}],"src":"30177:191:30"},{"body":{"nativeSrc":"30500:206:30","nodeType":"YulBlock","src":"30500:206:30","statements":[{"nativeSrc":"30510:26:30","nodeType":"YulAssignment","src":"30510:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"30522:9:30","nodeType":"YulIdentifier","src":"30522:9:30"},{"kind":"number","nativeSrc":"30533:2:30","nodeType":"YulLiteral","src":"30533:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30518:3:30","nodeType":"YulIdentifier","src":"30518:3:30"},"nativeSrc":"30518:18:30","nodeType":"YulFunctionCall","src":"30518:18:30"},"variableNames":[{"name":"tail","nativeSrc":"30510:4:30","nodeType":"YulIdentifier","src":"30510:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"30590:6:30","nodeType":"YulIdentifier","src":"30590:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"30603:9:30","nodeType":"YulIdentifier","src":"30603:9:30"},{"kind":"number","nativeSrc":"30614:1:30","nodeType":"YulLiteral","src":"30614:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30599:3:30","nodeType":"YulIdentifier","src":"30599:3:30"},"nativeSrc":"30599:17:30","nodeType":"YulFunctionCall","src":"30599:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"30546:43:30","nodeType":"YulIdentifier","src":"30546:43:30"},"nativeSrc":"30546:71:30","nodeType":"YulFunctionCall","src":"30546:71:30"},"nativeSrc":"30546:71:30","nodeType":"YulExpressionStatement","src":"30546:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"30671:6:30","nodeType":"YulIdentifier","src":"30671:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"30684:9:30","nodeType":"YulIdentifier","src":"30684:9:30"},{"kind":"number","nativeSrc":"30695:2:30","nodeType":"YulLiteral","src":"30695:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30680:3:30","nodeType":"YulIdentifier","src":"30680:3:30"},"nativeSrc":"30680:18:30","nodeType":"YulFunctionCall","src":"30680:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"30627:43:30","nodeType":"YulIdentifier","src":"30627:43:30"},"nativeSrc":"30627:72:30","nodeType":"YulFunctionCall","src":"30627:72:30"},"nativeSrc":"30627:72:30","nodeType":"YulExpressionStatement","src":"30627:72:30"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"30374:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30464:9:30","nodeType":"YulTypedName","src":"30464:9:30","type":""},{"name":"value1","nativeSrc":"30476:6:30","nodeType":"YulTypedName","src":"30476:6:30","type":""},{"name":"value0","nativeSrc":"30484:6:30","nodeType":"YulTypedName","src":"30484:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30495:4:30","nodeType":"YulTypedName","src":"30495:4:30","type":""}],"src":"30374:332:30"},{"body":{"nativeSrc":"30757:149:30","nodeType":"YulBlock","src":"30757:149:30","statements":[{"nativeSrc":"30767:25:30","nodeType":"YulAssignment","src":"30767:25:30","value":{"arguments":[{"name":"x","nativeSrc":"30790:1:30","nodeType":"YulIdentifier","src":"30790:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30772:17:30","nodeType":"YulIdentifier","src":"30772:17:30"},"nativeSrc":"30772:20:30","nodeType":"YulFunctionCall","src":"30772:20:30"},"variableNames":[{"name":"x","nativeSrc":"30767:1:30","nodeType":"YulIdentifier","src":"30767:1:30"}]},{"nativeSrc":"30801:25:30","nodeType":"YulAssignment","src":"30801:25:30","value":{"arguments":[{"name":"y","nativeSrc":"30824:1:30","nodeType":"YulIdentifier","src":"30824:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30806:17:30","nodeType":"YulIdentifier","src":"30806:17:30"},"nativeSrc":"30806:20:30","nodeType":"YulFunctionCall","src":"30806:20:30"},"variableNames":[{"name":"y","nativeSrc":"30801:1:30","nodeType":"YulIdentifier","src":"30801:1:30"}]},{"nativeSrc":"30835:17:30","nodeType":"YulAssignment","src":"30835:17:30","value":{"arguments":[{"name":"x","nativeSrc":"30847:1:30","nodeType":"YulIdentifier","src":"30847:1:30"},{"name":"y","nativeSrc":"30850:1:30","nodeType":"YulIdentifier","src":"30850:1:30"}],"functionName":{"name":"sub","nativeSrc":"30843:3:30","nodeType":"YulIdentifier","src":"30843:3:30"},"nativeSrc":"30843:9:30","nodeType":"YulFunctionCall","src":"30843:9:30"},"variableNames":[{"name":"diff","nativeSrc":"30835:4:30","nodeType":"YulIdentifier","src":"30835:4:30"}]},{"body":{"nativeSrc":"30877:22:30","nodeType":"YulBlock","src":"30877:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"30879:16:30","nodeType":"YulIdentifier","src":"30879:16:30"},"nativeSrc":"30879:18:30","nodeType":"YulFunctionCall","src":"30879:18:30"},"nativeSrc":"30879:18:30","nodeType":"YulExpressionStatement","src":"30879:18:30"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"30868:4:30","nodeType":"YulIdentifier","src":"30868:4:30"},{"name":"x","nativeSrc":"30874:1:30","nodeType":"YulIdentifier","src":"30874:1:30"}],"functionName":{"name":"gt","nativeSrc":"30865:2:30","nodeType":"YulIdentifier","src":"30865:2:30"},"nativeSrc":"30865:11:30","nodeType":"YulFunctionCall","src":"30865:11:30"},"nativeSrc":"30862:37:30","nodeType":"YulIf","src":"30862:37:30"}]},"name":"checked_sub_t_uint256","nativeSrc":"30712:194:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"30743:1:30","nodeType":"YulTypedName","src":"30743:1:30","type":""},{"name":"y","nativeSrc":"30746:1:30","nodeType":"YulTypedName","src":"30746:1:30","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"30752:4:30","nodeType":"YulTypedName","src":"30752:4:30","type":""}],"src":"30712:194:30"},{"body":{"nativeSrc":"30940:152:30","nodeType":"YulBlock","src":"30940:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30957:1:30","nodeType":"YulLiteral","src":"30957:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"30960:77:30","nodeType":"YulLiteral","src":"30960:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"30950:6:30","nodeType":"YulIdentifier","src":"30950:6:30"},"nativeSrc":"30950:88:30","nodeType":"YulFunctionCall","src":"30950:88:30"},"nativeSrc":"30950:88:30","nodeType":"YulExpressionStatement","src":"30950:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31054:1:30","nodeType":"YulLiteral","src":"31054:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"31057:4:30","nodeType":"YulLiteral","src":"31057:4:30","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"31047:6:30","nodeType":"YulIdentifier","src":"31047:6:30"},"nativeSrc":"31047:15:30","nodeType":"YulFunctionCall","src":"31047:15:30"},"nativeSrc":"31047:15:30","nodeType":"YulExpressionStatement","src":"31047:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"31078:1:30","nodeType":"YulLiteral","src":"31078:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"31081:4:30","nodeType":"YulLiteral","src":"31081:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"31071:6:30","nodeType":"YulIdentifier","src":"31071:6:30"},"nativeSrc":"31071:15:30","nodeType":"YulFunctionCall","src":"31071:15:30"},"nativeSrc":"31071:15:30","nodeType":"YulExpressionStatement","src":"31071:15:30"}]},"name":"panic_error_0x31","nativeSrc":"30912:180:30","nodeType":"YulFunctionDefinition","src":"30912:180:30"},{"body":{"nativeSrc":"31204:72:30","nodeType":"YulBlock","src":"31204:72:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31226:6:30","nodeType":"YulIdentifier","src":"31226:6:30"},{"kind":"number","nativeSrc":"31234:1:30","nodeType":"YulLiteral","src":"31234:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31222:3:30","nodeType":"YulIdentifier","src":"31222:3:30"},"nativeSrc":"31222:14:30","nodeType":"YulFunctionCall","src":"31222:14:30"},{"hexValue":"4172617261436f696e3a2054726164652069732064697361626c6564","kind":"string","nativeSrc":"31238:30:30","nodeType":"YulLiteral","src":"31238:30:30","type":"","value":"AraraCoin: Trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"31215:6:30","nodeType":"YulIdentifier","src":"31215:6:30"},"nativeSrc":"31215:54:30","nodeType":"YulFunctionCall","src":"31215:54:30"},"nativeSrc":"31215:54:30","nodeType":"YulExpressionStatement","src":"31215:54:30"}]},"name":"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","nativeSrc":"31098:178:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31196:6:30","nodeType":"YulTypedName","src":"31196:6:30","type":""}],"src":"31098:178:30"},{"body":{"nativeSrc":"31428:220:30","nodeType":"YulBlock","src":"31428:220:30","statements":[{"nativeSrc":"31438:74:30","nodeType":"YulAssignment","src":"31438:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"31504:3:30","nodeType":"YulIdentifier","src":"31504:3:30"},{"kind":"number","nativeSrc":"31509:2:30","nodeType":"YulLiteral","src":"31509:2:30","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31445:58:30","nodeType":"YulIdentifier","src":"31445:58:30"},"nativeSrc":"31445:67:30","nodeType":"YulFunctionCall","src":"31445:67:30"},"variableNames":[{"name":"pos","nativeSrc":"31438:3:30","nodeType":"YulIdentifier","src":"31438:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31610:3:30","nodeType":"YulIdentifier","src":"31610:3:30"}],"functionName":{"name":"store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f","nativeSrc":"31521:88:30","nodeType":"YulIdentifier","src":"31521:88:30"},"nativeSrc":"31521:93:30","nodeType":"YulFunctionCall","src":"31521:93:30"},"nativeSrc":"31521:93:30","nodeType":"YulExpressionStatement","src":"31521:93:30"},{"nativeSrc":"31623:19:30","nodeType":"YulAssignment","src":"31623:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"31634:3:30","nodeType":"YulIdentifier","src":"31634:3:30"},{"kind":"number","nativeSrc":"31639:2:30","nodeType":"YulLiteral","src":"31639:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31630:3:30","nodeType":"YulIdentifier","src":"31630:3:30"},"nativeSrc":"31630:12:30","nodeType":"YulFunctionCall","src":"31630:12:30"},"variableNames":[{"name":"end","nativeSrc":"31623:3:30","nodeType":"YulIdentifier","src":"31623:3:30"}]}]},"name":"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack","nativeSrc":"31282:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31416:3:30","nodeType":"YulTypedName","src":"31416:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31424:3:30","nodeType":"YulTypedName","src":"31424:3:30","type":""}],"src":"31282:366:30"},{"body":{"nativeSrc":"31825:248:30","nodeType":"YulBlock","src":"31825:248:30","statements":[{"nativeSrc":"31835:26:30","nodeType":"YulAssignment","src":"31835:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"31847:9:30","nodeType":"YulIdentifier","src":"31847:9:30"},{"kind":"number","nativeSrc":"31858:2:30","nodeType":"YulLiteral","src":"31858:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31843:3:30","nodeType":"YulIdentifier","src":"31843:3:30"},"nativeSrc":"31843:18:30","nodeType":"YulFunctionCall","src":"31843:18:30"},"variableNames":[{"name":"tail","nativeSrc":"31835:4:30","nodeType":"YulIdentifier","src":"31835:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31882:9:30","nodeType":"YulIdentifier","src":"31882:9:30"},{"kind":"number","nativeSrc":"31893:1:30","nodeType":"YulLiteral","src":"31893:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31878:3:30","nodeType":"YulIdentifier","src":"31878:3:30"},"nativeSrc":"31878:17:30","nodeType":"YulFunctionCall","src":"31878:17:30"},{"arguments":[{"name":"tail","nativeSrc":"31901:4:30","nodeType":"YulIdentifier","src":"31901:4:30"},{"name":"headStart","nativeSrc":"31907:9:30","nodeType":"YulIdentifier","src":"31907:9:30"}],"functionName":{"name":"sub","nativeSrc":"31897:3:30","nodeType":"YulIdentifier","src":"31897:3:30"},"nativeSrc":"31897:20:30","nodeType":"YulFunctionCall","src":"31897:20:30"}],"functionName":{"name":"mstore","nativeSrc":"31871:6:30","nodeType":"YulIdentifier","src":"31871:6:30"},"nativeSrc":"31871:47:30","nodeType":"YulFunctionCall","src":"31871:47:30"},"nativeSrc":"31871:47:30","nodeType":"YulExpressionStatement","src":"31871:47:30"},{"nativeSrc":"31927:139:30","nodeType":"YulAssignment","src":"31927:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"32061:4:30","nodeType":"YulIdentifier","src":"32061:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack","nativeSrc":"31935:124:30","nodeType":"YulIdentifier","src":"31935:124:30"},"nativeSrc":"31935:131:30","nodeType":"YulFunctionCall","src":"31935:131:30"},"variableNames":[{"name":"tail","nativeSrc":"31927:4:30","nodeType":"YulIdentifier","src":"31927:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31654:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31805:9:30","nodeType":"YulTypedName","src":"31805:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31820:4:30","nodeType":"YulTypedName","src":"31820:4:30","type":""}],"src":"31654:419:30"},{"body":{"nativeSrc":"32289:454:30","nodeType":"YulBlock","src":"32289:454:30","statements":[{"nativeSrc":"32299:27:30","nodeType":"YulAssignment","src":"32299:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"32311:9:30","nodeType":"YulIdentifier","src":"32311:9:30"},{"kind":"number","nativeSrc":"32322:3:30","nodeType":"YulLiteral","src":"32322:3:30","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"32307:3:30","nodeType":"YulIdentifier","src":"32307:3:30"},"nativeSrc":"32307:19:30","nodeType":"YulFunctionCall","src":"32307:19:30"},"variableNames":[{"name":"tail","nativeSrc":"32299:4:30","nodeType":"YulIdentifier","src":"32299:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32380:6:30","nodeType":"YulIdentifier","src":"32380:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"32393:9:30","nodeType":"YulIdentifier","src":"32393:9:30"},{"kind":"number","nativeSrc":"32404:1:30","nodeType":"YulLiteral","src":"32404:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32389:3:30","nodeType":"YulIdentifier","src":"32389:3:30"},"nativeSrc":"32389:17:30","nodeType":"YulFunctionCall","src":"32389:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"32336:43:30","nodeType":"YulIdentifier","src":"32336:43:30"},"nativeSrc":"32336:71:30","nodeType":"YulFunctionCall","src":"32336:71:30"},"nativeSrc":"32336:71:30","nodeType":"YulExpressionStatement","src":"32336:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"32461:6:30","nodeType":"YulIdentifier","src":"32461:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"32474:9:30","nodeType":"YulIdentifier","src":"32474:9:30"},{"kind":"number","nativeSrc":"32485:2:30","nodeType":"YulLiteral","src":"32485:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32470:3:30","nodeType":"YulIdentifier","src":"32470:3:30"},"nativeSrc":"32470:18:30","nodeType":"YulFunctionCall","src":"32470:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"32417:43:30","nodeType":"YulIdentifier","src":"32417:43:30"},"nativeSrc":"32417:72:30","nodeType":"YulFunctionCall","src":"32417:72:30"},"nativeSrc":"32417:72:30","nodeType":"YulExpressionStatement","src":"32417:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"32543:6:30","nodeType":"YulIdentifier","src":"32543:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"32556:9:30","nodeType":"YulIdentifier","src":"32556:9:30"},{"kind":"number","nativeSrc":"32567:2:30","nodeType":"YulLiteral","src":"32567:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"32552:3:30","nodeType":"YulIdentifier","src":"32552:3:30"},"nativeSrc":"32552:18:30","nodeType":"YulFunctionCall","src":"32552:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"32499:43:30","nodeType":"YulIdentifier","src":"32499:43:30"},"nativeSrc":"32499:72:30","nodeType":"YulFunctionCall","src":"32499:72:30"},"nativeSrc":"32499:72:30","nodeType":"YulExpressionStatement","src":"32499:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"32625:6:30","nodeType":"YulIdentifier","src":"32625:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"32638:9:30","nodeType":"YulIdentifier","src":"32638:9:30"},{"kind":"number","nativeSrc":"32649:2:30","nodeType":"YulLiteral","src":"32649:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"32634:3:30","nodeType":"YulIdentifier","src":"32634:3:30"},"nativeSrc":"32634:18:30","nodeType":"YulFunctionCall","src":"32634:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"32581:43:30","nodeType":"YulIdentifier","src":"32581:43:30"},"nativeSrc":"32581:72:30","nodeType":"YulFunctionCall","src":"32581:72:30"},"nativeSrc":"32581:72:30","nodeType":"YulExpressionStatement","src":"32581:72:30"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"32707:6:30","nodeType":"YulIdentifier","src":"32707:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"32720:9:30","nodeType":"YulIdentifier","src":"32720:9:30"},{"kind":"number","nativeSrc":"32731:3:30","nodeType":"YulLiteral","src":"32731:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"32716:3:30","nodeType":"YulIdentifier","src":"32716:3:30"},"nativeSrc":"32716:19:30","nodeType":"YulFunctionCall","src":"32716:19:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32663:43:30","nodeType":"YulIdentifier","src":"32663:43:30"},"nativeSrc":"32663:73:30","nodeType":"YulFunctionCall","src":"32663:73:30"},"nativeSrc":"32663:73:30","nodeType":"YulExpressionStatement","src":"32663:73:30"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"32079:664:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32229:9:30","nodeType":"YulTypedName","src":"32229:9:30","type":""},{"name":"value4","nativeSrc":"32241:6:30","nodeType":"YulTypedName","src":"32241:6:30","type":""},{"name":"value3","nativeSrc":"32249:6:30","nodeType":"YulTypedName","src":"32249:6:30","type":""},{"name":"value2","nativeSrc":"32257:6:30","nodeType":"YulTypedName","src":"32257:6:30","type":""},{"name":"value1","nativeSrc":"32265:6:30","nodeType":"YulTypedName","src":"32265:6:30","type":""},{"name":"value0","nativeSrc":"32273:6:30","nodeType":"YulTypedName","src":"32273:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32284:4:30","nodeType":"YulTypedName","src":"32284:4:30","type":""}],"src":"32079:664:30"},{"body":{"nativeSrc":"32927:367:30","nodeType":"YulBlock","src":"32927:367:30","statements":[{"nativeSrc":"32937:27:30","nodeType":"YulAssignment","src":"32937:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"32949:9:30","nodeType":"YulIdentifier","src":"32949:9:30"},{"kind":"number","nativeSrc":"32960:3:30","nodeType":"YulLiteral","src":"32960:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"32945:3:30","nodeType":"YulIdentifier","src":"32945:3:30"},"nativeSrc":"32945:19:30","nodeType":"YulFunctionCall","src":"32945:19:30"},"variableNames":[{"name":"tail","nativeSrc":"32937:4:30","nodeType":"YulIdentifier","src":"32937:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33018:6:30","nodeType":"YulIdentifier","src":"33018:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"33031:9:30","nodeType":"YulIdentifier","src":"33031:9:30"},{"kind":"number","nativeSrc":"33042:1:30","nodeType":"YulLiteral","src":"33042:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33027:3:30","nodeType":"YulIdentifier","src":"33027:3:30"},"nativeSrc":"33027:17:30","nodeType":"YulFunctionCall","src":"33027:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"32974:43:30","nodeType":"YulIdentifier","src":"32974:43:30"},"nativeSrc":"32974:71:30","nodeType":"YulFunctionCall","src":"32974:71:30"},"nativeSrc":"32974:71:30","nodeType":"YulExpressionStatement","src":"32974:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"33095:6:30","nodeType":"YulIdentifier","src":"33095:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"33108:9:30","nodeType":"YulIdentifier","src":"33108:9:30"},{"kind":"number","nativeSrc":"33119:2:30","nodeType":"YulLiteral","src":"33119:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33104:3:30","nodeType":"YulIdentifier","src":"33104:3:30"},"nativeSrc":"33104:18:30","nodeType":"YulFunctionCall","src":"33104:18:30"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"33055:39:30","nodeType":"YulIdentifier","src":"33055:39:30"},"nativeSrc":"33055:68:30","nodeType":"YulFunctionCall","src":"33055:68:30"},"nativeSrc":"33055:68:30","nodeType":"YulExpressionStatement","src":"33055:68:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"33177:6:30","nodeType":"YulIdentifier","src":"33177:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"33190:9:30","nodeType":"YulIdentifier","src":"33190:9:30"},{"kind":"number","nativeSrc":"33201:2:30","nodeType":"YulLiteral","src":"33201:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"33186:3:30","nodeType":"YulIdentifier","src":"33186:3:30"},"nativeSrc":"33186:18:30","nodeType":"YulFunctionCall","src":"33186:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"33133:43:30","nodeType":"YulIdentifier","src":"33133:43:30"},"nativeSrc":"33133:72:30","nodeType":"YulFunctionCall","src":"33133:72:30"},"nativeSrc":"33133:72:30","nodeType":"YulExpressionStatement","src":"33133:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"33259:6:30","nodeType":"YulIdentifier","src":"33259:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"33272:9:30","nodeType":"YulIdentifier","src":"33272:9:30"},{"kind":"number","nativeSrc":"33283:2:30","nodeType":"YulLiteral","src":"33283:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"33268:3:30","nodeType":"YulIdentifier","src":"33268:3:30"},"nativeSrc":"33268:18:30","nodeType":"YulFunctionCall","src":"33268:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"33215:43:30","nodeType":"YulIdentifier","src":"33215:43:30"},"nativeSrc":"33215:72:30","nodeType":"YulFunctionCall","src":"33215:72:30"},"nativeSrc":"33215:72:30","nodeType":"YulExpressionStatement","src":"33215:72:30"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"32749:545:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32875:9:30","nodeType":"YulTypedName","src":"32875:9:30","type":""},{"name":"value3","nativeSrc":"32887:6:30","nodeType":"YulTypedName","src":"32887:6:30","type":""},{"name":"value2","nativeSrc":"32895:6:30","nodeType":"YulTypedName","src":"32895:6:30","type":""},{"name":"value1","nativeSrc":"32903:6:30","nodeType":"YulTypedName","src":"32903:6:30","type":""},{"name":"value0","nativeSrc":"32911:6:30","nodeType":"YulTypedName","src":"32911:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32922:4:30","nodeType":"YulTypedName","src":"32922:4:30","type":""}],"src":"32749:545:30"},{"body":{"nativeSrc":"33328:152:30","nodeType":"YulBlock","src":"33328:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"33345:1:30","nodeType":"YulLiteral","src":"33345:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"33348:77:30","nodeType":"YulLiteral","src":"33348:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"33338:6:30","nodeType":"YulIdentifier","src":"33338:6:30"},"nativeSrc":"33338:88:30","nodeType":"YulFunctionCall","src":"33338:88:30"},"nativeSrc":"33338:88:30","nodeType":"YulExpressionStatement","src":"33338:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33442:1:30","nodeType":"YulLiteral","src":"33442:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"33445:4:30","nodeType":"YulLiteral","src":"33445:4:30","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"33435:6:30","nodeType":"YulIdentifier","src":"33435:6:30"},"nativeSrc":"33435:15:30","nodeType":"YulFunctionCall","src":"33435:15:30"},"nativeSrc":"33435:15:30","nodeType":"YulExpressionStatement","src":"33435:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"33466:1:30","nodeType":"YulLiteral","src":"33466:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"33469:4:30","nodeType":"YulLiteral","src":"33469:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"33459:6:30","nodeType":"YulIdentifier","src":"33459:6:30"},"nativeSrc":"33459:15:30","nodeType":"YulFunctionCall","src":"33459:15:30"},"nativeSrc":"33459:15:30","nodeType":"YulExpressionStatement","src":"33459:15:30"}]},"name":"panic_error_0x21","nativeSrc":"33300:180:30","nodeType":"YulFunctionDefinition","src":"33300:180:30"},{"body":{"nativeSrc":"33534:362:30","nodeType":"YulBlock","src":"33534:362:30","statements":[{"nativeSrc":"33544:25:30","nodeType":"YulAssignment","src":"33544:25:30","value":{"arguments":[{"name":"x","nativeSrc":"33567:1:30","nodeType":"YulIdentifier","src":"33567:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"33549:17:30","nodeType":"YulIdentifier","src":"33549:17:30"},"nativeSrc":"33549:20:30","nodeType":"YulFunctionCall","src":"33549:20:30"},"variableNames":[{"name":"x","nativeSrc":"33544:1:30","nodeType":"YulIdentifier","src":"33544:1:30"}]},{"nativeSrc":"33578:25:30","nodeType":"YulAssignment","src":"33578:25:30","value":{"arguments":[{"name":"y","nativeSrc":"33601:1:30","nodeType":"YulIdentifier","src":"33601:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"33583:17:30","nodeType":"YulIdentifier","src":"33583:17:30"},"nativeSrc":"33583:20:30","nodeType":"YulFunctionCall","src":"33583:20:30"},"variableNames":[{"name":"y","nativeSrc":"33578:1:30","nodeType":"YulIdentifier","src":"33578:1:30"}]},{"nativeSrc":"33612:28:30","nodeType":"YulVariableDeclaration","src":"33612:28:30","value":{"arguments":[{"name":"x","nativeSrc":"33635:1:30","nodeType":"YulIdentifier","src":"33635:1:30"},{"name":"y","nativeSrc":"33638:1:30","nodeType":"YulIdentifier","src":"33638:1:30"}],"functionName":{"name":"mul","nativeSrc":"33631:3:30","nodeType":"YulIdentifier","src":"33631:3:30"},"nativeSrc":"33631:9:30","nodeType":"YulFunctionCall","src":"33631:9:30"},"variables":[{"name":"product_raw","nativeSrc":"33616:11:30","nodeType":"YulTypedName","src":"33616:11:30","type":""}]},{"nativeSrc":"33649:41:30","nodeType":"YulAssignment","src":"33649:41:30","value":{"arguments":[{"name":"product_raw","nativeSrc":"33678:11:30","nodeType":"YulIdentifier","src":"33678:11:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"33660:17:30","nodeType":"YulIdentifier","src":"33660:17:30"},"nativeSrc":"33660:30:30","nodeType":"YulFunctionCall","src":"33660:30:30"},"variableNames":[{"name":"product","nativeSrc":"33649:7:30","nodeType":"YulIdentifier","src":"33649:7:30"}]},{"body":{"nativeSrc":"33867:22:30","nodeType":"YulBlock","src":"33867:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"33869:16:30","nodeType":"YulIdentifier","src":"33869:16:30"},"nativeSrc":"33869:18:30","nodeType":"YulFunctionCall","src":"33869:18:30"},"nativeSrc":"33869:18:30","nodeType":"YulExpressionStatement","src":"33869:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"33800:1:30","nodeType":"YulIdentifier","src":"33800:1:30"}],"functionName":{"name":"iszero","nativeSrc":"33793:6:30","nodeType":"YulIdentifier","src":"33793:6:30"},"nativeSrc":"33793:9:30","nodeType":"YulFunctionCall","src":"33793:9:30"},{"arguments":[{"name":"y","nativeSrc":"33823:1:30","nodeType":"YulIdentifier","src":"33823:1:30"},{"arguments":[{"name":"product","nativeSrc":"33830:7:30","nodeType":"YulIdentifier","src":"33830:7:30"},{"name":"x","nativeSrc":"33839:1:30","nodeType":"YulIdentifier","src":"33839:1:30"}],"functionName":{"name":"div","nativeSrc":"33826:3:30","nodeType":"YulIdentifier","src":"33826:3:30"},"nativeSrc":"33826:15:30","nodeType":"YulFunctionCall","src":"33826:15:30"}],"functionName":{"name":"eq","nativeSrc":"33820:2:30","nodeType":"YulIdentifier","src":"33820:2:30"},"nativeSrc":"33820:22:30","nodeType":"YulFunctionCall","src":"33820:22:30"}],"functionName":{"name":"or","nativeSrc":"33773:2:30","nodeType":"YulIdentifier","src":"33773:2:30"},"nativeSrc":"33773:83:30","nodeType":"YulFunctionCall","src":"33773:83:30"}],"functionName":{"name":"iszero","nativeSrc":"33753:6:30","nodeType":"YulIdentifier","src":"33753:6:30"},"nativeSrc":"33753:113:30","nodeType":"YulFunctionCall","src":"33753:113:30"},"nativeSrc":"33750:139:30","nodeType":"YulIf","src":"33750:139:30"}]},"name":"checked_mul_t_uint256","nativeSrc":"33486:410:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"33517:1:30","nodeType":"YulTypedName","src":"33517:1:30","type":""},{"name":"y","nativeSrc":"33520:1:30","nodeType":"YulTypedName","src":"33520:1:30","type":""}],"returnVariables":[{"name":"product","nativeSrc":"33526:7:30","nodeType":"YulTypedName","src":"33526:7:30","type":""}],"src":"33486:410:30"},{"body":{"nativeSrc":"33930:152:30","nodeType":"YulBlock","src":"33930:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"33947:1:30","nodeType":"YulLiteral","src":"33947:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"33950:77:30","nodeType":"YulLiteral","src":"33950:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"33940:6:30","nodeType":"YulIdentifier","src":"33940:6:30"},"nativeSrc":"33940:88:30","nodeType":"YulFunctionCall","src":"33940:88:30"},"nativeSrc":"33940:88:30","nodeType":"YulExpressionStatement","src":"33940:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"34044:1:30","nodeType":"YulLiteral","src":"34044:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"34047:4:30","nodeType":"YulLiteral","src":"34047:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"34037:6:30","nodeType":"YulIdentifier","src":"34037:6:30"},"nativeSrc":"34037:15:30","nodeType":"YulFunctionCall","src":"34037:15:30"},"nativeSrc":"34037:15:30","nodeType":"YulExpressionStatement","src":"34037:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"34068:1:30","nodeType":"YulLiteral","src":"34068:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"34071:4:30","nodeType":"YulLiteral","src":"34071:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"34061:6:30","nodeType":"YulIdentifier","src":"34061:6:30"},"nativeSrc":"34061:15:30","nodeType":"YulFunctionCall","src":"34061:15:30"},"nativeSrc":"34061:15:30","nodeType":"YulExpressionStatement","src":"34061:15:30"}]},"name":"panic_error_0x12","nativeSrc":"33902:180:30","nodeType":"YulFunctionDefinition","src":"33902:180:30"},{"body":{"nativeSrc":"34130:143:30","nodeType":"YulBlock","src":"34130:143:30","statements":[{"nativeSrc":"34140:25:30","nodeType":"YulAssignment","src":"34140:25:30","value":{"arguments":[{"name":"x","nativeSrc":"34163:1:30","nodeType":"YulIdentifier","src":"34163:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"34145:17:30","nodeType":"YulIdentifier","src":"34145:17:30"},"nativeSrc":"34145:20:30","nodeType":"YulFunctionCall","src":"34145:20:30"},"variableNames":[{"name":"x","nativeSrc":"34140:1:30","nodeType":"YulIdentifier","src":"34140:1:30"}]},{"nativeSrc":"34174:25:30","nodeType":"YulAssignment","src":"34174:25:30","value":{"arguments":[{"name":"y","nativeSrc":"34197:1:30","nodeType":"YulIdentifier","src":"34197:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"34179:17:30","nodeType":"YulIdentifier","src":"34179:17:30"},"nativeSrc":"34179:20:30","nodeType":"YulFunctionCall","src":"34179:20:30"},"variableNames":[{"name":"y","nativeSrc":"34174:1:30","nodeType":"YulIdentifier","src":"34174:1:30"}]},{"body":{"nativeSrc":"34221:22:30","nodeType":"YulBlock","src":"34221:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"34223:16:30","nodeType":"YulIdentifier","src":"34223:16:30"},"nativeSrc":"34223:18:30","nodeType":"YulFunctionCall","src":"34223:18:30"},"nativeSrc":"34223:18:30","nodeType":"YulExpressionStatement","src":"34223:18:30"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"34218:1:30","nodeType":"YulIdentifier","src":"34218:1:30"}],"functionName":{"name":"iszero","nativeSrc":"34211:6:30","nodeType":"YulIdentifier","src":"34211:6:30"},"nativeSrc":"34211:9:30","nodeType":"YulFunctionCall","src":"34211:9:30"},"nativeSrc":"34208:35:30","nodeType":"YulIf","src":"34208:35:30"},{"nativeSrc":"34253:14:30","nodeType":"YulAssignment","src":"34253:14:30","value":{"arguments":[{"name":"x","nativeSrc":"34262:1:30","nodeType":"YulIdentifier","src":"34262:1:30"},{"name":"y","nativeSrc":"34265:1:30","nodeType":"YulIdentifier","src":"34265:1:30"}],"functionName":{"name":"div","nativeSrc":"34258:3:30","nodeType":"YulIdentifier","src":"34258:3:30"},"nativeSrc":"34258:9:30","nodeType":"YulFunctionCall","src":"34258:9:30"},"variableNames":[{"name":"r","nativeSrc":"34253:1:30","nodeType":"YulIdentifier","src":"34253:1:30"}]}]},"name":"checked_div_t_uint256","nativeSrc":"34088:185:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"34119:1:30","nodeType":"YulTypedName","src":"34119:1:30","type":""},{"name":"y","nativeSrc":"34122:1:30","nodeType":"YulTypedName","src":"34122:1:30","type":""}],"returnVariables":[{"name":"r","nativeSrc":"34128:1:30","nodeType":"YulTypedName","src":"34128:1:30","type":""}],"src":"34088:185:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Address not found in \")\n\n        mstore(add(memPtr, 32), \"the exemptions\")\n\n    }\n\n    function abi_encode_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_816d9cb8eb261e9614c0216dcc1bed18362a8c49b8ae6d2d223a09574ff3127a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Tax percentage must b\")\n\n        mstore(add(memPtr, 32), \"e between 0 and 100 basis points\")\n\n        mstore(add(memPtr, 64), \" (max 1%).\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 74)\n        store_literal_in_memory_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8a3d25ec62dced24f9ae212fcf590abf7681f50b29cd24b8190da3a834b2b7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: New tax percentage mu\")\n\n        mstore(add(memPtr, 32), \"st be different from the current\")\n\n        mstore(add(memPtr, 64), \" value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 71)\n        store_literal_in_memory_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b55206b491c5b59e686665c86f3a29b8cb87d8a9ba6802f75ae3579e3d7dc78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354(memPtr) {\n\n        mstore(add(memPtr, 0), \"NewTax\")\n\n    }\n\n    function abi_encode_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354(pos)\n        end := add(pos, 6)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_t_uint256__to_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_0055911e7398889aacbd5b68b9be478dedcf58084bd36ef7874ada6406291354_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Address already exist\")\n\n        mstore(add(memPtr, 32), \"s in the exemptions\")\n\n    }\n\n    function abi_encode_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1da176c3a816308ba8df1044fedb9c0bdc9fdd263ec566f873813f92431bc402_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Trading already enabl\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f36d7cca79ab7034269cf346973ad9f3abb80f0f92c27a801caf0e06ed309b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: List of allowed addre\")\n\n        mstore(add(memPtr, 32), \"sses cannot be empty.\")\n\n    }\n\n    function abi_encode_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21451e533ecfbb637aa45efce5a1d88cdc8187f8ea7c41a71a3e29562e70e55f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: trading already enabl\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebb934b3ff98aec34d3f40882dba9b6edc9e8c2ddf4d005701a5d8fc96d75816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61(memPtr) {\n\n        mstore(add(memPtr, 0), \"EnableTrading\")\n\n    }\n\n    function abi_encode_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 13)\n        store_literal_in_memory_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61(pos)\n        end := add(pos, 13)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_645b50e7810d1a66dc807147b59160efb33194e2fba49831b791e0a8fdb3db61_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"TaxWallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7(pos)\n        end := add(pos, 9)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_4b9bbf13c7030aa6b3be15cc0202a1c636dee0819056a5c6569635235d8ed2c7_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: You have already appr\")\n\n        mstore(add(memPtr, 32), \"oved this transaction.\")\n\n    }\n\n    function abi_encode_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_629480c6c2323902fa4175a4826869fc587ee99eee4012187e028944d01cc2f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin: Trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e4d0dd5f273c74addef1c99bd85547262c4a87fb87dfaaa926d6a4d24a7ae9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3400":[{"length":32,"start":6178}],"3402":[{"length":32,"start":6137}],"3404":[{"length":32,"start":6051}],"3406":[{"length":32,"start":8283}],"3408":[{"length":32,"start":8316}],"3411":[{"length":32,"start":6940}],"3414":[{"length":32,"start":6999}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a9059cbb116100a2578063d547741f11610071578063d547741f14610586578063dd62ed3e146105a2578063ea414b28146105d2578063ec87621c146105ee576101e5565b8063a9059cbb14610500578063ae7b6d1614610530578063ca40f1c41461054e578063d505accf1461056a576101e5565b80638a8c523c116100de5780638a8c523c1461048a57806391d148541461049457806395d89b41146104c4578063a217fddf146104e2576101e5565b806370a08231146103ea5780637ac931191461041a5780637ecebe001461043657806384b0196e14610466576101e5565b80632dc0562d1161018757806336568abe1161015657806336568abe146103785780634ada218b14610394578063699abb3c146103b2578063705931fa146103ce576101e5565b80632dc0562d146103025780632f2ff15d14610320578063313ce5671461033c5780633644e5151461035a576101e5565b80630ed9cc4c116101c35780630ed9cc4c1461026857806318160ddd1461028457806323b872dd146102a2578063248a9ca3146102d2576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063095ea7b314610238575b600080fd5b61020460048036038101906101ff9190612a10565b61060c565b6040516102119190612a58565b60405180910390f35b610222610686565b60405161022f9190612b03565b60405180910390f35b610252600480360381019061024d9190612bb9565b610718565b60405161025f9190612a58565b60405180910390f35b610282600480360381019061027d9190612bf9565b61073b565b005b61028c61080b565b6040516102999190612c35565b60405180910390f35b6102bc60048036038101906102b79190612c50565b610815565b6040516102c99190612a58565b60405180910390f35b6102ec60048036038101906102e79190612cd9565b610844565b6040516102f99190612d15565b60405180910390f35b61030a610864565b6040516103179190612d3f565b60405180910390f35b61033a60048036038101906103359190612d5a565b61088a565b005b6103446108ac565b6040516103519190612db6565b60405180910390f35b6103626108b5565b60405161036f9190612d15565b60405180910390f35b610392600480360381019061038d9190612d5a565b6108c4565b005b61039c61093f565b6040516103a99190612a58565b60405180910390f35b6103cc60048036038101906103c79190612dd1565b610952565b005b6103e860048036038101906103e39190612bf9565b610ab1565b005b61040460048036038101906103ff9190612bf9565b610b81565b6040516104119190612c35565b60405180910390f35b610434600480360381019061042f9190612e63565b610bc9565b005b610450600480360381019061044b9190612bf9565b610ce6565b60405161045d9190612c35565b60405180910390f35b61046e610cf8565b6040516104819796959493929190612fa9565b60405180910390f35b610492610da2565b005b6104ae60048036038101906104a99190612d5a565b610eb8565b6040516104bb9190612a58565b60405180910390f35b6104cc610f23565b6040516104d99190612b03565b60405180910390f35b6104ea610fb5565b6040516104f79190612d15565b60405180910390f35b61051a60048036038101906105159190612bb9565b610fbc565b6040516105279190612a58565b60405180910390f35b610538610fdf565b6040516105459190612c35565b60405180910390f35b61056860048036038101906105639190612e63565b610fe5565b005b610584600480360381019061057f9190613059565b611102565b005b6105a0600480360381019061059b9190612d5a565b61124a565b005b6105bc60048036038101906105b791906130fb565b61126c565b6040516105c99190612c35565b60405180910390f35b6105ec60048036038101906105e79190612bf9565b6112f3565b005b6105f6611439565b6040516106039190612d15565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061067f575061067e8261145d565b5b9050919050565b6060600380546106959061316a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c19061316a565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b5050505050905090565b6000806107236114c7565b90506107308185856114cf565b600191505092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610765816114e1565b61077982600d6114f590919063ffffffff16565b6107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af9061320d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516107ff9190612a58565b60405180910390a25050565b6000600254905090565b6000806108206114c7565b905061082d858285611525565b6108388585856115b9565b60019150509392505050565b600060086000838152602001908152602001600020600101549050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61089382610844565b61089c816114e1565b6108a683836116ad565b50505050565b60006012905090565b60006108bf61179f565b905090565b6108cc6114c7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610930576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093a8282611856565b505050565b600a60149054906101000a900460ff1681565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861097c816114e1565b6000821015801561098e575060648211155b6109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c4906132c5565b60405180910390fd5b81600f5403610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a089061337d565b60405180910390fd5b600082604051602001610a249190613415565b604051602081830303815290604052805190602001209050610a4581611949565b6003601060008381526020019081526020016000206000015410610aac576000600f54905083600f819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a58185604051610aa292919061343b565b60405180910390a1505b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610adb816114e1565b610aef82600d611a9a90919063ffffffff16565b610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b25906134d6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d6001604051610b759190612a58565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610bf3816114e1565b600a60149054906101000a900460ff1615610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90613568565b60405180910390fd5b60008383905003610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c80906135fa565b60405180910390fd5b60005b83839050811015610ce057610cd2848483818110610cad57610cac61361a565b5b9050602002016020810190610cc29190612bf9565b600b6114f590919063ffffffff16565b508080600101915050610c8c565b50505050565b6000610cf182611aca565b9050919050565b600060608060008060006060610d0c611b13565b610d14611b4e565b46306000801b600067ffffffffffffffff811115610d3557610d34613649565b5b604051908082528060200260200182016040528015610d635781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610dcc816114e1565b600a60149054906101000a900460ff1615610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e13906136ea565b60405180910390fd5b6000604051602001610e2d90613756565b604051602081830303815290604052805190602001209050610e4e81611949565b6003601060008381526020019081526020016000206000015410610eb4576001600a60146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a15b5050565b60006008600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610f329061316a565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5e9061316a565b8015610fab5780601f10610f8057610100808354040283529160200191610fab565b820191906000526020600020905b815481529060010190602001808311610f8e57829003601f168201915b5050505050905090565b6000801b81565b600080610fc76114c7565b9050610fd48185856115b9565b600191505092915050565b600f5481565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861100f816114e1565b600a60149054906101000a900460ff161561105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690613568565b60405180910390fd5b600083839050036110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c906135fa565b60405180910390fd5b60005b838390508110156110fc576110ee8484838181106110c9576110c861361a565b5b90506020020160208101906110de9190612bf9565b600b611a9a90919063ffffffff16565b5080806001019150506110a8565b50505050565b8342111561114757836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161113e9190612c35565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886111768c611b89565b8960405160200161118c9695949392919061376b565b60405160208183030381529060405280519060200120905060006111af82611be0565b905060006111bf82878787611bfa565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461123357808a6040517f4b800e4600000000000000000000000000000000000000000000000000000000815260040161122a9291906137cc565b60405180910390fd5b61123e8a8a8a6114cf565b50505050505050505050565b61125382610844565b61125c816114e1565b6112668383611856565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861131d816114e1565b6000826040516020016113309190613889565b60405160208183030381529060405280519060200120905061135181611949565b6003601060008381526020019081526020016000206000015410611434576000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0a3568000da48cc6e5e2c8e7a94d1bfa3607d1734c7dbd7b04ac9d77316b471a81600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161142a9291906137cc565b60405180910390a1505b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6114dc8383836001611c2a565b505050565b6114f2816114ed6114c7565b611e01565b50565b600061151d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e52565b905092915050565b6000611531848461126c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115b357818110156115a3578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161159a939291906138af565b60405180910390fd5b6115b284848484036000611c2a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361162b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116229190612d3f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361169d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116949190612d3f565b60405180910390fd5b6116a8838383611f66565b505050565b60006116b98383610eb8565b6117945760016008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506117316114c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611799565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561181b57507f000000000000000000000000000000000000000000000000000000000000000046145b15611848577f00000000000000000000000000000000000000000000000000000000000000009050611853565b611850612036565b90505b90565b60006118628383610eb8565b1561193e5760006008600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118db6114c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611943565b600090505b92915050565b611952816120cc565b6010600082815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156119f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ea90613958565b60405180910390fd5b600060106000838152602001908152602001600020905060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001816000016000828254611a7991906139a7565b92505081905550610e1042611a8e91906139a7565b81600101819055505050565b6000611ac2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612255565b905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060611b4960057f00000000000000000000000000000000000000000000000000000000000000006122c590919063ffffffff16565b905090565b6060611b8460067f00000000000000000000000000000000000000000000000000000000000000006122c590919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000611bf3611bed61179f565b83612375565b9050919050565b600080600080611c0c888888886123b6565b925092509250611c1c82826124aa565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c9c5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c939190612d3f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d0e5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d059190612d3f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611dfb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611df29190612c35565b60405180910390a35b50505050565b611e0b8282610eb8565b611e4e5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611e459291906139db565b60405180910390fd5b5050565b60008083600101600084815260200190815260200160002054905060008114611f5a576000600182611e849190613a04565b9050600060018660000180549050611e9c9190613a04565b9050808214611f0b576000866000018281548110611ebd57611ebc61361a565b5b9060005260206000200154905080876000018481548110611ee157611ee061361a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611f1f57611f1e613a38565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611f60565b60009150505b92915050565b600a60149054906101000a900460ff16611fce57611f8e83600b61260e90919063ffffffff16565b611fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc490613ab3565b60405180910390fd5b5b6000611fdb84848461263e565b905060008183611feb9190613a04565b905060008211156120245761202385600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846126a2565b5b61202f8585836126a2565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016120b1959493929190613ad3565b60405160208183030381529060405280519060200120905090565b6000601060008381526020019081526020016000209050600081600101541180156120fa5750806001015442115b15612251576000816000018190555060008160010181905550806002016000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905580600201600073bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558060020160007314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b5050565b600061226183836128c7565b6122ba5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506122bf565b600090505b92915050565b606060ff60001b83146122e2576122db836128ea565b905061236f565b8180546122ee9061316a565b80601f016020809104026020016040519081016040528092919081815260200182805461231a9061316a565b80156123675780601f1061233c57610100808354040283529160200191612367565b820191906000526020600020905b81548152906001019060200180831161234a57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156123f65760006003859250925092506124a0565b60006001888888886040516000815260200160405260405161241b9493929190613b26565b6020604051602081039080840390855afa15801561243d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361249157600060016000801b935093509350506124a0565b8060008060001b935093509350505b9450945094915050565b600060038111156124be576124bd613b6b565b5b8260038111156124d1576124d0613b6b565b5b031561260a57600160038111156124eb576124ea613b6b565b5b8260038111156124fe576124fd613b6b565b5b03612535576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561254957612548613b6b565b5b82600381111561255c5761255b613b6b565b5b036125a1578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016125989190612c35565b60405180910390fd5b6003808111156125b4576125b3613b6b565b5b8260038111156125c7576125c6613b6b565b5b0361260957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016126009190612d15565b60405180910390fd5b5b5050565b6000612636836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6128c7565b905092915050565b600061265484600d61260e90919063ffffffff16565b8061266f575061266e83600d61260e90919063ffffffff16565b5b1561267d576000905061269b565b612710600f548361268e9190613b9a565b6126989190613c0b565b90505b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126f45780600260008282546126e891906139a7565b925050819055506127c7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612780578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612777939291906138af565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612810578060026000828254039250508190555061285d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128ba9190612c35565b60405180910390a3505050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006128f78361295e565b90506000602067ffffffffffffffff81111561291657612915613649565b5b6040519080825280601f01601f1916602001820160405280156129485781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156129a5576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6129ed816129b8565b81146129f857600080fd5b50565b600081359050612a0a816129e4565b92915050565b600060208284031215612a2657612a256129ae565b5b6000612a34848285016129fb565b91505092915050565b60008115159050919050565b612a5281612a3d565b82525050565b6000602082019050612a6d6000830184612a49565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612aad578082015181840152602081019050612a92565b60008484015250505050565b6000601f19601f8301169050919050565b6000612ad582612a73565b612adf8185612a7e565b9350612aef818560208601612a8f565b612af881612ab9565b840191505092915050565b60006020820190508181036000830152612b1d8184612aca565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b5082612b25565b9050919050565b612b6081612b45565b8114612b6b57600080fd5b50565b600081359050612b7d81612b57565b92915050565b6000819050919050565b612b9681612b83565b8114612ba157600080fd5b50565b600081359050612bb381612b8d565b92915050565b60008060408385031215612bd057612bcf6129ae565b5b6000612bde85828601612b6e565b9250506020612bef85828601612ba4565b9150509250929050565b600060208284031215612c0f57612c0e6129ae565b5b6000612c1d84828501612b6e565b91505092915050565b612c2f81612b83565b82525050565b6000602082019050612c4a6000830184612c26565b92915050565b600080600060608486031215612c6957612c686129ae565b5b6000612c7786828701612b6e565b9350506020612c8886828701612b6e565b9250506040612c9986828701612ba4565b9150509250925092565b6000819050919050565b612cb681612ca3565b8114612cc157600080fd5b50565b600081359050612cd381612cad565b92915050565b600060208284031215612cef57612cee6129ae565b5b6000612cfd84828501612cc4565b91505092915050565b612d0f81612ca3565b82525050565b6000602082019050612d2a6000830184612d06565b92915050565b612d3981612b45565b82525050565b6000602082019050612d546000830184612d30565b92915050565b60008060408385031215612d7157612d706129ae565b5b6000612d7f85828601612cc4565b9250506020612d9085828601612b6e565b9150509250929050565b600060ff82169050919050565b612db081612d9a565b82525050565b6000602082019050612dcb6000830184612da7565b92915050565b600060208284031215612de757612de66129ae565b5b6000612df584828501612ba4565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612e2357612e22612dfe565b5b8235905067ffffffffffffffff811115612e4057612e3f612e03565b5b602083019150836020820283011115612e5c57612e5b612e08565b5b9250929050565b60008060208385031215612e7a57612e796129ae565b5b600083013567ffffffffffffffff811115612e9857612e976129b3565b5b612ea485828601612e0d565b92509250509250929050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612ee581612eb0565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612f2081612b83565b82525050565b6000612f328383612f17565b60208301905092915050565b6000602082019050919050565b6000612f5682612eeb565b612f608185612ef6565b9350612f6b83612f07565b8060005b83811015612f9c578151612f838882612f26565b9750612f8e83612f3e565b925050600181019050612f6f565b5085935050505092915050565b600060e082019050612fbe600083018a612edc565b8181036020830152612fd08189612aca565b90508181036040830152612fe48188612aca565b9050612ff36060830187612c26565b6130006080830186612d30565b61300d60a0830185612d06565b81810360c083015261301f8184612f4b565b905098975050505050505050565b61303681612d9a565b811461304157600080fd5b50565b6000813590506130538161302d565b92915050565b600080600080600080600060e0888a031215613078576130776129ae565b5b60006130868a828b01612b6e565b97505060206130978a828b01612b6e565b96505060406130a88a828b01612ba4565b95505060606130b98a828b01612ba4565b94505060806130ca8a828b01613044565b93505060a06130db8a828b01612cc4565b92505060c06130ec8a828b01612cc4565b91505092959891949750929550565b60008060408385031215613112576131116129ae565b5b600061312085828601612b6e565b925050602061313185828601612b6e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061318257607f821691505b6020821081036131955761319461313b565b5b50919050565b7f4172617261436f696e3a2041646472657373206e6f7420666f756e6420696e2060008201527f746865206578656d7074696f6e73000000000000000000000000000000000000602082015250565b60006131f7602e83612a7e565b91506132028261319b565b604082019050919050565b60006020820190508181036000830152613226816131ea565b9050919050565b7f4172617261436f696e3a205461782070657263656e74616765206d757374206260008201527f65206265747765656e203020616e642031303020626173697320706f696e747360208201527f20286d6178203125292e00000000000000000000000000000000000000000000604082015250565b60006132af604a83612a7e565b91506132ba8261322d565b606082019050919050565b600060208201905081810360008301526132de816132a2565b9050919050565b7f4172617261436f696e3a204e6577207461782070657263656e74616765206d7560008201527f737420626520646966666572656e742066726f6d207468652063757272656e7460208201527f2076616c75652e00000000000000000000000000000000000000000000000000604082015250565b6000613367604783612a7e565b9150613372826132e5565b606082019050919050565b600060208201905081810360008301526133968161335a565b9050919050565b600081905092915050565b7f4e65775461780000000000000000000000000000000000000000000000000000600082015250565b60006133de60068361339d565b91506133e9826133a8565b600682019050919050565b6000819050919050565b61340f61340a82612b83565b6133f4565b82525050565b6000613420826133d1565b915061342c82846133fe565b60208201915081905092915050565b60006040820190506134506000830185612c26565b61345d6020830184612c26565b9392505050565b7f4172617261436f696e3a204164647265737320616c726561647920657869737460008201527f7320696e20746865206578656d7074696f6e7300000000000000000000000000602082015250565b60006134c0603383612a7e565b91506134cb82613464565b604082019050919050565b600060208201905081810360008301526134ef816134b3565b9050919050565b7f4172617261436f696e3a2054726164696e6720616c726561647920656e61626c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000613552602283612a7e565b915061355d826134f6565b604082019050919050565b6000602082019050818103600083015261358181613545565b9050919050565b7f4172617261436f696e3a204c697374206f6620616c6c6f77656420616464726560008201527f737365732063616e6e6f7420626520656d7074792e0000000000000000000000602082015250565b60006135e4603583612a7e565b91506135ef82613588565b604082019050919050565b60006020820190508181036000830152613613816135d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4172617261436f696e3a2074726164696e6720616c726561647920656e61626c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006136d4602283612a7e565b91506136df82613678565b604082019050919050565b60006020820190508181036000830152613703816136c7565b9050919050565b7f456e61626c6554726164696e6700000000000000000000000000000000000000600082015250565b6000613740600d8361339d565b915061374b8261370a565b600d82019050919050565b600061376182613733565b9150819050919050565b600060c0820190506137806000830189612d06565b61378d6020830188612d30565b61379a6040830187612d30565b6137a76060830186612c26565b6137b46080830185612c26565b6137c160a0830184612c26565b979650505050505050565b60006040820190506137e16000830185612d30565b6137ee6020830184612d30565b9392505050565b7f54617857616c6c65740000000000000000000000000000000000000000000000600082015250565b600061382b60098361339d565b9150613836826137f5565b600982019050919050565b60008160601b9050919050565b600061385982613841565b9050919050565b600061386b8261384e565b9050919050565b61388361387e82612b45565b613860565b82525050565b60006138948261381e565b91506138a08284613872565b60148201915081905092915050565b60006060820190506138c46000830186612d30565b6138d16020830185612c26565b6138de6040830184612c26565b949350505050565b7f4172617261436f696e3a20596f75206861766520616c7265616479206170707260008201527f6f7665642074686973207472616e73616374696f6e2e00000000000000000000602082015250565b6000613942603683612a7e565b915061394d826138e6565b604082019050919050565b6000602082019050818103600083015261397181613935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006139b282612b83565b91506139bd83612b83565b92508282019050808211156139d5576139d4613978565b5b92915050565b60006040820190506139f06000830185612d30565b6139fd6020830184612d06565b9392505050565b6000613a0f82612b83565b9150613a1a83612b83565b9250828203905081811115613a3257613a31613978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4172617261436f696e3a2054726164652069732064697361626c656400000000600082015250565b6000613a9d601c83612a7e565b9150613aa882613a67565b602082019050919050565b60006020820190508181036000830152613acc81613a90565b9050919050565b600060a082019050613ae86000830188612d06565b613af56020830187612d06565b613b026040830186612d06565b613b0f6060830185612c26565b613b1c6080830184612d30565b9695505050505050565b6000608082019050613b3b6000830187612d06565b613b486020830186612da7565b613b556040830185612d06565b613b626060830184612d06565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000613ba582612b83565b9150613bb083612b83565b9250828202613bbe81612b83565b91508282048414831517613bd557613bd4613978565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c1682612b83565b9150613c2183612b83565b925082613c3157613c30613bdc565b5b82820490509291505056fea26469706673582212208c443577574bdf96ba96c71e9ec504b3819cf3052fbbe04dd667128fe9738cdf64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x5EE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x56A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4E2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x7AC93119 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x466 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2DC0562D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0x3CE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x35A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2D2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2A10 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH2 0xDA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x3059 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH2 0x12F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x67F JUMPI POP PUSH2 0x67E DUP3 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x723 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x730 DUP2 DUP6 DUP6 PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x765 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x779 DUP3 PUSH1 0xD PUSH2 0x14F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x820 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x82D DUP6 DUP3 DUP6 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x838 DUP6 DUP6 DUP6 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x893 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x89C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 PUSH2 0x16AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8CC PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP3 DUP3 PUSH2 0x1856 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x97C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI POP PUSH1 0x64 DUP3 GT ISZERO JUMPDEST PUSH2 0x9CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP1 PUSH2 0x32C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xF SLOAD SUB PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA08 SWAP1 PUSH2 0x337D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA45 DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0xAAC JUMPI PUSH1 0x0 PUSH1 0xF SLOAD SWAP1 POP DUP4 PUSH1 0xF DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0xAA2 SWAP3 SWAP2 SWAP1 PUSH2 0x343B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xADB DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0xAEF DUP3 PUSH1 0xD PUSH2 0x1A9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x34D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xBF3 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCD2 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0xB PUSH2 0x14F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC8C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF1 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD0C PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0xD14 PUSH2 0x1B4E JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0x3649 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD63 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xDCC DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x36EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE2D SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xE4E DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0xEB4 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF32 SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5E SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFC7 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP PUSH2 0xFD4 DUP2 DUP6 DUP6 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x100F DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP1 PUSH2 0x3568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x10FC JUMPI PUSH2 0x10EE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1A9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1147 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1176 DUP13 PUSH2 0x1B89 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x376B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x11AF DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BF DUP3 DUP8 DUP8 DUP8 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1233 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123E DUP11 DUP11 DUP11 PUSH2 0x14CF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1253 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1266 DUP4 DUP4 PUSH2 0x1856 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x131D DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x3889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1351 DUP2 PUSH2 0x1949 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT PUSH2 0x1434 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA3568000DA48CC6E5E2C8E7A94D1BFA3607D1734C7DBD7B04AC9D77316B471A DUP2 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x142A SWAP3 SWAP2 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14DC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C2A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x14ED PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP5 DUP5 PUSH2 0x126C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15B3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B2 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A8 DUP4 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B9 DUP4 DUP4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1794 JUMPI PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1731 PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x181B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1848 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x1850 PUSH2 0x2036 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1862 DUP4 DUP4 PUSH2 0xEB8 JUMP JUMPDEST ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18DB PUSH2 0x14C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1952 DUP2 PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EA SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE10 TIMESTAMP PUSH2 0x1A8E SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B49 PUSH1 0x5 PUSH32 0x0 PUSH2 0x22C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B84 PUSH1 0x6 PUSH32 0x0 PUSH2 0x22C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF3 PUSH2 0x1BED PUSH2 0x179F JUMP JUMPDEST DUP4 PUSH2 0x2375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0C DUP9 DUP9 DUP9 DUP9 PUSH2 0x23B6 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C1C DUP3 DUP3 PUSH2 0x24AA JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C9C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C93 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1DFB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E0B DUP3 DUP3 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1E4E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E45 SWAP3 SWAP2 SWAP1 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1E84 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EBD JUMPI PUSH2 0x1EBC PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1EE1 JUMPI PUSH2 0x1EE0 PUSH2 0x361A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x3A38 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FCE JUMPI PUSH2 0x1F8E DUP4 PUSH1 0xB PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC4 SWAP1 PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FDB DUP5 DUP5 DUP5 PUSH2 0x263E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FEB SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 DUP6 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x26A2 JUMP JUMPDEST JUMPDEST PUSH2 0x202F DUP6 DUP6 DUP4 PUSH2 0x26A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x20FA JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH20 0xBCD4042DE499D14E55001CCBB24A551F3B954096 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH20 0x14DC79964DA2C08B23698B3D3CC7CA32193D9955 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2261 DUP4 DUP4 PUSH2 0x28C7 JUMP JUMPDEST PUSH2 0x22BA JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x22E2 JUMPI PUSH2 0x22DB DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP1 POP PUSH2 0x236F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x22EE SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x231A SWAP1 PUSH2 0x316A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2367 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2367 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x234A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x23F6 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x241B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x243D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2491 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x24A0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24BE JUMPI PUSH2 0x24BD PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24D1 JUMPI PUSH2 0x24D0 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x260A JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH2 0x24FD PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2535 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2549 JUMPI PUSH2 0x2548 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH2 0x255B PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25A1 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2598 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x25B4 JUMPI PUSH2 0x25B3 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25C7 JUMPI PUSH2 0x25C6 PUSH2 0x3B6B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2609 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2600 SWAP2 SWAP1 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x28C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2654 DUP5 PUSH1 0xD PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x266F JUMPI POP PUSH2 0x266E DUP4 PUSH1 0xD PUSH2 0x260E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x267D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x269B JUMP JUMPDEST PUSH2 0x2710 PUSH1 0xF SLOAD DUP4 PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3B9A JUMP JUMPDEST PUSH2 0x2698 SWAP2 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26F4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x39A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2780 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2777 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2810 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x285D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x28F7 DUP4 PUSH2 0x295E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2915 PUSH2 0x3649 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2948 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x29A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29ED DUP2 PUSH2 0x29B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x29F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0A DUP2 PUSH2 0x29E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A34 DUP5 DUP3 DUP6 ADD PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A52 DUP2 PUSH2 0x2A3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A92 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 DUP3 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x2ADF DUP2 DUP6 PUSH2 0x2A7E JUMP JUMPDEST SWAP4 POP PUSH2 0x2AEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A8F JUMP JUMPDEST PUSH2 0x2AF8 DUP2 PUSH2 0x2AB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1D DUP2 DUP5 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B50 DUP3 PUSH2 0x2B25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B60 DUP2 PUSH2 0x2B45 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B7D DUP2 PUSH2 0x2B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B96 DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BB3 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BD0 JUMPI PUSH2 0x2BCF PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BDE DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BEF DUP6 DUP3 DUP7 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C0F JUMPI PUSH2 0x2C0E PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C1D DUP5 DUP3 DUP6 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2F DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C77 DUP7 DUP3 DUP8 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C88 DUP7 DUP3 DUP8 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C99 DUP7 DUP3 DUP8 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB6 DUP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD3 DUP2 PUSH2 0x2CAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CEF JUMPI PUSH2 0x2CEE PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CFD DUP5 DUP3 DUP6 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D0F DUP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D39 DUP2 PUSH2 0x2B45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D71 JUMPI PUSH2 0x2D70 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7F DUP6 DUP3 DUP7 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D90 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB0 DUP2 PUSH2 0x2D9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE7 JUMPI PUSH2 0x2DE6 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DF5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x2DFE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E40 JUMPI PUSH2 0x2E3F PUSH2 0x2E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E5C JUMPI PUSH2 0x2E5B PUSH2 0x2E08 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E7A JUMPI PUSH2 0x2E79 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E98 JUMPI PUSH2 0x2E97 PUSH2 0x29B3 JUMP JUMPDEST JUMPDEST PUSH2 0x2EA4 DUP6 DUP3 DUP7 ADD PUSH2 0x2E0D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE5 DUP2 PUSH2 0x2EB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F20 DUP2 PUSH2 0x2B83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP4 DUP4 PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F56 DUP3 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x2F60 DUP2 DUP6 PUSH2 0x2EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F6B DUP4 PUSH2 0x2F07 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F9C JUMPI DUP2 MLOAD PUSH2 0x2F83 DUP9 DUP3 PUSH2 0x2F26 JUMP JUMPDEST SWAP8 POP PUSH2 0x2F8E DUP4 PUSH2 0x2F3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F6F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2FBE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2EDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FD0 DUP2 DUP10 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FE4 DUP2 DUP9 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 POP PUSH2 0x2FF3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x3000 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x300D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2D06 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x301F DUP2 DUP5 PUSH2 0x2F4B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3036 DUP2 PUSH2 0x2D9A JUMP JUMPDEST DUP2 EQ PUSH2 0x3041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3053 DUP2 PUSH2 0x302D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3078 JUMPI PUSH2 0x3077 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3086 DUP11 DUP3 DUP12 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3097 DUP11 DUP3 DUP12 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30A8 DUP11 DUP3 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x30B9 DUP11 DUP3 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x30CA DUP11 DUP3 DUP12 ADD PUSH2 0x3044 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x30DB DUP11 DUP3 DUP12 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x30EC DUP11 DUP3 DUP12 ADD PUSH2 0x2CC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3112 JUMPI PUSH2 0x3111 PUSH2 0x29AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3120 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3131 DUP6 DUP3 DUP7 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3182 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3195 JUMPI PUSH2 0x3194 PUSH2 0x313B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A2041646472657373206E6F7420666F756E6420696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746865206578656D7074696F6E73000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F7 PUSH1 0x2E DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3202 DUP3 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x31EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A205461782070657263656E74616765206D7573742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65206265747765656E203020616E642031303020626173697320706F696E7473 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20286D6178203125292E00000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AF PUSH1 0x4A DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x32BA DUP3 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32DE DUP2 PUSH2 0x32A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204E6577207461782070657263656E74616765206D75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x737420626520646966666572656E742066726F6D207468652063757272656E74 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2076616C75652E00000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3367 PUSH1 0x47 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3372 DUP3 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3396 DUP2 PUSH2 0x335A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E65775461780000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DE PUSH1 0x6 DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x33E9 DUP3 PUSH2 0x33A8 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F PUSH2 0x340A DUP3 PUSH2 0x2B83 JUMP JUMPDEST PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3420 DUP3 PUSH2 0x33D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x342C DUP3 DUP5 PUSH2 0x33FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3450 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x345D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204164647265737320616C7265616479206578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320696E20746865206578656D7074696F6E7300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C0 PUSH1 0x33 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x34CB DUP3 PUSH2 0x3464 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34EF DUP2 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A2054726164696E6720616C726561647920656E61626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3552 PUSH1 0x22 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x355D DUP3 PUSH2 0x34F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3581 DUP2 PUSH2 0x3545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A204C697374206F6620616C6C6F776564206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x737365732063616E6E6F7420626520656D7074792E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E4 PUSH1 0x35 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x35EF DUP3 PUSH2 0x3588 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3613 DUP2 PUSH2 0x35D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E3A2074726164696E6720616C726561647920656E61626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D4 PUSH1 0x22 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x36DF DUP3 PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3703 DUP2 PUSH2 0x36C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E61626C6554726164696E6700000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3740 PUSH1 0xD DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x374B DUP3 PUSH2 0x370A JUMP JUMPDEST PUSH1 0xD DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3761 DUP3 PUSH2 0x3733 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3780 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x378D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x379A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x37A7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37B4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x37C1 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x37E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x37EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54617857616C6C65740000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382B PUSH1 0x9 DUP4 PUSH2 0x339D JUMP JUMPDEST SWAP2 POP PUSH2 0x3836 DUP3 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP3 PUSH2 0x3841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x386B DUP3 PUSH2 0x384E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3883 PUSH2 0x387E DUP3 PUSH2 0x2B45 JUMP JUMPDEST PUSH2 0x3860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3894 DUP3 PUSH2 0x381E JUMP JUMPDEST SWAP2 POP PUSH2 0x38A0 DUP3 DUP5 PUSH2 0x3872 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x38C4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x38D1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x38DE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E3A20596F75206861766520616C72656164792061707072 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7665642074686973207472616E73616374696F6E2E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3942 PUSH1 0x36 DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x394D DUP3 PUSH2 0x38E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3971 DUP2 PUSH2 0x3935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39B2 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x39BD DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39D5 JUMPI PUSH2 0x39D4 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x39FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0F DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A1A DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A32 JUMPI PUSH2 0x3A31 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E3A2054726164652069732064697361626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9D PUSH1 0x1C DUP4 PUSH2 0x2A7E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA8 DUP3 PUSH2 0x3A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACC DUP2 PUSH2 0x3A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3AE8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3AF5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B02 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B0F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST PUSH2 0x3B1C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2D30 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B3B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B48 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2DA7 JUMP JUMPDEST PUSH2 0x3B55 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D06 JUMP JUMPDEST PUSH2 0x3B62 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BA5 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB0 DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3BBE DUP2 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3BD5 JUMPI PUSH2 0x3BD4 PUSH2 0x3978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C16 DUP3 PUSH2 0x2B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C21 DUP4 PUSH2 0x2B83 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3C31 JUMPI PUSH2 0x3C30 PUSH2 0x3BDC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PREVRANDAO CALLDATALOAD PUSH24 0x574BDF96BA96C71E9EC504B3819CF3052FBBE04DD667128F 0xE9 PUSH20 0x8CDF64736F6C6343000818003300000000000000 ","sourceMap":"518:12502:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10021:230:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2547:69:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:26:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8122:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9714:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11080:577:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2406:143:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:19;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;7476:556:27;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3025:28:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10373:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9016:618:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;656:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:6:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;10021:230:27:-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;10113:27:27::1;10130:9;10113;:16;;:27;;;;:::i;:::-;10105:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;10227:9;10207:37;;;10238:5;10207:37;;;;;;:::i;:::-;;;;;;;;10021:230:::0;;:::o;3144:97:6:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;2547:69:27:-;;;;;;;;;;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:6:-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:8:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2688:26:27:-;;;;;;;;;;;;;:::o;8122:797::-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;8304:1:27::1;8284:16;:21;;:48;;;;;8329:3;8309:16;:23;;8284:48;8276:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;8446:16;8429:13;;:33:::0;8421:117:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8557:14;8611:16;8584:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;8574:55;;;;;;8557:72;;8639:24;8656:6;8639:16;:24::i;:::-;3962:1;8678:10;:18;8689:6;8678:18;;;;;;;;;;;:24;;;:46;8674:239;;8740:24;8767:13;;8740:40;;8810:16;8794:13;:32;;;;8846:56;8867:16;8885;8846:56;;;;;;;:::i;:::-;;;;;;;;8726:187;8674:239;8204:715;8122:797:::0;;:::o;9714:236::-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;9803:24:27::1;9817:9;9803;:13;;:24;;;;:::i;:::-;9795:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;9919:9;9899:36;;;9930:4;9899:36;;;;;;:::i;:::-;;;;;;;;9714:236:::0;;:::o;3299:116:6:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;11080:577:27:-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;11204:14:27::1;;;;;;;;;;;11203:15;11195:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;11338:1;11311:16;;:23;;:28:::0;11303:94:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11540:9;11535:116;11559:16;;:23;;11555:1;:27;11535:116;;;11603:37;11620:16;;11637:1;11620:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;11603:9;:16;;:37;;;;:::i;:::-;;11584:3;;;;;;;11535:116;;;;11080:577:::0;;;:::o;2406:143:8:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:19:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;7476:556:27:-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;7550:14:27::1;;;;;;;;;;;7549:15;7541:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7656:14;7683:33;;;;;;;:::i;:::-;;;;;;;;;;;;;7673:44;;;;;;7656:61;;7779:24;7796:6;7779:16;:24::i;:::-;3962:1;7826:10;:18;7837:6;7826:18;;;;;;;;;;;:24;;;:46;7822:203;;7905:4;7888:14;;:21;;;;;;;;;;;;;;;;;;7954:16;;;;;;;;;;7822:203;7531:501;7476:556:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:6:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:6:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3025:28:27:-;;;;:::o;10373:571::-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;10494:14:27::1;;;;;;;;;;;10493:15;10485:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;10628:1;10601:16;;:23;;:28:::0;10593:94:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;10830:9;10825:113;10849:16;;:23;;10845:1;:27;10825:113;;;10893:34;10907:16;;10924:1;10907:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;10893:9;:13;;:34;;;;:::i;:::-;;10874:3;;;;;;;10825:113;;;;10373:571:::0;;;:::o;1680:672:8:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:6:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;9016:618:27:-;695:25;2464:16:0;2475:4;2464:10;:16::i;:::-;9104:14:27::1;9161:16;9131:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;9121:58;;;;;;9104:75;;9241:24;9258:6;9241:16;:24::i;:::-;3962:1;9280:10;:18;9291:6;9280:18;;;;;;;;;;;:24;;;:46;9276:352;;9342:27;9372:9;;;;;;;;;;;9342:39;;9447:16;9435:9;;:28;;;;;;;;;;;;;;;;;;9517:48;9534:19;9555:9;;;;;;;;;;;9517:48;;;;;;;:::i;:::-;;;;;;;;9328:300;9276:352;9094:540;9016:618:::0;;:::o;656:64::-;695:25;656:64;:::o;762:146:21:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;8989:128:6:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;8634:156:26:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;10663:477:6:-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3845:262:19:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;6967:427:27:-;7027:31;7051:6;7027:23;:31::i;:::-;7077:10;:18;7088:6;7077:18;;;;;;;;;;;:29;;:41;7107:10;7077:41;;;;;;;;;;;;;;;;;;;;;;;;;7076:42;7068:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;7187:29;7219:10;:18;7230:6;7219:18;;;;;;;;;;;7187:50;;7281:4;7247:8;:19;;:31;7267:10;7247:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7313:1;7295:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;4020:4;7346:15;:41;;;;:::i;:::-;7324:8;:19;;:63;;;;7017:377;6967:427;:::o;8316:150:26:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;538:107:14:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:19:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:14:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:19:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:18:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:6:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2815:1368:26:-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;11731:734:27:-;11931:14;;;;;;;;;;;11926:111;;11969:24;11988:4;11969:9;:18;;:24;;;;:::i;:::-;11961:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11926:111;12118:11;12132:24;12140:4;12146:2;12150:5;12132:7;:24::i;:::-;12118:38;;12166:19;12196:3;12188:5;:11;;;;:::i;:::-;12166:33;;12292:1;12286:3;:7;12282:73;;;12309:35;12323:4;12329:9;;;;;;;;;;;12340:3;12309:13;:35::i;:::-;12282:73;12422:36;12436:4;12442:2;12446:11;12422:13;:36::i;:::-;11836:629;;11731:734;;;:::o;4113:179:19:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6461:451:27:-;6528:29;6560:10;:18;6571:6;6560:18;;;;;;;;;;;6528:50;;6614:1;6592:8;:19;;;:23;:64;;;;;6637:8;:19;;;6619:15;:37;6592:64;6588:318;;;6689:1;6672:8;:14;;:18;;;;6726:1;6704:8;:19;;:23;;;;6748:8;:19;;:35;6768:14;;;;;;;;;;;6748:35;;;;;;;;;;;;;;;;6741:42;;;;;;;;;;;6804:8;:19;;:35;2205:42;6804:35;;;;;;;;;;;;;;;;6797:42;;;;;;;;;;;6860:8;:19;;:35;2295:42;6860:35;;;;;;;;;;;;;;;;6853:42;;;;;;;;;;;6588:318;6518:394;6461:451;:::o;2241:406:26:-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;3385:267:15:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:20:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:18:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;8871:165:26:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;12561:457:27:-;12687:7;12776:30;12795:10;12776:9;:18;;:30;;;;:::i;:::-;:65;;;;12810:31;12829:11;12810:9;:18;;:31;;;;:::i;:::-;12776:65;12772:104;;;12864:1;12857:8;;;;12772:104;839:6;12980:13;;12971:6;:22;;;;:::i;:::-;:40;;;;:::i;:::-;12964:47;;12561:457;;;;;;:::o;6271:1107:6:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4264:129:26:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2078:405:15:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;88:117:30:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:329::-;4262:6;4311:2;4299:9;4290:7;4286:23;4282:32;4279:119;;;4317:79;;:::i;:::-;4279:119;4437:1;4462:53;4507:7;4498:6;4487:9;4483:22;4462:53;:::i;:::-;4452:63;;4408:117;4203:329;;;;:::o;4538:118::-;4625:24;4643:5;4625:24;:::i;:::-;4620:3;4613:37;4538:118;;:::o;4662:222::-;4755:4;4793:2;4782:9;4778:18;4770:26;;4806:71;4874:1;4863:9;4859:17;4850:6;4806:71;:::i;:::-;4662:222;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:77::-;5552:7;5581:5;5570:16;;5515:77;;;:::o;5598:122::-;5671:24;5689:5;5671:24;:::i;:::-;5664:5;5661:35;5651:63;;5710:1;5707;5700:12;5651:63;5598:122;:::o;5726:139::-;5772:5;5810:6;5797:20;5788:29;;5826:33;5853:5;5826:33;:::i;:::-;5726:139;;;;:::o;5871:329::-;5930:6;5979:2;5967:9;5958:7;5954:23;5950:32;5947:119;;;5985:79;;:::i;:::-;5947:119;6105:1;6130:53;6175:7;6166:6;6155:9;6151:22;6130:53;:::i;:::-;6120:63;;6076:117;5871:329;;;;:::o;6206:118::-;6293:24;6311:5;6293:24;:::i;:::-;6288:3;6281:37;6206:118;;:::o;6330:222::-;6423:4;6461:2;6450:9;6446:18;6438:26;;6474:71;6542:1;6531:9;6527:17;6518:6;6474:71;:::i;:::-;6330:222;;;;:::o;6558:118::-;6645:24;6663:5;6645:24;:::i;:::-;6640:3;6633:37;6558:118;;:::o;6682:222::-;6775:4;6813:2;6802:9;6798:18;6790:26;;6826:71;6894:1;6883:9;6879:17;6870:6;6826:71;:::i;:::-;6682:222;;;;:::o;6910:474::-;6978:6;6986;7035:2;7023:9;7014:7;7010:23;7006:32;7003:119;;;7041:79;;:::i;:::-;7003:119;7161:1;7186:53;7231:7;7222:6;7211:9;7207:22;7186:53;:::i;:::-;7176:63;;7132:117;7288:2;7314:53;7359:7;7350:6;7339:9;7335:22;7314:53;:::i;:::-;7304:63;;7259:118;6910:474;;;;;:::o;7390:86::-;7425:7;7465:4;7458:5;7454:16;7443:27;;7390:86;;;:::o;7482:112::-;7565:22;7581:5;7565:22;:::i;:::-;7560:3;7553:35;7482:112;;:::o;7600:214::-;7689:4;7727:2;7716:9;7712:18;7704:26;;7740:67;7804:1;7793:9;7789:17;7780:6;7740:67;:::i;:::-;7600:214;;;;:::o;7820:329::-;7879:6;7928:2;7916:9;7907:7;7903:23;7899:32;7896:119;;;7934:79;;:::i;:::-;7896:119;8054:1;8079:53;8124:7;8115:6;8104:9;8100:22;8079:53;:::i;:::-;8069:63;;8025:117;7820:329;;;;:::o;8155:117::-;8264:1;8261;8254:12;8278:117;8387:1;8384;8377:12;8401:117;8510:1;8507;8500:12;8541:568;8614:8;8624:6;8674:3;8667:4;8659:6;8655:17;8651:27;8641:122;;8682:79;;:::i;:::-;8641:122;8795:6;8782:20;8772:30;;8825:18;8817:6;8814:30;8811:117;;;8847:79;;:::i;:::-;8811:117;8961:4;8953:6;8949:17;8937:29;;9015:3;9007:4;8999:6;8995:17;8985:8;8981:32;8978:41;8975:128;;;9022:79;;:::i;:::-;8975:128;8541:568;;;;;:::o;9115:559::-;9201:6;9209;9258:2;9246:9;9237:7;9233:23;9229:32;9226:119;;;9264:79;;:::i;:::-;9226:119;9412:1;9401:9;9397:17;9384:31;9442:18;9434:6;9431:30;9428:117;;;9464:79;;:::i;:::-;9428:117;9577:80;9649:7;9640:6;9629:9;9625:22;9577:80;:::i;:::-;9559:98;;;;9355:312;9115:559;;;;;:::o;9680:149::-;9716:7;9756:66;9749:5;9745:78;9734:89;;9680:149;;;:::o;9835:115::-;9920:23;9937:5;9920:23;:::i;:::-;9915:3;9908:36;9835:115;;:::o;9956:114::-;10023:6;10057:5;10051:12;10041:22;;9956:114;;;:::o;10076:184::-;10175:11;10209:6;10204:3;10197:19;10249:4;10244:3;10240:14;10225:29;;10076:184;;;;:::o;10266:132::-;10333:4;10356:3;10348:11;;10386:4;10381:3;10377:14;10369:22;;10266:132;;;:::o;10404:108::-;10481:24;10499:5;10481:24;:::i;:::-;10476:3;10469:37;10404:108;;:::o;10518:179::-;10587:10;10608:46;10650:3;10642:6;10608:46;:::i;:::-;10686:4;10681:3;10677:14;10663:28;;10518:179;;;;:::o;10703:113::-;10773:4;10805;10800:3;10796:14;10788:22;;10703:113;;;:::o;10852:732::-;10971:3;11000:54;11048:5;11000:54;:::i;:::-;11070:86;11149:6;11144:3;11070:86;:::i;:::-;11063:93;;11180:56;11230:5;11180:56;:::i;:::-;11259:7;11290:1;11275:284;11300:6;11297:1;11294:13;11275:284;;;11376:6;11370:13;11403:63;11462:3;11447:13;11403:63;:::i;:::-;11396:70;;11489:60;11542:6;11489:60;:::i;:::-;11479:70;;11335:224;11322:1;11319;11315:9;11310:14;;11275:284;;;11279:14;11575:3;11568:10;;10976:608;;;10852:732;;;;:::o;11590:1215::-;11939:4;11977:3;11966:9;11962:19;11954:27;;11991:69;12057:1;12046:9;12042:17;12033:6;11991:69;:::i;:::-;12107:9;12101:4;12097:20;12092:2;12081:9;12077:18;12070:48;12135:78;12208:4;12199:6;12135:78;:::i;:::-;12127:86;;12260:9;12254:4;12250:20;12245:2;12234:9;12230:18;12223:48;12288:78;12361:4;12352:6;12288:78;:::i;:::-;12280:86;;12376:72;12444:2;12433:9;12429:18;12420:6;12376:72;:::i;:::-;12458:73;12526:3;12515:9;12511:19;12502:6;12458:73;:::i;:::-;12541;12609:3;12598:9;12594:19;12585:6;12541:73;:::i;:::-;12662:9;12656:4;12652:20;12646:3;12635:9;12631:19;12624:49;12690:108;12793:4;12784:6;12690:108;:::i;:::-;12682:116;;11590:1215;;;;;;;;;;:::o;12811:118::-;12882:22;12898:5;12882:22;:::i;:::-;12875:5;12872:33;12862:61;;12919:1;12916;12909:12;12862:61;12811:118;:::o;12935:135::-;12979:5;13017:6;13004:20;12995:29;;13033:31;13058:5;13033:31;:::i;:::-;12935:135;;;;:::o;13076:1199::-;13187:6;13195;13203;13211;13219;13227;13235;13284:3;13272:9;13263:7;13259:23;13255:33;13252:120;;;13291:79;;:::i;:::-;13252:120;13411:1;13436:53;13481:7;13472:6;13461:9;13457:22;13436:53;:::i;:::-;13426:63;;13382:117;13538:2;13564:53;13609:7;13600:6;13589:9;13585:22;13564:53;:::i;:::-;13554:63;;13509:118;13666:2;13692:53;13737:7;13728:6;13717:9;13713:22;13692:53;:::i;:::-;13682:63;;13637:118;13794:2;13820:53;13865:7;13856:6;13845:9;13841:22;13820:53;:::i;:::-;13810:63;;13765:118;13922:3;13949:51;13992:7;13983:6;13972:9;13968:22;13949:51;:::i;:::-;13939:61;;13893:117;14049:3;14076:53;14121:7;14112:6;14101:9;14097:22;14076:53;:::i;:::-;14066:63;;14020:119;14178:3;14205:53;14250:7;14241:6;14230:9;14226:22;14205:53;:::i;:::-;14195:63;;14149:119;13076:1199;;;;;;;;;;:::o;14281:474::-;14349:6;14357;14406:2;14394:9;14385:7;14381:23;14377:32;14374:119;;;14412:79;;:::i;:::-;14374:119;14532:1;14557:53;14602:7;14593:6;14582:9;14578:22;14557:53;:::i;:::-;14547:63;;14503:117;14659:2;14685:53;14730:7;14721:6;14710:9;14706:22;14685:53;:::i;:::-;14675:63;;14630:118;14281:474;;;;;:::o;14761:180::-;14809:77;14806:1;14799:88;14906:4;14903:1;14896:15;14930:4;14927:1;14920:15;14947:320;14991:6;15028:1;15022:4;15018:12;15008:22;;15075:1;15069:4;15065:12;15096:18;15086:81;;15152:4;15144:6;15140:17;15130:27;;15086:81;15214:2;15206:6;15203:14;15183:18;15180:38;15177:84;;15233:18;;:::i;:::-;15177:84;14998:269;14947:320;;;:::o;15273:233::-;15413:34;15409:1;15401:6;15397:14;15390:58;15482:16;15477:2;15469:6;15465:15;15458:41;15273:233;:::o;15512:366::-;15654:3;15675:67;15739:2;15734:3;15675:67;:::i;:::-;15668:74;;15751:93;15840:3;15751:93;:::i;:::-;15869:2;15864:3;15860:12;15853:19;;15512:366;;;:::o;15884:419::-;16050:4;16088:2;16077:9;16073:18;16065:26;;16137:9;16131:4;16127:20;16123:1;16112:9;16108:17;16101:47;16165:131;16291:4;16165:131;:::i;:::-;16157:139;;15884:419;;;:::o;16309:298::-;16449:34;16445:1;16437:6;16433:14;16426:58;16518:34;16513:2;16505:6;16501:15;16494:59;16587:12;16582:2;16574:6;16570:15;16563:37;16309:298;:::o;16613:366::-;16755:3;16776:67;16840:2;16835:3;16776:67;:::i;:::-;16769:74;;16852:93;16941:3;16852:93;:::i;:::-;16970:2;16965:3;16961:12;16954:19;;16613:366;;;:::o;16985:419::-;17151:4;17189:2;17178:9;17174:18;17166:26;;17238:9;17232:4;17228:20;17224:1;17213:9;17209:17;17202:47;17266:131;17392:4;17266:131;:::i;:::-;17258:139;;16985:419;;;:::o;17410:295::-;17550:34;17546:1;17538:6;17534:14;17527:58;17619:34;17614:2;17606:6;17602:15;17595:59;17688:9;17683:2;17675:6;17671:15;17664:34;17410:295;:::o;17711:366::-;17853:3;17874:67;17938:2;17933:3;17874:67;:::i;:::-;17867:74;;17950:93;18039:3;17950:93;:::i;:::-;18068:2;18063:3;18059:12;18052:19;;17711:366;;;:::o;18083:419::-;18249:4;18287:2;18276:9;18272:18;18264:26;;18336:9;18330:4;18326:20;18322:1;18311:9;18307:17;18300:47;18364:131;18490:4;18364:131;:::i;:::-;18356:139;;18083:419;;;:::o;18508:148::-;18610:11;18647:3;18632:18;;18508:148;;;;:::o;18662:156::-;18802:8;18798:1;18790:6;18786:14;18779:32;18662:156;:::o;18824:400::-;18984:3;19005:84;19087:1;19082:3;19005:84;:::i;:::-;18998:91;;19098:93;19187:3;19098:93;:::i;:::-;19216:1;19211:3;19207:11;19200:18;;18824:400;;;:::o;19230:79::-;19269:7;19298:5;19287:16;;19230:79;;;:::o;19315:157::-;19420:45;19440:24;19458:5;19440:24;:::i;:::-;19420:45;:::i;:::-;19415:3;19408:58;19315:157;;:::o;19478:522::-;19691:3;19713:148;19857:3;19713:148;:::i;:::-;19706:155;;19871:75;19942:3;19933:6;19871:75;:::i;:::-;19971:2;19966:3;19962:12;19955:19;;19991:3;19984:10;;19478:522;;;;:::o;20006:332::-;20127:4;20165:2;20154:9;20150:18;20142:26;;20178:71;20246:1;20235:9;20231:17;20222:6;20178:71;:::i;:::-;20259:72;20327:2;20316:9;20312:18;20303:6;20259:72;:::i;:::-;20006:332;;;;;:::o;20344:238::-;20484:34;20480:1;20472:6;20468:14;20461:58;20553:21;20548:2;20540:6;20536:15;20529:46;20344:238;:::o;20588:366::-;20730:3;20751:67;20815:2;20810:3;20751:67;:::i;:::-;20744:74;;20827:93;20916:3;20827:93;:::i;:::-;20945:2;20940:3;20936:12;20929:19;;20588:366;;;:::o;20960:419::-;21126:4;21164:2;21153:9;21149:18;21141:26;;21213:9;21207:4;21203:20;21199:1;21188:9;21184:17;21177:47;21241:131;21367:4;21241:131;:::i;:::-;21233:139;;20960:419;;;:::o;21385:221::-;21525:34;21521:1;21513:6;21509:14;21502:58;21594:4;21589:2;21581:6;21577:15;21570:29;21385:221;:::o;21612:366::-;21754:3;21775:67;21839:2;21834:3;21775:67;:::i;:::-;21768:74;;21851:93;21940:3;21851:93;:::i;:::-;21969:2;21964:3;21960:12;21953:19;;21612:366;;;:::o;21984:419::-;22150:4;22188:2;22177:9;22173:18;22165:26;;22237:9;22231:4;22227:20;22223:1;22212:9;22208:17;22201:47;22265:131;22391:4;22265:131;:::i;:::-;22257:139;;21984:419;;;:::o;22409:240::-;22549:34;22545:1;22537:6;22533:14;22526:58;22618:23;22613:2;22605:6;22601:15;22594:48;22409:240;:::o;22655:366::-;22797:3;22818:67;22882:2;22877:3;22818:67;:::i;:::-;22811:74;;22894:93;22983:3;22894:93;:::i;:::-;23012:2;23007:3;23003:12;22996:19;;22655:366;;;:::o;23027:419::-;23193:4;23231:2;23220:9;23216:18;23208:26;;23280:9;23274:4;23270:20;23266:1;23255:9;23251:17;23244:47;23308:131;23434:4;23308:131;:::i;:::-;23300:139;;23027:419;;;:::o;23452:180::-;23500:77;23497:1;23490:88;23597:4;23594:1;23587:15;23621:4;23618:1;23611:15;23638:180;23686:77;23683:1;23676:88;23783:4;23780:1;23773:15;23807:4;23804:1;23797:15;23824:221;23964:34;23960:1;23952:6;23948:14;23941:58;24033:4;24028:2;24020:6;24016:15;24009:29;23824:221;:::o;24051:366::-;24193:3;24214:67;24278:2;24273:3;24214:67;:::i;:::-;24207:74;;24290:93;24379:3;24290:93;:::i;:::-;24408:2;24403:3;24399:12;24392:19;;24051:366;;;:::o;24423:419::-;24589:4;24627:2;24616:9;24612:18;24604:26;;24676:9;24670:4;24666:20;24662:1;24651:9;24647:17;24640:47;24704:131;24830:4;24704:131;:::i;:::-;24696:139;;24423:419;;;:::o;24848:163::-;24988:15;24984:1;24976:6;24972:14;24965:39;24848:163;:::o;25017:402::-;25177:3;25198:85;25280:2;25275:3;25198:85;:::i;:::-;25191:92;;25292:93;25381:3;25292:93;:::i;:::-;25410:2;25405:3;25401:12;25394:19;;25017:402;;;:::o;25425:381::-;25610:3;25632:148;25776:3;25632:148;:::i;:::-;25625:155;;25797:3;25790:10;;25425:381;;;:::o;25812:775::-;26045:4;26083:3;26072:9;26068:19;26060:27;;26097:71;26165:1;26154:9;26150:17;26141:6;26097:71;:::i;:::-;26178:72;26246:2;26235:9;26231:18;26222:6;26178:72;:::i;:::-;26260;26328:2;26317:9;26313:18;26304:6;26260:72;:::i;:::-;26342;26410:2;26399:9;26395:18;26386:6;26342:72;:::i;:::-;26424:73;26492:3;26481:9;26477:19;26468:6;26424:73;:::i;:::-;26507;26575:3;26564:9;26560:19;26551:6;26507:73;:::i;:::-;25812:775;;;;;;;;;:::o;26593:332::-;26714:4;26752:2;26741:9;26737:18;26729:26;;26765:71;26833:1;26822:9;26818:17;26809:6;26765:71;:::i;:::-;26846:72;26914:2;26903:9;26899:18;26890:6;26846:72;:::i;:::-;26593:332;;;;;:::o;26931:159::-;27071:11;27067:1;27059:6;27055:14;27048:35;26931:159;:::o;27096:400::-;27256:3;27277:84;27359:1;27354:3;27277:84;:::i;:::-;27270:91;;27370:93;27459:3;27370:93;:::i;:::-;27488:1;27483:3;27479:11;27472:18;;27096:400;;;:::o;27502:94::-;27535:8;27583:5;27579:2;27575:14;27554:35;;27502:94;;;:::o;27602:::-;27641:7;27670:20;27684:5;27670:20;:::i;:::-;27659:31;;27602:94;;;:::o;27702:100::-;27741:7;27770:26;27790:5;27770:26;:::i;:::-;27759:37;;27702:100;;;:::o;27808:157::-;27913:45;27933:24;27951:5;27933:24;:::i;:::-;27913:45;:::i;:::-;27908:3;27901:58;27808:157;;:::o;27971:522::-;28184:3;28206:148;28350:3;28206:148;:::i;:::-;28199:155;;28364:75;28435:3;28426:6;28364:75;:::i;:::-;28464:2;28459:3;28455:12;28448:19;;28484:3;28477:10;;27971:522;;;;:::o;28499:442::-;28648:4;28686:2;28675:9;28671:18;28663:26;;28699:71;28767:1;28756:9;28752:17;28743:6;28699:71;:::i;:::-;28780:72;28848:2;28837:9;28833:18;28824:6;28780:72;:::i;:::-;28862;28930:2;28919:9;28915:18;28906:6;28862:72;:::i;:::-;28499:442;;;;;;:::o;28947:241::-;29087:34;29083:1;29075:6;29071:14;29064:58;29156:24;29151:2;29143:6;29139:15;29132:49;28947:241;:::o;29194:366::-;29336:3;29357:67;29421:2;29416:3;29357:67;:::i;:::-;29350:74;;29433:93;29522:3;29433:93;:::i;:::-;29551:2;29546:3;29542:12;29535:19;;29194:366;;;:::o;29566:419::-;29732:4;29770:2;29759:9;29755:18;29747:26;;29819:9;29813:4;29809:20;29805:1;29794:9;29790:17;29783:47;29847:131;29973:4;29847:131;:::i;:::-;29839:139;;29566:419;;;:::o;29991:180::-;30039:77;30036:1;30029:88;30136:4;30133:1;30126:15;30160:4;30157:1;30150:15;30177:191;30217:3;30236:20;30254:1;30236:20;:::i;:::-;30231:25;;30270:20;30288:1;30270:20;:::i;:::-;30265:25;;30313:1;30310;30306:9;30299:16;;30334:3;30331:1;30328:10;30325:36;;;30341:18;;:::i;:::-;30325:36;30177:191;;;;:::o;30374:332::-;30495:4;30533:2;30522:9;30518:18;30510:26;;30546:71;30614:1;30603:9;30599:17;30590:6;30546:71;:::i;:::-;30627:72;30695:2;30684:9;30680:18;30671:6;30627:72;:::i;:::-;30374:332;;;;;:::o;30712:194::-;30752:4;30772:20;30790:1;30772:20;:::i;:::-;30767:25;;30806:20;30824:1;30806:20;:::i;:::-;30801:25;;30850:1;30847;30843:9;30835:17;;30874:1;30868:4;30865:11;30862:37;;;30879:18;;:::i;:::-;30862:37;30712:194;;;;:::o;30912:180::-;30960:77;30957:1;30950:88;31057:4;31054:1;31047:15;31081:4;31078:1;31071:15;31098:178;31238:30;31234:1;31226:6;31222:14;31215:54;31098:178;:::o;31282:366::-;31424:3;31445:67;31509:2;31504:3;31445:67;:::i;:::-;31438:74;;31521:93;31610:3;31521:93;:::i;:::-;31639:2;31634:3;31630:12;31623:19;;31282:366;;;:::o;31654:419::-;31820:4;31858:2;31847:9;31843:18;31835:26;;31907:9;31901:4;31897:20;31893:1;31882:9;31878:17;31871:47;31935:131;32061:4;31935:131;:::i;:::-;31927:139;;31654:419;;;:::o;32079:664::-;32284:4;32322:3;32311:9;32307:19;32299:27;;32336:71;32404:1;32393:9;32389:17;32380:6;32336:71;:::i;:::-;32417:72;32485:2;32474:9;32470:18;32461:6;32417:72;:::i;:::-;32499;32567:2;32556:9;32552:18;32543:6;32499:72;:::i;:::-;32581;32649:2;32638:9;32634:18;32625:6;32581:72;:::i;:::-;32663:73;32731:3;32720:9;32716:19;32707:6;32663:73;:::i;:::-;32079:664;;;;;;;;:::o;32749:545::-;32922:4;32960:3;32949:9;32945:19;32937:27;;32974:71;33042:1;33031:9;33027:17;33018:6;32974:71;:::i;:::-;33055:68;33119:2;33108:9;33104:18;33095:6;33055:68;:::i;:::-;33133:72;33201:2;33190:9;33186:18;33177:6;33133:72;:::i;:::-;33215;33283:2;33272:9;33268:18;33259:6;33215:72;:::i;:::-;32749:545;;;;;;;:::o;33300:180::-;33348:77;33345:1;33338:88;33445:4;33442:1;33435:15;33469:4;33466:1;33459:15;33486:410;33526:7;33549:20;33567:1;33549:20;:::i;:::-;33544:25;;33583:20;33601:1;33583:20;:::i;:::-;33578:25;;33638:1;33635;33631:9;33660:30;33678:11;33660:30;:::i;:::-;33649:41;;33839:1;33830:7;33826:15;33823:1;33820:22;33800:1;33793:9;33773:83;33750:139;;33869:18;;:::i;:::-;33750:139;33534:362;33486:410;;;;:::o;33902:180::-;33950:77;33947:1;33940:88;34047:4;34044:1;34037:15;34071:4;34068:1;34061:15;34088:185;34128:1;34145:20;34163:1;34145:20;:::i;:::-;34140:25;;34179:20;34197:1;34179:20;:::i;:::-;34174:25;;34218:1;34208:35;;34223:18;;:::i;:::-;34208:35;34265:1;34262;34258:9;34253:14;;34088:185;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MANAGER_ROLE()":"ec87621c","addCanTrade(address[])":"ca40f1c4","addExemption(address)":"705931fa","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","enableTrading()":"8a8c523c","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","removeCanTrade(address[])":"7ac93119","removeExemption(address)":"0ed9cc4c","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setTaxPercentage(uint256)":"699abb3c","setTaxWallet(address)":"ea414b28","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","taxPercentage()":"ae7b6d16","taxWallet()":"2dc0562d","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"preservationProjectsVestingContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempted\",\"type\":\"bool\"}],\"name\":\"TaxExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTaxPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"TaxPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TaxWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"allowedAddresses\",\"type\":\"address[]\"}],\"name\":\"addCanTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"addExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"allowedAddresses\",\"type\":\"address[]\"}],\"name\":\"removeCanTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"removeExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"setTaxPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxWalletAddress\",\"type\":\"address\"}],\"name\":\"setTaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AraraCoin.sol\":\"AraraCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/AraraCoin.sol\":{\"keccak256\":\"0xc57548718b5d7169bdfcf10f3dde7175208fe7e5a46e5e192a98d7acac84e0e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c08f2f9d7f00d95098bb7f9610c82d97a1d6da53a926fa4c5ea763600f79bbd8\",\"dweb:/ipfs/QmRCCJKTNR6YH1y9dKkuzoY5DKwUPuTnkhCibc9A1P9Go4\"]}},\"version\":1}"}},"contracts/MyVestingWallet.sol":{"MyVestingWallet":{"abi":[{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint64","name":"startTimestamp","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"},{"internalType":"uint64","name":"cliffSeconds","type":"uint64"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"uint64","name":"cliffSeconds","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"name":"InvalidCliffDuration","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"cliff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_585":{"entryPoint":null,"id":585,"parameterSlots":3,"returnSlots":0},"@_8101":{"entryPoint":null,"id":8101,"parameterSlots":4,"returnSlots":0},"@_8152":{"entryPoint":null,"id":8152,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":830,"id":525,"parameterSlots":1,"returnSlots":0},"@duration_608":{"entryPoint":1026,"id":608,"parameterSlots":0,"returnSlots":1},"@start_599":{"entryPoint":1141,"id":599,"parameterSlots":0,"returnSlots":1},"@toUint64_5469":{"entryPoint":1046,"id":5469,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory":{"entryPoint":1336,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5_to_t_string_memory_ptr_fromStack":{"entryPoint":1920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0_to_t_string_memory_ptr_fromStack":{"entryPoint":2072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b_to_t_string_memory_ptr_fromStack":{"entryPoint":2224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf_to_t_string_memory_ptr_fromStack":{"entryPoint":1768,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":1496,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":2414,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2263,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":1513,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1672,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":1605,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1198,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_64_by_1":{"entryPoint":2297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1166,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2387,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1267,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2307,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_64_by_1_to_t_uint8":{"entryPoint":2330,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2320,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1558,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1161,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5":{"entryPoint":1841,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0":{"entryPoint":1993,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b":{"entryPoint":2145,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf":{"entryPoint":1689,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1218,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1287,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8673:30","nodeType":"YulBlock","src":"0:8673:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"379:81:30","nodeType":"YulBlock","src":"379:81:30","statements":[{"nativeSrc":"389:65:30","nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nativeSrc":"404:5:30","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nativeSrc":"411:42:30","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:30","nodeType":"YulIdentifier","src":"400:3:30"},"nativeSrc":"400:54:30","nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:30","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:30","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:30","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nativeSrc":"511:51:30","nodeType":"YulBlock","src":"511:51:30","statements":[{"nativeSrc":"521:35:30","nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nativeSrc":"550:5:30","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:30","nodeType":"YulIdentifier","src":"532:17:30"},"nativeSrc":"532:24:30","nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:30","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:30","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:30","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nativeSrc":"611:79:30","nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nativeSrc":"668:16:30","nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:30","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:30","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:30","nodeType":"YulIdentifier","src":"670:6:30"},"nativeSrc":"670:12:30","nodeType":"YulFunctionCall","src":"670:12:30"},"nativeSrc":"670:12:30","nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:30","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nativeSrc":"659:5:30","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:30","nodeType":"YulIdentifier","src":"641:17:30"},"nativeSrc":"641:24:30","nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nativeSrc":"631:2:30","nodeType":"YulIdentifier","src":"631:2:30"},"nativeSrc":"631:35:30","nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nativeSrc":"624:6:30","nodeType":"YulIdentifier","src":"624:6:30"},"nativeSrc":"624:43:30","nodeType":"YulFunctionCall","src":"624:43:30"},"nativeSrc":"621:63:30","nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:30","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nativeSrc":"759:80:30","nodeType":"YulBlock","src":"759:80:30","statements":[{"nativeSrc":"769:22:30","nodeType":"YulAssignment","src":"769:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:30","nodeType":"YulIdentifier","src":"784:6:30"}],"functionName":{"name":"mload","nativeSrc":"778:5:30","nodeType":"YulIdentifier","src":"778:5:30"},"nativeSrc":"778:13:30","nodeType":"YulFunctionCall","src":"778:13:30"},"variableNames":[{"name":"value","nativeSrc":"769:5:30","nodeType":"YulIdentifier","src":"769:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:30","nodeType":"YulIdentifier","src":"827:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:30","nodeType":"YulIdentifier","src":"800:26:30"},"nativeSrc":"800:33:30","nodeType":"YulFunctionCall","src":"800:33:30"},"nativeSrc":"800:33:30","nodeType":"YulExpressionStatement","src":"800:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:30","nodeType":"YulTypedName","src":"737:6:30","type":""},{"name":"end","nativeSrc":"745:3:30","nodeType":"YulTypedName","src":"745:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:30","nodeType":"YulTypedName","src":"753:5:30","type":""}],"src":"696:143:30"},{"body":{"nativeSrc":"889:57:30","nodeType":"YulBlock","src":"889:57:30","statements":[{"nativeSrc":"899:41:30","nodeType":"YulAssignment","src":"899:41:30","value":{"arguments":[{"name":"value","nativeSrc":"914:5:30","nodeType":"YulIdentifier","src":"914:5:30"},{"kind":"number","nativeSrc":"921:18:30","nodeType":"YulLiteral","src":"921:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"910:3:30","nodeType":"YulIdentifier","src":"910:3:30"},"nativeSrc":"910:30:30","nodeType":"YulFunctionCall","src":"910:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"899:7:30","nodeType":"YulIdentifier","src":"899:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"845:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"871:5:30","nodeType":"YulTypedName","src":"871:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"881:7:30","nodeType":"YulTypedName","src":"881:7:30","type":""}],"src":"845:101:30"},{"body":{"nativeSrc":"994:78:30","nodeType":"YulBlock","src":"994:78:30","statements":[{"body":{"nativeSrc":"1050:16:30","nodeType":"YulBlock","src":"1050:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1059:1:30","nodeType":"YulLiteral","src":"1059:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1062:1:30","nodeType":"YulLiteral","src":"1062:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1052:6:30","nodeType":"YulIdentifier","src":"1052:6:30"},"nativeSrc":"1052:12:30","nodeType":"YulFunctionCall","src":"1052:12:30"},"nativeSrc":"1052:12:30","nodeType":"YulExpressionStatement","src":"1052:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1017:5:30","nodeType":"YulIdentifier","src":"1017:5:30"},{"arguments":[{"name":"value","nativeSrc":"1041:5:30","nodeType":"YulIdentifier","src":"1041:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1024:16:30","nodeType":"YulIdentifier","src":"1024:16:30"},"nativeSrc":"1024:23:30","nodeType":"YulFunctionCall","src":"1024:23:30"}],"functionName":{"name":"eq","nativeSrc":"1014:2:30","nodeType":"YulIdentifier","src":"1014:2:30"},"nativeSrc":"1014:34:30","nodeType":"YulFunctionCall","src":"1014:34:30"}],"functionName":{"name":"iszero","nativeSrc":"1007:6:30","nodeType":"YulIdentifier","src":"1007:6:30"},"nativeSrc":"1007:42:30","nodeType":"YulFunctionCall","src":"1007:42:30"},"nativeSrc":"1004:62:30","nodeType":"YulIf","src":"1004:62:30"}]},"name":"validator_revert_t_uint64","nativeSrc":"952:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"987:5:30","nodeType":"YulTypedName","src":"987:5:30","type":""}],"src":"952:120:30"},{"body":{"nativeSrc":"1140:79:30","nodeType":"YulBlock","src":"1140:79:30","statements":[{"nativeSrc":"1150:22:30","nodeType":"YulAssignment","src":"1150:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"1165:6:30","nodeType":"YulIdentifier","src":"1165:6:30"}],"functionName":{"name":"mload","nativeSrc":"1159:5:30","nodeType":"YulIdentifier","src":"1159:5:30"},"nativeSrc":"1159:13:30","nodeType":"YulFunctionCall","src":"1159:13:30"},"variableNames":[{"name":"value","nativeSrc":"1150:5:30","nodeType":"YulIdentifier","src":"1150:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1207:5:30","nodeType":"YulIdentifier","src":"1207:5:30"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"1181:25:30","nodeType":"YulIdentifier","src":"1181:25:30"},"nativeSrc":"1181:32:30","nodeType":"YulFunctionCall","src":"1181:32:30"},"nativeSrc":"1181:32:30","nodeType":"YulExpressionStatement","src":"1181:32:30"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1078:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1118:6:30","nodeType":"YulTypedName","src":"1118:6:30","type":""},{"name":"end","nativeSrc":"1126:3:30","nodeType":"YulTypedName","src":"1126:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1134:5:30","nodeType":"YulTypedName","src":"1134:5:30","type":""}],"src":"1078:141:30"},{"body":{"nativeSrc":"1350:689:30","nodeType":"YulBlock","src":"1350:689:30","statements":[{"body":{"nativeSrc":"1397:83:30","nodeType":"YulBlock","src":"1397:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1399:77:30","nodeType":"YulIdentifier","src":"1399:77:30"},"nativeSrc":"1399:79:30","nodeType":"YulFunctionCall","src":"1399:79:30"},"nativeSrc":"1399:79:30","nodeType":"YulExpressionStatement","src":"1399:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1371:7:30","nodeType":"YulIdentifier","src":"1371:7:30"},{"name":"headStart","nativeSrc":"1380:9:30","nodeType":"YulIdentifier","src":"1380:9:30"}],"functionName":{"name":"sub","nativeSrc":"1367:3:30","nodeType":"YulIdentifier","src":"1367:3:30"},"nativeSrc":"1367:23:30","nodeType":"YulFunctionCall","src":"1367:23:30"},{"kind":"number","nativeSrc":"1392:3:30","nodeType":"YulLiteral","src":"1392:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1363:3:30","nodeType":"YulIdentifier","src":"1363:3:30"},"nativeSrc":"1363:33:30","nodeType":"YulFunctionCall","src":"1363:33:30"},"nativeSrc":"1360:120:30","nodeType":"YulIf","src":"1360:120:30"},{"nativeSrc":"1490:128:30","nodeType":"YulBlock","src":"1490:128:30","statements":[{"nativeSrc":"1505:15:30","nodeType":"YulVariableDeclaration","src":"1505:15:30","value":{"kind":"number","nativeSrc":"1519:1:30","nodeType":"YulLiteral","src":"1519:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1509:6:30","nodeType":"YulTypedName","src":"1509:6:30","type":""}]},{"nativeSrc":"1534:74:30","nodeType":"YulAssignment","src":"1534:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1580:9:30","nodeType":"YulIdentifier","src":"1580:9:30"},{"name":"offset","nativeSrc":"1591:6:30","nodeType":"YulIdentifier","src":"1591:6:30"}],"functionName":{"name":"add","nativeSrc":"1576:3:30","nodeType":"YulIdentifier","src":"1576:3:30"},"nativeSrc":"1576:22:30","nodeType":"YulFunctionCall","src":"1576:22:30"},{"name":"dataEnd","nativeSrc":"1600:7:30","nodeType":"YulIdentifier","src":"1600:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1544:31:30","nodeType":"YulIdentifier","src":"1544:31:30"},"nativeSrc":"1544:64:30","nodeType":"YulFunctionCall","src":"1544:64:30"},"variableNames":[{"name":"value0","nativeSrc":"1534:6:30","nodeType":"YulIdentifier","src":"1534:6:30"}]}]},{"nativeSrc":"1628:128:30","nodeType":"YulBlock","src":"1628:128:30","statements":[{"nativeSrc":"1643:16:30","nodeType":"YulVariableDeclaration","src":"1643:16:30","value":{"kind":"number","nativeSrc":"1657:2:30","nodeType":"YulLiteral","src":"1657:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1647:6:30","nodeType":"YulTypedName","src":"1647:6:30","type":""}]},{"nativeSrc":"1673:73:30","nodeType":"YulAssignment","src":"1673:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1718:9:30","nodeType":"YulIdentifier","src":"1718:9:30"},{"name":"offset","nativeSrc":"1729:6:30","nodeType":"YulIdentifier","src":"1729:6:30"}],"functionName":{"name":"add","nativeSrc":"1714:3:30","nodeType":"YulIdentifier","src":"1714:3:30"},"nativeSrc":"1714:22:30","nodeType":"YulFunctionCall","src":"1714:22:30"},{"name":"dataEnd","nativeSrc":"1738:7:30","nodeType":"YulIdentifier","src":"1738:7:30"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1683:30:30","nodeType":"YulIdentifier","src":"1683:30:30"},"nativeSrc":"1683:63:30","nodeType":"YulFunctionCall","src":"1683:63:30"},"variableNames":[{"name":"value1","nativeSrc":"1673:6:30","nodeType":"YulIdentifier","src":"1673:6:30"}]}]},{"nativeSrc":"1766:128:30","nodeType":"YulBlock","src":"1766:128:30","statements":[{"nativeSrc":"1781:16:30","nodeType":"YulVariableDeclaration","src":"1781:16:30","value":{"kind":"number","nativeSrc":"1795:2:30","nodeType":"YulLiteral","src":"1795:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1785:6:30","nodeType":"YulTypedName","src":"1785:6:30","type":""}]},{"nativeSrc":"1811:73:30","nodeType":"YulAssignment","src":"1811:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1856:9:30","nodeType":"YulIdentifier","src":"1856:9:30"},{"name":"offset","nativeSrc":"1867:6:30","nodeType":"YulIdentifier","src":"1867:6:30"}],"functionName":{"name":"add","nativeSrc":"1852:3:30","nodeType":"YulIdentifier","src":"1852:3:30"},"nativeSrc":"1852:22:30","nodeType":"YulFunctionCall","src":"1852:22:30"},{"name":"dataEnd","nativeSrc":"1876:7:30","nodeType":"YulIdentifier","src":"1876:7:30"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1821:30:30","nodeType":"YulIdentifier","src":"1821:30:30"},"nativeSrc":"1821:63:30","nodeType":"YulFunctionCall","src":"1821:63:30"},"variableNames":[{"name":"value2","nativeSrc":"1811:6:30","nodeType":"YulIdentifier","src":"1811:6:30"}]}]},{"nativeSrc":"1904:128:30","nodeType":"YulBlock","src":"1904:128:30","statements":[{"nativeSrc":"1919:16:30","nodeType":"YulVariableDeclaration","src":"1919:16:30","value":{"kind":"number","nativeSrc":"1933:2:30","nodeType":"YulLiteral","src":"1933:2:30","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"1923:6:30","nodeType":"YulTypedName","src":"1923:6:30","type":""}]},{"nativeSrc":"1949:73:30","nodeType":"YulAssignment","src":"1949:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1994:9:30","nodeType":"YulIdentifier","src":"1994:9:30"},{"name":"offset","nativeSrc":"2005:6:30","nodeType":"YulIdentifier","src":"2005:6:30"}],"functionName":{"name":"add","nativeSrc":"1990:3:30","nodeType":"YulIdentifier","src":"1990:3:30"},"nativeSrc":"1990:22:30","nodeType":"YulFunctionCall","src":"1990:22:30"},{"name":"dataEnd","nativeSrc":"2014:7:30","nodeType":"YulIdentifier","src":"2014:7:30"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1959:30:30","nodeType":"YulIdentifier","src":"1959:30:30"},"nativeSrc":"1959:63:30","nodeType":"YulFunctionCall","src":"1959:63:30"},"variableNames":[{"name":"value3","nativeSrc":"1949:6:30","nodeType":"YulIdentifier","src":"1949:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory","nativeSrc":"1225:814:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1296:9:30","nodeType":"YulTypedName","src":"1296:9:30","type":""},{"name":"dataEnd","nativeSrc":"1307:7:30","nodeType":"YulTypedName","src":"1307:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1319:6:30","nodeType":"YulTypedName","src":"1319:6:30","type":""},{"name":"value1","nativeSrc":"1327:6:30","nodeType":"YulTypedName","src":"1327:6:30","type":""},{"name":"value2","nativeSrc":"1335:6:30","nodeType":"YulTypedName","src":"1335:6:30","type":""},{"name":"value3","nativeSrc":"1343:6:30","nodeType":"YulTypedName","src":"1343:6:30","type":""}],"src":"1225:814:30"},{"body":{"nativeSrc":"2110:53:30","nodeType":"YulBlock","src":"2110:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2127:3:30","nodeType":"YulIdentifier","src":"2127:3:30"},{"arguments":[{"name":"value","nativeSrc":"2150:5:30","nodeType":"YulIdentifier","src":"2150:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2132:17:30","nodeType":"YulIdentifier","src":"2132:17:30"},"nativeSrc":"2132:24:30","nodeType":"YulFunctionCall","src":"2132:24:30"}],"functionName":{"name":"mstore","nativeSrc":"2120:6:30","nodeType":"YulIdentifier","src":"2120:6:30"},"nativeSrc":"2120:37:30","nodeType":"YulFunctionCall","src":"2120:37:30"},"nativeSrc":"2120:37:30","nodeType":"YulExpressionStatement","src":"2120:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2045:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2098:5:30","nodeType":"YulTypedName","src":"2098:5:30","type":""},{"name":"pos","nativeSrc":"2105:3:30","nodeType":"YulTypedName","src":"2105:3:30","type":""}],"src":"2045:118:30"},{"body":{"nativeSrc":"2267:124:30","nodeType":"YulBlock","src":"2267:124:30","statements":[{"nativeSrc":"2277:26:30","nodeType":"YulAssignment","src":"2277:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2289:9:30","nodeType":"YulIdentifier","src":"2289:9:30"},{"kind":"number","nativeSrc":"2300:2:30","nodeType":"YulLiteral","src":"2300:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2285:3:30","nodeType":"YulIdentifier","src":"2285:3:30"},"nativeSrc":"2285:18:30","nodeType":"YulFunctionCall","src":"2285:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2277:4:30","nodeType":"YulIdentifier","src":"2277:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2357:6:30","nodeType":"YulIdentifier","src":"2357:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"2370:9:30","nodeType":"YulIdentifier","src":"2370:9:30"},{"kind":"number","nativeSrc":"2381:1:30","nodeType":"YulLiteral","src":"2381:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2366:3:30","nodeType":"YulIdentifier","src":"2366:3:30"},"nativeSrc":"2366:17:30","nodeType":"YulFunctionCall","src":"2366:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2313:43:30","nodeType":"YulIdentifier","src":"2313:43:30"},"nativeSrc":"2313:71:30","nodeType":"YulFunctionCall","src":"2313:71:30"},"nativeSrc":"2313:71:30","nodeType":"YulExpressionStatement","src":"2313:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2169:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2239:9:30","nodeType":"YulTypedName","src":"2239:9:30","type":""},{"name":"value0","nativeSrc":"2251:6:30","nodeType":"YulTypedName","src":"2251:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2262:4:30","nodeType":"YulTypedName","src":"2262:4:30","type":""}],"src":"2169:222:30"},{"body":{"nativeSrc":"2460:52:30","nodeType":"YulBlock","src":"2460:52:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2477:3:30","nodeType":"YulIdentifier","src":"2477:3:30"},{"arguments":[{"name":"value","nativeSrc":"2499:5:30","nodeType":"YulIdentifier","src":"2499:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"2482:16:30","nodeType":"YulIdentifier","src":"2482:16:30"},"nativeSrc":"2482:23:30","nodeType":"YulFunctionCall","src":"2482:23:30"}],"functionName":{"name":"mstore","nativeSrc":"2470:6:30","nodeType":"YulIdentifier","src":"2470:6:30"},"nativeSrc":"2470:36:30","nodeType":"YulFunctionCall","src":"2470:36:30"},"nativeSrc":"2470:36:30","nodeType":"YulExpressionStatement","src":"2470:36:30"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2397:115:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2448:5:30","nodeType":"YulTypedName","src":"2448:5:30","type":""},{"name":"pos","nativeSrc":"2455:3:30","nodeType":"YulTypedName","src":"2455:3:30","type":""}],"src":"2397:115:30"},{"body":{"nativeSrc":"2640:202:30","nodeType":"YulBlock","src":"2640:202:30","statements":[{"nativeSrc":"2650:26:30","nodeType":"YulAssignment","src":"2650:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"2662:9:30","nodeType":"YulIdentifier","src":"2662:9:30"},{"kind":"number","nativeSrc":"2673:2:30","nodeType":"YulLiteral","src":"2673:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2658:3:30","nodeType":"YulIdentifier","src":"2658:3:30"},"nativeSrc":"2658:18:30","nodeType":"YulFunctionCall","src":"2658:18:30"},"variableNames":[{"name":"tail","nativeSrc":"2650:4:30","nodeType":"YulIdentifier","src":"2650:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2728:6:30","nodeType":"YulIdentifier","src":"2728:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"2741:9:30","nodeType":"YulIdentifier","src":"2741:9:30"},{"kind":"number","nativeSrc":"2752:1:30","nodeType":"YulLiteral","src":"2752:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2737:3:30","nodeType":"YulIdentifier","src":"2737:3:30"},"nativeSrc":"2737:17:30","nodeType":"YulFunctionCall","src":"2737:17:30"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2686:41:30","nodeType":"YulIdentifier","src":"2686:41:30"},"nativeSrc":"2686:69:30","nodeType":"YulFunctionCall","src":"2686:69:30"},"nativeSrc":"2686:69:30","nodeType":"YulExpressionStatement","src":"2686:69:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2807:6:30","nodeType":"YulIdentifier","src":"2807:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"2820:9:30","nodeType":"YulIdentifier","src":"2820:9:30"},{"kind":"number","nativeSrc":"2831:2:30","nodeType":"YulLiteral","src":"2831:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2816:3:30","nodeType":"YulIdentifier","src":"2816:3:30"},"nativeSrc":"2816:18:30","nodeType":"YulFunctionCall","src":"2816:18:30"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2765:41:30","nodeType":"YulIdentifier","src":"2765:41:30"},"nativeSrc":"2765:70:30","nodeType":"YulFunctionCall","src":"2765:70:30"},"nativeSrc":"2765:70:30","nodeType":"YulExpressionStatement","src":"2765:70:30"}]},"name":"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"2518:324:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2604:9:30","nodeType":"YulTypedName","src":"2604:9:30","type":""},{"name":"value1","nativeSrc":"2616:6:30","nodeType":"YulTypedName","src":"2616:6:30","type":""},{"name":"value0","nativeSrc":"2624:6:30","nodeType":"YulTypedName","src":"2624:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2635:4:30","nodeType":"YulTypedName","src":"2635:4:30","type":""}],"src":"2518:324:30"},{"body":{"nativeSrc":"2876:152:30","nodeType":"YulBlock","src":"2876:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2893:1:30","nodeType":"YulLiteral","src":"2893:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2896:77:30","nodeType":"YulLiteral","src":"2896:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2886:6:30","nodeType":"YulIdentifier","src":"2886:6:30"},"nativeSrc":"2886:88:30","nodeType":"YulFunctionCall","src":"2886:88:30"},"nativeSrc":"2886:88:30","nodeType":"YulExpressionStatement","src":"2886:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2990:1:30","nodeType":"YulLiteral","src":"2990:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"2993:4:30","nodeType":"YulLiteral","src":"2993:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2983:6:30","nodeType":"YulIdentifier","src":"2983:6:30"},"nativeSrc":"2983:15:30","nodeType":"YulFunctionCall","src":"2983:15:30"},"nativeSrc":"2983:15:30","nodeType":"YulExpressionStatement","src":"2983:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3014:1:30","nodeType":"YulLiteral","src":"3014:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3017:4:30","nodeType":"YulLiteral","src":"3017:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3007:6:30","nodeType":"YulIdentifier","src":"3007:6:30"},"nativeSrc":"3007:15:30","nodeType":"YulFunctionCall","src":"3007:15:30"},"nativeSrc":"3007:15:30","nodeType":"YulExpressionStatement","src":"3007:15:30"}]},"name":"panic_error_0x11","nativeSrc":"2848:180:30","nodeType":"YulFunctionDefinition","src":"2848:180:30"},{"body":{"nativeSrc":"3077:162:30","nodeType":"YulBlock","src":"3077:162:30","statements":[{"nativeSrc":"3087:24:30","nodeType":"YulAssignment","src":"3087:24:30","value":{"arguments":[{"name":"x","nativeSrc":"3109:1:30","nodeType":"YulIdentifier","src":"3109:1:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"3092:16:30","nodeType":"YulIdentifier","src":"3092:16:30"},"nativeSrc":"3092:19:30","nodeType":"YulFunctionCall","src":"3092:19:30"},"variableNames":[{"name":"x","nativeSrc":"3087:1:30","nodeType":"YulIdentifier","src":"3087:1:30"}]},{"nativeSrc":"3120:24:30","nodeType":"YulAssignment","src":"3120:24:30","value":{"arguments":[{"name":"y","nativeSrc":"3142:1:30","nodeType":"YulIdentifier","src":"3142:1:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"3125:16:30","nodeType":"YulIdentifier","src":"3125:16:30"},"nativeSrc":"3125:19:30","nodeType":"YulFunctionCall","src":"3125:19:30"},"variableNames":[{"name":"y","nativeSrc":"3120:1:30","nodeType":"YulIdentifier","src":"3120:1:30"}]},{"nativeSrc":"3153:16:30","nodeType":"YulAssignment","src":"3153:16:30","value":{"arguments":[{"name":"x","nativeSrc":"3164:1:30","nodeType":"YulIdentifier","src":"3164:1:30"},{"name":"y","nativeSrc":"3167:1:30","nodeType":"YulIdentifier","src":"3167:1:30"}],"functionName":{"name":"add","nativeSrc":"3160:3:30","nodeType":"YulIdentifier","src":"3160:3:30"},"nativeSrc":"3160:9:30","nodeType":"YulFunctionCall","src":"3160:9:30"},"variableNames":[{"name":"sum","nativeSrc":"3153:3:30","nodeType":"YulIdentifier","src":"3153:3:30"}]},{"body":{"nativeSrc":"3210:22:30","nodeType":"YulBlock","src":"3210:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3212:16:30","nodeType":"YulIdentifier","src":"3212:16:30"},"nativeSrc":"3212:18:30","nodeType":"YulFunctionCall","src":"3212:18:30"},"nativeSrc":"3212:18:30","nodeType":"YulExpressionStatement","src":"3212:18:30"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"3185:3:30","nodeType":"YulIdentifier","src":"3185:3:30"},{"kind":"number","nativeSrc":"3190:18:30","nodeType":"YulLiteral","src":"3190:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3182:2:30","nodeType":"YulIdentifier","src":"3182:2:30"},"nativeSrc":"3182:27:30","nodeType":"YulFunctionCall","src":"3182:27:30"},"nativeSrc":"3179:53:30","nodeType":"YulIf","src":"3179:53:30"}]},"name":"checked_add_t_uint64","nativeSrc":"3034:205:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3064:1:30","nodeType":"YulTypedName","src":"3064:1:30","type":""},{"name":"y","nativeSrc":"3067:1:30","nodeType":"YulTypedName","src":"3067:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3073:3:30","nodeType":"YulTypedName","src":"3073:3:30","type":""}],"src":"3034:205:30"},{"body":{"nativeSrc":"3341:73:30","nodeType":"YulBlock","src":"3341:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3358:3:30","nodeType":"YulIdentifier","src":"3358:3:30"},{"name":"length","nativeSrc":"3363:6:30","nodeType":"YulIdentifier","src":"3363:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3351:6:30","nodeType":"YulIdentifier","src":"3351:6:30"},"nativeSrc":"3351:19:30","nodeType":"YulFunctionCall","src":"3351:19:30"},"nativeSrc":"3351:19:30","nodeType":"YulExpressionStatement","src":"3351:19:30"},{"nativeSrc":"3379:29:30","nodeType":"YulAssignment","src":"3379:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"3398:3:30","nodeType":"YulIdentifier","src":"3398:3:30"},{"kind":"number","nativeSrc":"3403:4:30","nodeType":"YulLiteral","src":"3403:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3394:3:30","nodeType":"YulIdentifier","src":"3394:3:30"},"nativeSrc":"3394:14:30","nodeType":"YulFunctionCall","src":"3394:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"3379:11:30","nodeType":"YulIdentifier","src":"3379:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3245:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3313:3:30","nodeType":"YulTypedName","src":"3313:3:30","type":""},{"name":"length","nativeSrc":"3318:6:30","nodeType":"YulTypedName","src":"3318:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3329:11:30","nodeType":"YulTypedName","src":"3329:11:30","type":""}],"src":"3245:169:30"},{"body":{"nativeSrc":"3526:115:30","nodeType":"YulBlock","src":"3526:115:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3548:6:30","nodeType":"YulIdentifier","src":"3548:6:30"},{"kind":"number","nativeSrc":"3556:1:30","nodeType":"YulLiteral","src":"3556:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3544:3:30","nodeType":"YulIdentifier","src":"3544:3:30"},"nativeSrc":"3544:14:30","nodeType":"YulFunctionCall","src":"3544:14:30"},{"hexValue":"42656e656669636961727920616464726573732063616e6e6f74206265207a65","kind":"string","nativeSrc":"3560:34:30","nodeType":"YulLiteral","src":"3560:34:30","type":"","value":"Beneficiary address cannot be ze"}],"functionName":{"name":"mstore","nativeSrc":"3537:6:30","nodeType":"YulIdentifier","src":"3537:6:30"},"nativeSrc":"3537:58:30","nodeType":"YulFunctionCall","src":"3537:58:30"},"nativeSrc":"3537:58:30","nodeType":"YulExpressionStatement","src":"3537:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3616:6:30","nodeType":"YulIdentifier","src":"3616:6:30"},{"kind":"number","nativeSrc":"3624:2:30","nodeType":"YulLiteral","src":"3624:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3612:3:30","nodeType":"YulIdentifier","src":"3612:3:30"},"nativeSrc":"3612:15:30","nodeType":"YulFunctionCall","src":"3612:15:30"},{"hexValue":"726f","kind":"string","nativeSrc":"3629:4:30","nodeType":"YulLiteral","src":"3629:4:30","type":"","value":"ro"}],"functionName":{"name":"mstore","nativeSrc":"3605:6:30","nodeType":"YulIdentifier","src":"3605:6:30"},"nativeSrc":"3605:29:30","nodeType":"YulFunctionCall","src":"3605:29:30"},"nativeSrc":"3605:29:30","nodeType":"YulExpressionStatement","src":"3605:29:30"}]},"name":"store_literal_in_memory_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf","nativeSrc":"3420:221:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3518:6:30","nodeType":"YulTypedName","src":"3518:6:30","type":""}],"src":"3420:221:30"},{"body":{"nativeSrc":"3793:220:30","nodeType":"YulBlock","src":"3793:220:30","statements":[{"nativeSrc":"3803:74:30","nodeType":"YulAssignment","src":"3803:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"3869:3:30","nodeType":"YulIdentifier","src":"3869:3:30"},{"kind":"number","nativeSrc":"3874:2:30","nodeType":"YulLiteral","src":"3874:2:30","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3810:58:30","nodeType":"YulIdentifier","src":"3810:58:30"},"nativeSrc":"3810:67:30","nodeType":"YulFunctionCall","src":"3810:67:30"},"variableNames":[{"name":"pos","nativeSrc":"3803:3:30","nodeType":"YulIdentifier","src":"3803:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3975:3:30","nodeType":"YulIdentifier","src":"3975:3:30"}],"functionName":{"name":"store_literal_in_memory_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf","nativeSrc":"3886:88:30","nodeType":"YulIdentifier","src":"3886:88:30"},"nativeSrc":"3886:93:30","nodeType":"YulFunctionCall","src":"3886:93:30"},"nativeSrc":"3886:93:30","nodeType":"YulExpressionStatement","src":"3886:93:30"},{"nativeSrc":"3988:19:30","nodeType":"YulAssignment","src":"3988:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"3999:3:30","nodeType":"YulIdentifier","src":"3999:3:30"},{"kind":"number","nativeSrc":"4004:2:30","nodeType":"YulLiteral","src":"4004:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3995:3:30","nodeType":"YulIdentifier","src":"3995:3:30"},"nativeSrc":"3995:12:30","nodeType":"YulFunctionCall","src":"3995:12:30"},"variableNames":[{"name":"end","nativeSrc":"3988:3:30","nodeType":"YulIdentifier","src":"3988:3:30"}]}]},"name":"abi_encode_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf_to_t_string_memory_ptr_fromStack","nativeSrc":"3647:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3781:3:30","nodeType":"YulTypedName","src":"3781:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3789:3:30","nodeType":"YulTypedName","src":"3789:3:30","type":""}],"src":"3647:366:30"},{"body":{"nativeSrc":"4190:248:30","nodeType":"YulBlock","src":"4190:248:30","statements":[{"nativeSrc":"4200:26:30","nodeType":"YulAssignment","src":"4200:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4212:9:30","nodeType":"YulIdentifier","src":"4212:9:30"},{"kind":"number","nativeSrc":"4223:2:30","nodeType":"YulLiteral","src":"4223:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4208:3:30","nodeType":"YulIdentifier","src":"4208:3:30"},"nativeSrc":"4208:18:30","nodeType":"YulFunctionCall","src":"4208:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4200:4:30","nodeType":"YulIdentifier","src":"4200:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4247:9:30","nodeType":"YulIdentifier","src":"4247:9:30"},{"kind":"number","nativeSrc":"4258:1:30","nodeType":"YulLiteral","src":"4258:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4243:3:30","nodeType":"YulIdentifier","src":"4243:3:30"},"nativeSrc":"4243:17:30","nodeType":"YulFunctionCall","src":"4243:17:30"},{"arguments":[{"name":"tail","nativeSrc":"4266:4:30","nodeType":"YulIdentifier","src":"4266:4:30"},{"name":"headStart","nativeSrc":"4272:9:30","nodeType":"YulIdentifier","src":"4272:9:30"}],"functionName":{"name":"sub","nativeSrc":"4262:3:30","nodeType":"YulIdentifier","src":"4262:3:30"},"nativeSrc":"4262:20:30","nodeType":"YulFunctionCall","src":"4262:20:30"}],"functionName":{"name":"mstore","nativeSrc":"4236:6:30","nodeType":"YulIdentifier","src":"4236:6:30"},"nativeSrc":"4236:47:30","nodeType":"YulFunctionCall","src":"4236:47:30"},"nativeSrc":"4236:47:30","nodeType":"YulExpressionStatement","src":"4236:47:30"},{"nativeSrc":"4292:139:30","nodeType":"YulAssignment","src":"4292:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"4426:4:30","nodeType":"YulIdentifier","src":"4426:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf_to_t_string_memory_ptr_fromStack","nativeSrc":"4300:124:30","nodeType":"YulIdentifier","src":"4300:124:30"},"nativeSrc":"4300:131:30","nodeType":"YulFunctionCall","src":"4300:131:30"},"variableNames":[{"name":"tail","nativeSrc":"4292:4:30","nodeType":"YulIdentifier","src":"4292:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4019:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4170:9:30","nodeType":"YulTypedName","src":"4170:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4185:4:30","nodeType":"YulTypedName","src":"4185:4:30","type":""}],"src":"4019:419:30"},{"body":{"nativeSrc":"4550:118:30","nodeType":"YulBlock","src":"4550:118:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4572:6:30","nodeType":"YulIdentifier","src":"4572:6:30"},{"kind":"number","nativeSrc":"4580:1:30","nodeType":"YulLiteral","src":"4580:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4568:3:30","nodeType":"YulIdentifier","src":"4568:3:30"},"nativeSrc":"4568:14:30","nodeType":"YulFunctionCall","src":"4568:14:30"},{"hexValue":"53746172742074696d657374616d70206d75737420626520696e207468652066","kind":"string","nativeSrc":"4584:34:30","nodeType":"YulLiteral","src":"4584:34:30","type":"","value":"Start timestamp must be in the f"}],"functionName":{"name":"mstore","nativeSrc":"4561:6:30","nodeType":"YulIdentifier","src":"4561:6:30"},"nativeSrc":"4561:58:30","nodeType":"YulFunctionCall","src":"4561:58:30"},"nativeSrc":"4561:58:30","nodeType":"YulExpressionStatement","src":"4561:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4640:6:30","nodeType":"YulIdentifier","src":"4640:6:30"},{"kind":"number","nativeSrc":"4648:2:30","nodeType":"YulLiteral","src":"4648:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4636:3:30","nodeType":"YulIdentifier","src":"4636:3:30"},"nativeSrc":"4636:15:30","nodeType":"YulFunctionCall","src":"4636:15:30"},{"hexValue":"7574757265","kind":"string","nativeSrc":"4653:7:30","nodeType":"YulLiteral","src":"4653:7:30","type":"","value":"uture"}],"functionName":{"name":"mstore","nativeSrc":"4629:6:30","nodeType":"YulIdentifier","src":"4629:6:30"},"nativeSrc":"4629:32:30","nodeType":"YulFunctionCall","src":"4629:32:30"},"nativeSrc":"4629:32:30","nodeType":"YulExpressionStatement","src":"4629:32:30"}]},"name":"store_literal_in_memory_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5","nativeSrc":"4444:224:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4542:6:30","nodeType":"YulTypedName","src":"4542:6:30","type":""}],"src":"4444:224:30"},{"body":{"nativeSrc":"4820:220:30","nodeType":"YulBlock","src":"4820:220:30","statements":[{"nativeSrc":"4830:74:30","nodeType":"YulAssignment","src":"4830:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"4896:3:30","nodeType":"YulIdentifier","src":"4896:3:30"},{"kind":"number","nativeSrc":"4901:2:30","nodeType":"YulLiteral","src":"4901:2:30","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4837:58:30","nodeType":"YulIdentifier","src":"4837:58:30"},"nativeSrc":"4837:67:30","nodeType":"YulFunctionCall","src":"4837:67:30"},"variableNames":[{"name":"pos","nativeSrc":"4830:3:30","nodeType":"YulIdentifier","src":"4830:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5002:3:30","nodeType":"YulIdentifier","src":"5002:3:30"}],"functionName":{"name":"store_literal_in_memory_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5","nativeSrc":"4913:88:30","nodeType":"YulIdentifier","src":"4913:88:30"},"nativeSrc":"4913:93:30","nodeType":"YulFunctionCall","src":"4913:93:30"},"nativeSrc":"4913:93:30","nodeType":"YulExpressionStatement","src":"4913:93:30"},{"nativeSrc":"5015:19:30","nodeType":"YulAssignment","src":"5015:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"5026:3:30","nodeType":"YulIdentifier","src":"5026:3:30"},{"kind":"number","nativeSrc":"5031:2:30","nodeType":"YulLiteral","src":"5031:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5022:3:30","nodeType":"YulIdentifier","src":"5022:3:30"},"nativeSrc":"5022:12:30","nodeType":"YulFunctionCall","src":"5022:12:30"},"variableNames":[{"name":"end","nativeSrc":"5015:3:30","nodeType":"YulIdentifier","src":"5015:3:30"}]}]},"name":"abi_encode_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5_to_t_string_memory_ptr_fromStack","nativeSrc":"4674:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4808:3:30","nodeType":"YulTypedName","src":"4808:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4816:3:30","nodeType":"YulTypedName","src":"4816:3:30","type":""}],"src":"4674:366:30"},{"body":{"nativeSrc":"5217:248:30","nodeType":"YulBlock","src":"5217:248:30","statements":[{"nativeSrc":"5227:26:30","nodeType":"YulAssignment","src":"5227:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5239:9:30","nodeType":"YulIdentifier","src":"5239:9:30"},{"kind":"number","nativeSrc":"5250:2:30","nodeType":"YulLiteral","src":"5250:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5235:3:30","nodeType":"YulIdentifier","src":"5235:3:30"},"nativeSrc":"5235:18:30","nodeType":"YulFunctionCall","src":"5235:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5227:4:30","nodeType":"YulIdentifier","src":"5227:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5274:9:30","nodeType":"YulIdentifier","src":"5274:9:30"},{"kind":"number","nativeSrc":"5285:1:30","nodeType":"YulLiteral","src":"5285:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5270:3:30","nodeType":"YulIdentifier","src":"5270:3:30"},"nativeSrc":"5270:17:30","nodeType":"YulFunctionCall","src":"5270:17:30"},{"arguments":[{"name":"tail","nativeSrc":"5293:4:30","nodeType":"YulIdentifier","src":"5293:4:30"},{"name":"headStart","nativeSrc":"5299:9:30","nodeType":"YulIdentifier","src":"5299:9:30"}],"functionName":{"name":"sub","nativeSrc":"5289:3:30","nodeType":"YulIdentifier","src":"5289:3:30"},"nativeSrc":"5289:20:30","nodeType":"YulFunctionCall","src":"5289:20:30"}],"functionName":{"name":"mstore","nativeSrc":"5263:6:30","nodeType":"YulIdentifier","src":"5263:6:30"},"nativeSrc":"5263:47:30","nodeType":"YulFunctionCall","src":"5263:47:30"},"nativeSrc":"5263:47:30","nodeType":"YulExpressionStatement","src":"5263:47:30"},{"nativeSrc":"5319:139:30","nodeType":"YulAssignment","src":"5319:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"5453:4:30","nodeType":"YulIdentifier","src":"5453:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5_to_t_string_memory_ptr_fromStack","nativeSrc":"5327:124:30","nodeType":"YulIdentifier","src":"5327:124:30"},"nativeSrc":"5327:131:30","nodeType":"YulFunctionCall","src":"5327:131:30"},"variableNames":[{"name":"tail","nativeSrc":"5319:4:30","nodeType":"YulIdentifier","src":"5319:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5046:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5197:9:30","nodeType":"YulTypedName","src":"5197:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5212:4:30","nodeType":"YulTypedName","src":"5212:4:30","type":""}],"src":"5046:419:30"},{"body":{"nativeSrc":"5577:123:30","nodeType":"YulBlock","src":"5577:123:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5599:6:30","nodeType":"YulIdentifier","src":"5599:6:30"},{"kind":"number","nativeSrc":"5607:1:30","nodeType":"YulLiteral","src":"5607:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5595:3:30","nodeType":"YulIdentifier","src":"5595:3:30"},"nativeSrc":"5595:14:30","nodeType":"YulFunctionCall","src":"5595:14:30"},{"hexValue":"56657374696e67206475726174696f6e206d7573742062652067726561746572","kind":"string","nativeSrc":"5611:34:30","nodeType":"YulLiteral","src":"5611:34:30","type":"","value":"Vesting duration must be greater"}],"functionName":{"name":"mstore","nativeSrc":"5588:6:30","nodeType":"YulIdentifier","src":"5588:6:30"},"nativeSrc":"5588:58:30","nodeType":"YulFunctionCall","src":"5588:58:30"},"nativeSrc":"5588:58:30","nodeType":"YulExpressionStatement","src":"5588:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5667:6:30","nodeType":"YulIdentifier","src":"5667:6:30"},{"kind":"number","nativeSrc":"5675:2:30","nodeType":"YulLiteral","src":"5675:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5663:3:30","nodeType":"YulIdentifier","src":"5663:3:30"},"nativeSrc":"5663:15:30","nodeType":"YulFunctionCall","src":"5663:15:30"},{"hexValue":"207468616e207a65726f","kind":"string","nativeSrc":"5680:12:30","nodeType":"YulLiteral","src":"5680:12:30","type":"","value":" than zero"}],"functionName":{"name":"mstore","nativeSrc":"5656:6:30","nodeType":"YulIdentifier","src":"5656:6:30"},"nativeSrc":"5656:37:30","nodeType":"YulFunctionCall","src":"5656:37:30"},"nativeSrc":"5656:37:30","nodeType":"YulExpressionStatement","src":"5656:37:30"}]},"name":"store_literal_in_memory_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0","nativeSrc":"5471:229:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5569:6:30","nodeType":"YulTypedName","src":"5569:6:30","type":""}],"src":"5471:229:30"},{"body":{"nativeSrc":"5852:220:30","nodeType":"YulBlock","src":"5852:220:30","statements":[{"nativeSrc":"5862:74:30","nodeType":"YulAssignment","src":"5862:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"5928:3:30","nodeType":"YulIdentifier","src":"5928:3:30"},{"kind":"number","nativeSrc":"5933:2:30","nodeType":"YulLiteral","src":"5933:2:30","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5869:58:30","nodeType":"YulIdentifier","src":"5869:58:30"},"nativeSrc":"5869:67:30","nodeType":"YulFunctionCall","src":"5869:67:30"},"variableNames":[{"name":"pos","nativeSrc":"5862:3:30","nodeType":"YulIdentifier","src":"5862:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6034:3:30","nodeType":"YulIdentifier","src":"6034:3:30"}],"functionName":{"name":"store_literal_in_memory_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0","nativeSrc":"5945:88:30","nodeType":"YulIdentifier","src":"5945:88:30"},"nativeSrc":"5945:93:30","nodeType":"YulFunctionCall","src":"5945:93:30"},"nativeSrc":"5945:93:30","nodeType":"YulExpressionStatement","src":"5945:93:30"},{"nativeSrc":"6047:19:30","nodeType":"YulAssignment","src":"6047:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"6058:3:30","nodeType":"YulIdentifier","src":"6058:3:30"},{"kind":"number","nativeSrc":"6063:2:30","nodeType":"YulLiteral","src":"6063:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6054:3:30","nodeType":"YulIdentifier","src":"6054:3:30"},"nativeSrc":"6054:12:30","nodeType":"YulFunctionCall","src":"6054:12:30"},"variableNames":[{"name":"end","nativeSrc":"6047:3:30","nodeType":"YulIdentifier","src":"6047:3:30"}]}]},"name":"abi_encode_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0_to_t_string_memory_ptr_fromStack","nativeSrc":"5706:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5840:3:30","nodeType":"YulTypedName","src":"5840:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5848:3:30","nodeType":"YulTypedName","src":"5848:3:30","type":""}],"src":"5706:366:30"},{"body":{"nativeSrc":"6249:248:30","nodeType":"YulBlock","src":"6249:248:30","statements":[{"nativeSrc":"6259:26:30","nodeType":"YulAssignment","src":"6259:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6271:9:30","nodeType":"YulIdentifier","src":"6271:9:30"},{"kind":"number","nativeSrc":"6282:2:30","nodeType":"YulLiteral","src":"6282:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6267:3:30","nodeType":"YulIdentifier","src":"6267:3:30"},"nativeSrc":"6267:18:30","nodeType":"YulFunctionCall","src":"6267:18:30"},"variableNames":[{"name":"tail","nativeSrc":"6259:4:30","nodeType":"YulIdentifier","src":"6259:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6306:9:30","nodeType":"YulIdentifier","src":"6306:9:30"},{"kind":"number","nativeSrc":"6317:1:30","nodeType":"YulLiteral","src":"6317:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6302:3:30","nodeType":"YulIdentifier","src":"6302:3:30"},"nativeSrc":"6302:17:30","nodeType":"YulFunctionCall","src":"6302:17:30"},{"arguments":[{"name":"tail","nativeSrc":"6325:4:30","nodeType":"YulIdentifier","src":"6325:4:30"},{"name":"headStart","nativeSrc":"6331:9:30","nodeType":"YulIdentifier","src":"6331:9:30"}],"functionName":{"name":"sub","nativeSrc":"6321:3:30","nodeType":"YulIdentifier","src":"6321:3:30"},"nativeSrc":"6321:20:30","nodeType":"YulFunctionCall","src":"6321:20:30"}],"functionName":{"name":"mstore","nativeSrc":"6295:6:30","nodeType":"YulIdentifier","src":"6295:6:30"},"nativeSrc":"6295:47:30","nodeType":"YulFunctionCall","src":"6295:47:30"},"nativeSrc":"6295:47:30","nodeType":"YulExpressionStatement","src":"6295:47:30"},{"nativeSrc":"6351:139:30","nodeType":"YulAssignment","src":"6351:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"6485:4:30","nodeType":"YulIdentifier","src":"6485:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0_to_t_string_memory_ptr_fromStack","nativeSrc":"6359:124:30","nodeType":"YulIdentifier","src":"6359:124:30"},"nativeSrc":"6359:131:30","nodeType":"YulFunctionCall","src":"6359:131:30"},"variableNames":[{"name":"tail","nativeSrc":"6351:4:30","nodeType":"YulIdentifier","src":"6351:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6078:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6229:9:30","nodeType":"YulTypedName","src":"6229:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6244:4:30","nodeType":"YulTypedName","src":"6244:4:30","type":""}],"src":"6078:419:30"},{"body":{"nativeSrc":"6609:142:30","nodeType":"YulBlock","src":"6609:142:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6631:6:30","nodeType":"YulIdentifier","src":"6631:6:30"},{"kind":"number","nativeSrc":"6639:1:30","nodeType":"YulLiteral","src":"6639:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6627:3:30","nodeType":"YulIdentifier","src":"6627:3:30"},"nativeSrc":"6627:14:30","nodeType":"YulFunctionCall","src":"6627:14:30"},{"hexValue":"436c696666206475726174696f6e206d757374206265206c657373207468616e","kind":"string","nativeSrc":"6643:34:30","nodeType":"YulLiteral","src":"6643:34:30","type":"","value":"Cliff duration must be less than"}],"functionName":{"name":"mstore","nativeSrc":"6620:6:30","nodeType":"YulIdentifier","src":"6620:6:30"},"nativeSrc":"6620:58:30","nodeType":"YulFunctionCall","src":"6620:58:30"},"nativeSrc":"6620:58:30","nodeType":"YulExpressionStatement","src":"6620:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6699:6:30","nodeType":"YulIdentifier","src":"6699:6:30"},{"kind":"number","nativeSrc":"6707:2:30","nodeType":"YulLiteral","src":"6707:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6695:3:30","nodeType":"YulIdentifier","src":"6695:3:30"},"nativeSrc":"6695:15:30","nodeType":"YulFunctionCall","src":"6695:15:30"},{"hexValue":"206f7220657175616c20746f2076657374696e67206475726174696f6e","kind":"string","nativeSrc":"6712:31:30","nodeType":"YulLiteral","src":"6712:31:30","type":"","value":" or equal to vesting duration"}],"functionName":{"name":"mstore","nativeSrc":"6688:6:30","nodeType":"YulIdentifier","src":"6688:6:30"},"nativeSrc":"6688:56:30","nodeType":"YulFunctionCall","src":"6688:56:30"},"nativeSrc":"6688:56:30","nodeType":"YulExpressionStatement","src":"6688:56:30"}]},"name":"store_literal_in_memory_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b","nativeSrc":"6503:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6601:6:30","nodeType":"YulTypedName","src":"6601:6:30","type":""}],"src":"6503:248:30"},{"body":{"nativeSrc":"6903:220:30","nodeType":"YulBlock","src":"6903:220:30","statements":[{"nativeSrc":"6913:74:30","nodeType":"YulAssignment","src":"6913:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"6979:3:30","nodeType":"YulIdentifier","src":"6979:3:30"},{"kind":"number","nativeSrc":"6984:2:30","nodeType":"YulLiteral","src":"6984:2:30","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6920:58:30","nodeType":"YulIdentifier","src":"6920:58:30"},"nativeSrc":"6920:67:30","nodeType":"YulFunctionCall","src":"6920:67:30"},"variableNames":[{"name":"pos","nativeSrc":"6913:3:30","nodeType":"YulIdentifier","src":"6913:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7085:3:30","nodeType":"YulIdentifier","src":"7085:3:30"}],"functionName":{"name":"store_literal_in_memory_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b","nativeSrc":"6996:88:30","nodeType":"YulIdentifier","src":"6996:88:30"},"nativeSrc":"6996:93:30","nodeType":"YulFunctionCall","src":"6996:93:30"},"nativeSrc":"6996:93:30","nodeType":"YulExpressionStatement","src":"6996:93:30"},{"nativeSrc":"7098:19:30","nodeType":"YulAssignment","src":"7098:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"7109:3:30","nodeType":"YulIdentifier","src":"7109:3:30"},{"kind":"number","nativeSrc":"7114:2:30","nodeType":"YulLiteral","src":"7114:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7105:3:30","nodeType":"YulIdentifier","src":"7105:3:30"},"nativeSrc":"7105:12:30","nodeType":"YulFunctionCall","src":"7105:12:30"},"variableNames":[{"name":"end","nativeSrc":"7098:3:30","nodeType":"YulIdentifier","src":"7098:3:30"}]}]},"name":"abi_encode_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b_to_t_string_memory_ptr_fromStack","nativeSrc":"6757:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6891:3:30","nodeType":"YulTypedName","src":"6891:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6899:3:30","nodeType":"YulTypedName","src":"6899:3:30","type":""}],"src":"6757:366:30"},{"body":{"nativeSrc":"7300:248:30","nodeType":"YulBlock","src":"7300:248:30","statements":[{"nativeSrc":"7310:26:30","nodeType":"YulAssignment","src":"7310:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"7322:9:30","nodeType":"YulIdentifier","src":"7322:9:30"},{"kind":"number","nativeSrc":"7333:2:30","nodeType":"YulLiteral","src":"7333:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7318:3:30","nodeType":"YulIdentifier","src":"7318:3:30"},"nativeSrc":"7318:18:30","nodeType":"YulFunctionCall","src":"7318:18:30"},"variableNames":[{"name":"tail","nativeSrc":"7310:4:30","nodeType":"YulIdentifier","src":"7310:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7357:9:30","nodeType":"YulIdentifier","src":"7357:9:30"},{"kind":"number","nativeSrc":"7368:1:30","nodeType":"YulLiteral","src":"7368:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7353:3:30","nodeType":"YulIdentifier","src":"7353:3:30"},"nativeSrc":"7353:17:30","nodeType":"YulFunctionCall","src":"7353:17:30"},{"arguments":[{"name":"tail","nativeSrc":"7376:4:30","nodeType":"YulIdentifier","src":"7376:4:30"},{"name":"headStart","nativeSrc":"7382:9:30","nodeType":"YulIdentifier","src":"7382:9:30"}],"functionName":{"name":"sub","nativeSrc":"7372:3:30","nodeType":"YulIdentifier","src":"7372:3:30"},"nativeSrc":"7372:20:30","nodeType":"YulFunctionCall","src":"7372:20:30"}],"functionName":{"name":"mstore","nativeSrc":"7346:6:30","nodeType":"YulIdentifier","src":"7346:6:30"},"nativeSrc":"7346:47:30","nodeType":"YulFunctionCall","src":"7346:47:30"},"nativeSrc":"7346:47:30","nodeType":"YulExpressionStatement","src":"7346:47:30"},{"nativeSrc":"7402:139:30","nodeType":"YulAssignment","src":"7402:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"7536:4:30","nodeType":"YulIdentifier","src":"7536:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b_to_t_string_memory_ptr_fromStack","nativeSrc":"7410:124:30","nodeType":"YulIdentifier","src":"7410:124:30"},"nativeSrc":"7410:131:30","nodeType":"YulFunctionCall","src":"7410:131:30"},"variableNames":[{"name":"tail","nativeSrc":"7402:4:30","nodeType":"YulIdentifier","src":"7402:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7129:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7280:9:30","nodeType":"YulTypedName","src":"7280:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7295:4:30","nodeType":"YulTypedName","src":"7295:4:30","type":""}],"src":"7129:419:30"},{"body":{"nativeSrc":"7608:32:30","nodeType":"YulBlock","src":"7608:32:30","statements":[{"nativeSrc":"7618:16:30","nodeType":"YulAssignment","src":"7618:16:30","value":{"name":"value","nativeSrc":"7629:5:30","nodeType":"YulIdentifier","src":"7629:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"7618:7:30","nodeType":"YulIdentifier","src":"7618:7:30"}]}]},"name":"cleanup_t_rational_64_by_1","nativeSrc":"7554:86:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7590:5:30","nodeType":"YulTypedName","src":"7590:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7600:7:30","nodeType":"YulTypedName","src":"7600:7:30","type":""}],"src":"7554:86:30"},{"body":{"nativeSrc":"7689:43:30","nodeType":"YulBlock","src":"7689:43:30","statements":[{"nativeSrc":"7699:27:30","nodeType":"YulAssignment","src":"7699:27:30","value":{"arguments":[{"name":"value","nativeSrc":"7714:5:30","nodeType":"YulIdentifier","src":"7714:5:30"},{"kind":"number","nativeSrc":"7721:4:30","nodeType":"YulLiteral","src":"7721:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7710:3:30","nodeType":"YulIdentifier","src":"7710:3:30"},"nativeSrc":"7710:16:30","nodeType":"YulFunctionCall","src":"7710:16:30"},"variableNames":[{"name":"cleaned","nativeSrc":"7699:7:30","nodeType":"YulIdentifier","src":"7699:7:30"}]}]},"name":"cleanup_t_uint8","nativeSrc":"7646:86:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7671:5:30","nodeType":"YulTypedName","src":"7671:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7681:7:30","nodeType":"YulTypedName","src":"7681:7:30","type":""}],"src":"7646:86:30"},{"body":{"nativeSrc":"7770:28:30","nodeType":"YulBlock","src":"7770:28:30","statements":[{"nativeSrc":"7780:12:30","nodeType":"YulAssignment","src":"7780:12:30","value":{"name":"value","nativeSrc":"7787:5:30","nodeType":"YulIdentifier","src":"7787:5:30"},"variableNames":[{"name":"ret","nativeSrc":"7780:3:30","nodeType":"YulIdentifier","src":"7780:3:30"}]}]},"name":"identity","nativeSrc":"7738:60:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7756:5:30","nodeType":"YulTypedName","src":"7756:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"7766:3:30","nodeType":"YulTypedName","src":"7766:3:30","type":""}],"src":"7738:60:30"},{"body":{"nativeSrc":"7871:89:30","nodeType":"YulBlock","src":"7871:89:30","statements":[{"nativeSrc":"7881:73:30","nodeType":"YulAssignment","src":"7881:73:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7946:5:30","nodeType":"YulIdentifier","src":"7946:5:30"}],"functionName":{"name":"cleanup_t_rational_64_by_1","nativeSrc":"7919:26:30","nodeType":"YulIdentifier","src":"7919:26:30"},"nativeSrc":"7919:33:30","nodeType":"YulFunctionCall","src":"7919:33:30"}],"functionName":{"name":"identity","nativeSrc":"7910:8:30","nodeType":"YulIdentifier","src":"7910:8:30"},"nativeSrc":"7910:43:30","nodeType":"YulFunctionCall","src":"7910:43:30"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"7894:15:30","nodeType":"YulIdentifier","src":"7894:15:30"},"nativeSrc":"7894:60:30","nodeType":"YulFunctionCall","src":"7894:60:30"},"variableNames":[{"name":"converted","nativeSrc":"7881:9:30","nodeType":"YulIdentifier","src":"7881:9:30"}]}]},"name":"convert_t_rational_64_by_1_to_t_uint8","nativeSrc":"7804:156:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7851:5:30","nodeType":"YulTypedName","src":"7851:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"7861:9:30","nodeType":"YulTypedName","src":"7861:9:30","type":""}],"src":"7804:156:30"},{"body":{"nativeSrc":"8038:73:30","nodeType":"YulBlock","src":"8038:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8055:3:30","nodeType":"YulIdentifier","src":"8055:3:30"},{"arguments":[{"name":"value","nativeSrc":"8098:5:30","nodeType":"YulIdentifier","src":"8098:5:30"}],"functionName":{"name":"convert_t_rational_64_by_1_to_t_uint8","nativeSrc":"8060:37:30","nodeType":"YulIdentifier","src":"8060:37:30"},"nativeSrc":"8060:44:30","nodeType":"YulFunctionCall","src":"8060:44:30"}],"functionName":{"name":"mstore","nativeSrc":"8048:6:30","nodeType":"YulIdentifier","src":"8048:6:30"},"nativeSrc":"8048:57:30","nodeType":"YulFunctionCall","src":"8048:57:30"},"nativeSrc":"8048:57:30","nodeType":"YulExpressionStatement","src":"8048:57:30"}]},"name":"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack","nativeSrc":"7966:145:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8026:5:30","nodeType":"YulTypedName","src":"8026:5:30","type":""},{"name":"pos","nativeSrc":"8033:3:30","nodeType":"YulTypedName","src":"8033:3:30","type":""}],"src":"7966:145:30"},{"body":{"nativeSrc":"8162:32:30","nodeType":"YulBlock","src":"8162:32:30","statements":[{"nativeSrc":"8172:16:30","nodeType":"YulAssignment","src":"8172:16:30","value":{"name":"value","nativeSrc":"8183:5:30","nodeType":"YulIdentifier","src":"8183:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"8172:7:30","nodeType":"YulIdentifier","src":"8172:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"8117:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8144:5:30","nodeType":"YulTypedName","src":"8144:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8154:7:30","nodeType":"YulTypedName","src":"8154:7:30","type":""}],"src":"8117:77:30"},{"body":{"nativeSrc":"8265:53:30","nodeType":"YulBlock","src":"8265:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8282:3:30","nodeType":"YulIdentifier","src":"8282:3:30"},{"arguments":[{"name":"value","nativeSrc":"8305:5:30","nodeType":"YulIdentifier","src":"8305:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8287:17:30","nodeType":"YulIdentifier","src":"8287:17:30"},"nativeSrc":"8287:24:30","nodeType":"YulFunctionCall","src":"8287:24:30"}],"functionName":{"name":"mstore","nativeSrc":"8275:6:30","nodeType":"YulIdentifier","src":"8275:6:30"},"nativeSrc":"8275:37:30","nodeType":"YulFunctionCall","src":"8275:37:30"},"nativeSrc":"8275:37:30","nodeType":"YulExpressionStatement","src":"8275:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8200:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8253:5:30","nodeType":"YulTypedName","src":"8253:5:30","type":""},{"name":"pos","nativeSrc":"8260:3:30","nodeType":"YulTypedName","src":"8260:3:30","type":""}],"src":"8200:118:30"},{"body":{"nativeSrc":"8457:213:30","nodeType":"YulBlock","src":"8457:213:30","statements":[{"nativeSrc":"8467:26:30","nodeType":"YulAssignment","src":"8467:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"8479:9:30","nodeType":"YulIdentifier","src":"8479:9:30"},{"kind":"number","nativeSrc":"8490:2:30","nodeType":"YulLiteral","src":"8490:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8475:3:30","nodeType":"YulIdentifier","src":"8475:3:30"},"nativeSrc":"8475:18:30","nodeType":"YulFunctionCall","src":"8475:18:30"},"variableNames":[{"name":"tail","nativeSrc":"8467:4:30","nodeType":"YulIdentifier","src":"8467:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8554:6:30","nodeType":"YulIdentifier","src":"8554:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8567:9:30","nodeType":"YulIdentifier","src":"8567:9:30"},{"kind":"number","nativeSrc":"8578:1:30","nodeType":"YulLiteral","src":"8578:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8563:3:30","nodeType":"YulIdentifier","src":"8563:3:30"},"nativeSrc":"8563:17:30","nodeType":"YulFunctionCall","src":"8563:17:30"}],"functionName":{"name":"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack","nativeSrc":"8503:50:30","nodeType":"YulIdentifier","src":"8503:50:30"},"nativeSrc":"8503:78:30","nodeType":"YulFunctionCall","src":"8503:78:30"},"nativeSrc":"8503:78:30","nodeType":"YulExpressionStatement","src":"8503:78:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8635:6:30","nodeType":"YulIdentifier","src":"8635:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"8648:9:30","nodeType":"YulIdentifier","src":"8648:9:30"},{"kind":"number","nativeSrc":"8659:2:30","nodeType":"YulLiteral","src":"8659:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8644:3:30","nodeType":"YulIdentifier","src":"8644:3:30"},"nativeSrc":"8644:18:30","nodeType":"YulFunctionCall","src":"8644:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8591:43:30","nodeType":"YulIdentifier","src":"8591:43:30"},"nativeSrc":"8591:72:30","nodeType":"YulFunctionCall","src":"8591:72:30"},"nativeSrc":"8591:72:30","nodeType":"YulExpressionStatement","src":"8591:72:30"}]},"name":"abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"8324:346:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8421:9:30","nodeType":"YulTypedName","src":"8421:9:30","type":""},{"name":"value1","nativeSrc":"8433:6:30","nodeType":"YulTypedName","src":"8433:6:30","type":""},{"name":"value0","nativeSrc":"8441:6:30","nodeType":"YulTypedName","src":"8441:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8452:4:30","nodeType":"YulTypedName","src":"8452:4:30","type":""}],"src":"8324:346:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Beneficiary address cannot be ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function abi_encode_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b613c0e823879ba589a69ed4a0e4385a43e570d7c09a2cb4ad6b2d6cc01bbebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start timestamp must be in the f\")\n\n        mstore(add(memPtr, 32), \"uture\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b1b37e55344e3feca66407cadf70f5376a02c5cae795ad9767f859b36e5d9a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting duration must be greater\")\n\n        mstore(add(memPtr, 32), \" than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0bdfbacff3effd4c615b6cbca46f8ebc6de7ab0041f4d06cd0b8270999da15d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cliff duration must be less than\")\n\n        mstore(add(memPtr, 32), \" or equal to vesting duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4292c9ebdd2d184fcaa8c7b006ac86d8e9a315101b8227186d52d0f9c09c8e2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_64_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_64_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_64_by_1(value)))\n    }\n\n    function abi_encode_t_rational_64_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_64_by_1_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_64_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b5060405162001bf138038062001bf1833981810160405281019062000037919062000538565b8084848482600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a89190620005bb565b60405180910390fd5b620000c2816200033e60201b60201c565b508167ffffffffffffffff1660808167ffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff16815250505050506200010e6200040260201b60201c565b8167ffffffffffffffff16111562000180578062000141620001356200040260201b60201c565b6200041660201b60201c565b6040517f3be3ef5000000000000000000000000000000000000000000000000000000000815260040162000177929190620005e9565b60405180910390fd5b80620001a1620001956200047560201b60201c565b6200041660201b60201c565b620001ad919062000645565b67ffffffffffffffff1660c08167ffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000232906200070f565b60405180910390fd5b428367ffffffffffffffff16116200028a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028190620007a7565b60405180910390fd5b60008267ffffffffffffffff1611620002da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002d1906200083f565b60405180910390fd5b8167ffffffffffffffff168167ffffffffffffffff16111562000334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032b90620008d7565b60405180910390fd5b505050506200099b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060a05167ffffffffffffffff16905090565b600067ffffffffffffffff80168211156200046d576040826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401620004649291906200096e565b60405180910390fd5b819050919050565b600060805167ffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004bb826200048e565b9050919050565b620004cd81620004ae565b8114620004d957600080fd5b50565b600081519050620004ed81620004c2565b92915050565b600067ffffffffffffffff82169050919050565b6200051281620004f3565b81146200051e57600080fd5b50565b600081519050620005328162000507565b92915050565b6000806000806080858703121562000555576200055462000489565b5b60006200056587828801620004dc565b9450506020620005788782880162000521565b93505060406200058b8782880162000521565b92505060606200059e8782880162000521565b91505092959194509250565b620005b581620004ae565b82525050565b6000602082019050620005d26000830184620005aa565b92915050565b620005e381620004f3565b82525050565b6000604082019050620006006000830185620005d8565b6200060f6020830184620005d8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200065282620004f3565b91506200065f83620004f3565b9250828201905067ffffffffffffffff81111562000682576200068162000616565b5b92915050565b600082825260208201905092915050565b7f42656e656669636961727920616464726573732063616e6e6f74206265207a6560008201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b6000620006f760228362000688565b9150620007048262000699565b604082019050919050565b600060208201905081810360008301526200072a81620006e8565b9050919050565b7f53746172742074696d657374616d70206d75737420626520696e20746865206660008201527f7574757265000000000000000000000000000000000000000000000000000000602082015250565b60006200078f60258362000688565b91506200079c8262000731565b604082019050919050565b60006020820190508181036000830152620007c28162000780565b9050919050565b7f56657374696e67206475726174696f6e206d757374206265206772656174657260008201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b600062000827602a8362000688565b91506200083482620007c9565b604082019050919050565b600060208201905081810360008301526200085a8162000818565b9050919050565b7f436c696666206475726174696f6e206d757374206265206c657373207468616e60008201527f206f7220657175616c20746f2076657374696e67206475726174696f6e000000602082015250565b6000620008bf603d8362000688565b9150620008cc8262000861565b604082019050919050565b60006020820190508181036000830152620008f281620008b0565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006200093b620009356200092f84620008f9565b62000910565b62000903565b9050919050565b6200094d816200091a565b82525050565b6000819050919050565b620009688162000953565b82525050565b600060408201905062000985600083018562000942565b6200099460208301846200095d565b9392505050565b60805160a05160c051611226620009cb60003960006103f4015260006103c2015260006106b301526112266000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063be9a655511610059578063be9a6555146102ef578063efbe1c1c1461031a578063f2fde38b14610345578063fbccedae1461036e576100f3565b80638da5cb5b1461021f578063961325211461024a5780639852595c14610275578063a3f8eace146102b2576100f3565b806319165587116100c6578063191655871461018b578063715018a6146101b4578063810ec23b146101cb57806386d1a69f14610208576100f3565b80630a17b06b146100f85780630fb5a6b41461013557806313d033c014610160576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190610db7565b610399565b60405161012c9190610dfd565b60405180910390f35b34801561014157600080fd5b5061014a6103be565b6040516101579190610dfd565b60405180910390f35b34801561016c57600080fd5b506101756103f0565b6040516101829190610dfd565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190610e76565b610422565b005b3480156101c057600080fd5b506101c96104e9565b005b3480156101d757600080fd5b506101f260048036038101906101ed9190610ea3565b6104fd565b6040516101ff9190610dfd565b60405180910390f35b34801561021457600080fd5b5061021d61059d565b005b34801561022b57600080fd5b5061023461060d565b6040516102419190610ef2565b60405180910390f35b34801561025657600080fd5b5061025f610636565b60405161026c9190610dfd565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190610e76565b610640565b6040516102a99190610dfd565b60405180910390f35b3480156102be57600080fd5b506102d960048036038101906102d49190610e76565b610689565b6040516102e69190610dfd565b60405180910390f35b3480156102fb57600080fd5b506103046106af565b6040516103119190610dfd565b60405180910390f35b34801561032657600080fd5b5061032f6106e1565b60405161033c9190610dfd565b60405180910390f35b34801561035157600080fd5b5061036c60048036038101906103679190610e76565b610702565b005b34801561037a57600080fd5b50610383610788565b6040516103909190610dfd565b60405180910390f35b60006103b76103a6610636565b476103b19190610f3c565b836107aa565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061042d82610689565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461047e9190610f3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104cb9190610dfd565b60405180910390a26104e5826104df61060d565b836107de565b5050565b6104f161085d565b6104fb60006108e4565b565b600061059561050b84610640565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105449190610ef2565b602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610f9c565b61058f9190610f3c565b836107aa565b905092915050565b60006105a7610788565b905080600160008282546105bb9190610f3c565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105f19190610dfd565b60405180910390a161060a61060461060d565b826109a8565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061069482610640565b61069e83426104fd565b6106a89190610fc9565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006106eb6103be565b6106f36106af565b6106fd9190610f3c565b905090565b61070a61085d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107739190610ef2565b60405180910390fd5b610785816108e4565b50565b6000610792610636565b61079b42610399565b6107a59190610fc9565b905090565b60006107b46103f0565b8267ffffffffffffffff16106107d3576107ce8383610a95565b6107d6565b60005b905092915050565b610858838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610811929190610ffd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b1c565b505050565b610865610bb3565b73ffffffffffffffffffffffffffffffffffffffff1661088361060d565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576108a6610bb3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d99190610ef2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109ed57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109e49190610ef2565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610a1390611057565b60006040518083038185875af1925050503d8060008114610a50576040519150601f19603f3d011682016040523d82523d6000602084013e610a55565b606091505b5050905080610a90576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610a9f6106af565b8267ffffffffffffffff161015610ab95760009050610b16565b610ac16106e1565b8267ffffffffffffffff1610610ad957829050610b16565b610ae16103be565b610ae96106af565b8367ffffffffffffffff16610afe9190610fc9565b84610b09919061106c565b610b1391906110dd565b90505b92915050565b6000610b47828473ffffffffffffffffffffffffffffffffffffffff16610bbb90919063ffffffff16565b90506000815114158015610b6c575080806020019051810190610b6a9190611146565b155b15610bae57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610ba59190610ef2565b60405180910390fd5b505050565b600033905090565b6060610bc983836000610bd1565b905092915050565b606081471015610c1857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610c0f9190610ef2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610c4191906111d9565b60006040518083038185875af1925050503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b5091509150610c93868383610c9e565b925050509392505050565b606082610cb357610cae82610d2d565b610d25565b60008251148015610cdb575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610d1d57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610d149190610ef2565b60405180910390fd5b819050610d26565b5b9392505050565b600081511115610d405780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610d9481610d77565b8114610d9f57600080fd5b50565b600081359050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc610d72565b5b6000610ddb84828501610da2565b91505092915050565b6000819050919050565b610df781610de4565b82525050565b6000602082019050610e126000830184610dee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4382610e18565b9050919050565b610e5381610e38565b8114610e5e57600080fd5b50565b600081359050610e7081610e4a565b92915050565b600060208284031215610e8c57610e8b610d72565b5b6000610e9a84828501610e61565b91505092915050565b60008060408385031215610eba57610eb9610d72565b5b6000610ec885828601610e61565b9250506020610ed985828601610da2565b9150509250929050565b610eec81610e38565b82525050565b6000602082019050610f076000830184610ee3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4782610de4565b9150610f5283610de4565b9250828201905080821115610f6a57610f69610f0d565b5b92915050565b610f7981610de4565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600060208284031215610fb257610fb1610d72565b5b6000610fc084828501610f87565b91505092915050565b6000610fd482610de4565b9150610fdf83610de4565b9250828203905081811115610ff757610ff6610f0d565b5b92915050565b60006040820190506110126000830185610ee3565b61101f6020830184610dee565b9392505050565b600081905092915050565b50565b6000611041600083611026565b915061104c82611031565b600082019050919050565b600061106282611034565b9150819050919050565b600061107782610de4565b915061108283610de4565b925082820261109081610de4565b915082820484148315176110a7576110a6610f0d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110e882610de4565b91506110f383610de4565b925082611103576111026110ae565b5b828204905092915050565b60008115159050919050565b6111238161110e565b811461112e57600080fd5b50565b6000815190506111408161111a565b92915050565b60006020828403121561115c5761115b610d72565b5b600061116a84828501611131565b91505092915050565b600081519050919050565b60005b8381101561119c578082015181840152602081019050611181565b60008484015250505050565b60006111b382611173565b6111bd8185611026565b93506111cd81856020860161117e565b80840191505092915050565b60006111e582846111a8565b91508190509291505056fea26469706673582212200e4fdcc0d11e38f965e10c67cb2120229f3b5056e93cce0e80801ecdb217509f64736f6c63430008180033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BF1 CODESIZE SUB DUP1 PUSH3 0x1BF1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x538 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP5 DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x33E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x10E PUSH3 0x402 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH3 0x180 JUMPI DUP1 PUSH3 0x141 PUSH3 0x135 PUSH3 0x402 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x416 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3BE3EF5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x177 SWAP3 SWAP2 SWAP1 PUSH3 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x1A1 PUSH3 0x195 PUSH3 0x475 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x416 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1AD SWAP2 SWAP1 PUSH3 0x645 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x23B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x232 SWAP1 PUSH3 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH3 0x28A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x281 SWAP1 PUSH3 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH3 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D1 SWAP1 PUSH3 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH3 0x334 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x32B SWAP1 PUSH3 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP PUSH3 0x99B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x46D JUMPI PUSH1 0x40 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x464 SWAP3 SWAP2 SWAP1 PUSH3 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BB DUP3 PUSH3 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4CD DUP2 PUSH3 0x4AE JUMP JUMPDEST DUP2 EQ PUSH3 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4ED DUP2 PUSH3 0x4C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x512 DUP2 PUSH3 0x4F3 JUMP JUMPDEST DUP2 EQ PUSH3 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x532 DUP2 PUSH3 0x507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x555 JUMPI PUSH3 0x554 PUSH3 0x489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x565 DUP8 DUP3 DUP9 ADD PUSH3 0x4DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x578 DUP8 DUP3 DUP9 ADD PUSH3 0x521 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x58B DUP8 DUP3 DUP9 ADD PUSH3 0x521 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x59E DUP8 DUP3 DUP9 ADD PUSH3 0x521 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x5B5 DUP2 PUSH3 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5E3 DUP2 PUSH3 0x4F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x600 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x5D8 JUMP JUMPDEST PUSH3 0x60F PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x5D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x652 DUP3 PUSH3 0x4F3 JUMP JUMPDEST SWAP2 POP PUSH3 0x65F DUP4 PUSH3 0x4F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x682 JUMPI PUSH3 0x681 PUSH3 0x616 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42656E656669636961727920616464726573732063616E6E6F74206265207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F7 PUSH1 0x22 DUP4 PUSH3 0x688 JUMP JUMPDEST SWAP2 POP PUSH3 0x704 DUP3 PUSH3 0x699 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x72A DUP2 PUSH3 0x6E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D657374616D70206D75737420626520696E207468652066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574757265000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78F PUSH1 0x25 DUP4 PUSH3 0x688 JUMP JUMPDEST SWAP2 POP PUSH3 0x79C DUP3 PUSH3 0x731 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7C2 DUP2 PUSH3 0x780 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67206475726174696F6E206D7573742062652067726561746572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207468616E207A65726F00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x827 PUSH1 0x2A DUP4 PUSH3 0x688 JUMP JUMPDEST SWAP2 POP PUSH3 0x834 DUP3 PUSH3 0x7C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x85A DUP2 PUSH3 0x818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C696666206475726174696F6E206D757374206265206C657373207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F7220657175616C20746F2076657374696E67206475726174696F6E000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8BF PUSH1 0x3D DUP4 PUSH3 0x688 JUMP JUMPDEST SWAP2 POP PUSH3 0x8CC DUP3 PUSH3 0x861 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8F2 DUP2 PUSH3 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93B PUSH3 0x935 PUSH3 0x92F DUP5 PUSH3 0x8F9 JUMP JUMPDEST PUSH3 0x910 JUMP JUMPDEST PUSH3 0x903 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x94D DUP2 PUSH3 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x968 DUP2 PUSH3 0x953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x985 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x942 JUMP JUMPDEST PUSH3 0x994 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x95D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1226 PUSH3 0x9CB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3F4 ADD MSTORE PUSH1 0x0 PUSH2 0x3C2 ADD MSTORE PUSH1 0x0 PUSH2 0x6B3 ADD MSTORE PUSH2 0x1226 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x36E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x2B2 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x208 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x160 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3B7 PUSH2 0x3A6 PUSH2 0x636 JUMP JUMPDEST SELFBALANCE PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4E5 DUP3 PUSH2 0x4DF PUSH2 0x60D JUMP JUMPDEST DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x8E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH2 0x50B DUP5 PUSH2 0x640 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x60A PUSH2 0x604 PUSH2 0x60D JUMP JUMPDEST DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x69E DUP4 TIMESTAMP PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70A PUSH2 0x85D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x792 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x79B TIMESTAMP PUSH2 0x399 JUMP JUMPDEST PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B4 PUSH2 0x3F0 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x7D3 JUMPI PUSH2 0x7CE DUP4 DUP4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x858 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP3 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9ED JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x6AF JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0x6E1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xAD9 JUMPI DUP3 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x6AF JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBAE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xC18 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC93 DUP7 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCAE DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xCDB JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD1D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xD26 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD40 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH2 0xEB9 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF79 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP5 DUP3 DUP6 ADD PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDF DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1012 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x0 DUP4 PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1090 DUP2 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10E8 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1123 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1140 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B3 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x11BD DUP2 DUP6 PUSH2 0x1026 JUMP JUMPDEST SWAP4 POP PUSH2 0x11CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 DUP3 DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x4F 0xDC 0xC0 0xD1 0x1E CODESIZE 0xF9 PUSH6 0xE10C67CB2120 0x22 SWAP16 EXTCODESIZE POP JUMP 0xE9 EXTCODECOPY 0xCE 0xE DUP1 DUP1 0x1E 0xCD 0xB2 OR POP SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:687:28:-:0;;;242:632;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;476:12;403:11;416:14;432:15;2239:11:3;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2271:14:3::1;2262:23;;;;;;;;::::0;::::1;2307:15;2295:27;;;;;;;;::::0;::::1;2143:186:::0;;;728:10:29;:8;;;:10;;:::i;:::-;713:12;:25;;;709:120;;;782:12;796:21;:10;:8;;;:10;;:::i;:::-;:19;;;:21;;:::i;:::-;761:57;;;;;;;;;;;;:::i;:::-;;;;;;;;709:120;868:12;847:18;:7;:5;;;:7;;:::i;:::-;:16;;;:18;;:::i;:::-;:33;;;;:::i;:::-;838:42;;;;;;;;;;666:221;535:1:28::2;512:25;;:11;:25;;::::0;504:72:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;611:15;594:14;:32;;;586:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;704:1;686:15;:19;;;678:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;786:15;770:31;;:12;:31;;;;762:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;242:632:::0;;;;189:687;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2662:91:3:-;2711:7;2737:9;;2730:16;;;;2662:91;:::o;13291:213:24:-;13347:6;13377:16;13369:24;;:5;:24;13365:103;;;13447:2;13451:5;13416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;13365:103;13491:5;13477:20;;13291:213;;;:::o;2510:85:3:-;2556:7;2582:6;;2575:13;;;;2510:85;:::o;88:117:30:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:814::-;1319:6;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:63;1738:7;1729:6;1718:9;1714:22;1683:63;:::i;:::-;1673:73;;1628:128;1795:2;1821:63;1876:7;1867:6;1856:9;1852:22;1821:63;:::i;:::-;1811:73;;1766:128;1933:2;1959:63;2014:7;2005:6;1994:9;1990:22;1959:63;:::i;:::-;1949:73;;1904:128;1225:814;;;;;;;:::o;2045:118::-;2132:24;2150:5;2132:24;:::i;:::-;2127:3;2120:37;2045:118;;:::o;2169:222::-;2262:4;2300:2;2289:9;2285:18;2277:26;;2313:71;2381:1;2370:9;2366:17;2357:6;2313:71;:::i;:::-;2169:222;;;;:::o;2397:115::-;2482:23;2499:5;2482:23;:::i;:::-;2477:3;2470:36;2397:115;;:::o;2518:324::-;2635:4;2673:2;2662:9;2658:18;2650:26;;2686:69;2752:1;2741:9;2737:17;2728:6;2686:69;:::i;:::-;2765:70;2831:2;2820:9;2816:18;2807:6;2765:70;:::i;:::-;2518:324;;;;;:::o;2848:180::-;2896:77;2893:1;2886:88;2993:4;2990:1;2983:15;3017:4;3014:1;3007:15;3034:205;3073:3;3092:19;3109:1;3092:19;:::i;:::-;3087:24;;3125:19;3142:1;3125:19;:::i;:::-;3120:24;;3167:1;3164;3160:9;3153:16;;3190:18;3185:3;3182:27;3179:53;;;3212:18;;:::i;:::-;3179:53;3034:205;;;;:::o;3245:169::-;3329:11;3363:6;3358:3;3351:19;3403:4;3398:3;3394:14;3379:29;;3245:169;;;;:::o;3420:221::-;3560:34;3556:1;3548:6;3544:14;3537:58;3629:4;3624:2;3616:6;3612:15;3605:29;3420:221;:::o;3647:366::-;3789:3;3810:67;3874:2;3869:3;3810:67;:::i;:::-;3803:74;;3886:93;3975:3;3886:93;:::i;:::-;4004:2;3999:3;3995:12;3988:19;;3647:366;;;:::o;4019:419::-;4185:4;4223:2;4212:9;4208:18;4200:26;;4272:9;4266:4;4262:20;4258:1;4247:9;4243:17;4236:47;4300:131;4426:4;4300:131;:::i;:::-;4292:139;;4019:419;;;:::o;4444:224::-;4584:34;4580:1;4572:6;4568:14;4561:58;4653:7;4648:2;4640:6;4636:15;4629:32;4444:224;:::o;4674:366::-;4816:3;4837:67;4901:2;4896:3;4837:67;:::i;:::-;4830:74;;4913:93;5002:3;4913:93;:::i;:::-;5031:2;5026:3;5022:12;5015:19;;4674:366;;;:::o;5046:419::-;5212:4;5250:2;5239:9;5235:18;5227:26;;5299:9;5293:4;5289:20;5285:1;5274:9;5270:17;5263:47;5327:131;5453:4;5327:131;:::i;:::-;5319:139;;5046:419;;;:::o;5471:229::-;5611:34;5607:1;5599:6;5595:14;5588:58;5680:12;5675:2;5667:6;5663:15;5656:37;5471:229;:::o;5706:366::-;5848:3;5869:67;5933:2;5928:3;5869:67;:::i;:::-;5862:74;;5945:93;6034:3;5945:93;:::i;:::-;6063:2;6058:3;6054:12;6047:19;;5706:366;;;:::o;6078:419::-;6244:4;6282:2;6271:9;6267:18;6259:26;;6331:9;6325:4;6321:20;6317:1;6306:9;6302:17;6295:47;6359:131;6485:4;6359:131;:::i;:::-;6351:139;;6078:419;;;:::o;6503:248::-;6643:34;6639:1;6631:6;6627:14;6620:58;6712:31;6707:2;6699:6;6695:15;6688:56;6503:248;:::o;6757:366::-;6899:3;6920:67;6984:2;6979:3;6920:67;:::i;:::-;6913:74;;6996:93;7085:3;6996:93;:::i;:::-;7114:2;7109:3;7105:12;7098:19;;6757:366;;;:::o;7129:419::-;7295:4;7333:2;7322:9;7318:18;7310:26;;7382:9;7376:4;7372:20;7368:1;7357:9;7353:17;7346:47;7410:131;7536:4;7410:131;:::i;:::-;7402:139;;7129:419;;;:::o;7554:86::-;7600:7;7629:5;7618:16;;7554:86;;;:::o;7646:::-;7681:7;7721:4;7714:5;7710:16;7699:27;;7646:86;;;:::o;7738:60::-;7766:3;7787:5;7780:12;;7738:60;;;:::o;7804:156::-;7861:9;7894:60;7910:43;7919:33;7946:5;7919:33;:::i;:::-;7910:43;:::i;:::-;7894:60;:::i;:::-;7881:73;;7804:156;;;:::o;7966:145::-;8060:44;8098:5;8060:44;:::i;:::-;8055:3;8048:57;7966:145;;:::o;8117:77::-;8154:7;8183:5;8172:16;;8117:77;;;:::o;8200:118::-;8287:24;8305:5;8287:24;:::i;:::-;8282:3;8275:37;8200:118;;:::o;8324:346::-;8452:4;8490:2;8479:9;8475:18;8467:26;;8503:78;8578:1;8567:9;8563:17;8554:6;8503:78;:::i;:::-;8591:72;8659:2;8648:9;8644:18;8635:6;8591:72;:::i;:::-;8324:346;;;;;:::o;189:687:28:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_590":{"entryPoint":null,"id":590,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_2048":{"entryPoint":2844,"id":2048,"parameterSlots":2,"returnSlots":0},"@_checkOwner_463":{"entryPoint":2141,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_2363":{"entryPoint":2995,"id":2363,"parameterSlots":0,"returnSlots":1},"@_revert_2350":{"entryPoint":3373,"id":2350,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":2276,"id":525,"parameterSlots":1,"returnSlots":0},"@_vestingSchedule_8185":{"entryPoint":1962,"id":8185,"parameterSlots":2,"returnSlots":1},"@_vestingSchedule_836":{"entryPoint":2709,"id":836,"parameterSlots":2,"returnSlots":1},"@cliff_8161":{"entryPoint":1008,"id":8161,"parameterSlots":0,"returnSlots":1},"@duration_608":{"entryPoint":958,"id":608,"parameterSlots":0,"returnSlots":1},"@end_621":{"entryPoint":1761,"id":621,"parameterSlots":0,"returnSlots":1},"@functionCallWithValue_2218":{"entryPoint":3025,"id":2218,"parameterSlots":3,"returnSlots":1},"@functionCall_2172":{"entryPoint":3003,"id":2172,"parameterSlots":2,"returnSlots":1},"@owner_446":{"entryPoint":1549,"id":446,"parameterSlots":0,"returnSlots":1},"@releasable_661":{"entryPoint":1928,"id":661,"parameterSlots":0,"returnSlots":1},"@releasable_683":{"entryPoint":1673,"id":683,"parameterSlots":1,"returnSlots":1},"@release_712":{"entryPoint":1437,"id":712,"parameterSlots":0,"returnSlots":0},"@release_747":{"entryPoint":1058,"id":747,"parameterSlots":1,"returnSlots":0},"@released_630":{"entryPoint":1590,"id":630,"parameterSlots":0,"returnSlots":1},"@released_643":{"entryPoint":1600,"id":643,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1257,"id":477,"parameterSlots":0,"returnSlots":0},"@safeTransfer_1858":{"entryPoint":2014,"id":1858,"parameterSlots":3,"returnSlots":0},"@sendValue_2155":{"entryPoint":2472,"id":2155,"parameterSlots":2,"returnSlots":0},"@start_599":{"entryPoint":1711,"id":599,"parameterSlots":0,"returnSlots":1},"@transferOwnership_505":{"entryPoint":1794,"id":505,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2310":{"entryPoint":3230,"id":2310,"parameterSlots":3,"returnSlots":1},"@vestedAmount_768":{"entryPoint":921,"id":768,"parameterSlots":1,"returnSlots":1},"@vestedAmount_796":{"entryPoint":1277,"id":796,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":3511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4093,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3581,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4467,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4134,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3900,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4204,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4041,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3608,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4478,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":3853,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4270,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3442,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4145,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3658,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":3467,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8294:30","nodeType":"YulBlock","src":"0:8294:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"378:57:30","nodeType":"YulBlock","src":"378:57:30","statements":[{"nativeSrc":"388:41:30","nodeType":"YulAssignment","src":"388:41:30","value":{"arguments":[{"name":"value","nativeSrc":"403:5:30","nodeType":"YulIdentifier","src":"403:5:30"},{"kind":"number","nativeSrc":"410:18:30","nodeType":"YulLiteral","src":"410:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"399:3:30","nodeType":"YulIdentifier","src":"399:3:30"},"nativeSrc":"399:30:30","nodeType":"YulFunctionCall","src":"399:30:30"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:30","nodeType":"YulIdentifier","src":"388:7:30"}]}]},"name":"cleanup_t_uint64","nativeSrc":"334:101:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:30","nodeType":"YulTypedName","src":"360:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:30","nodeType":"YulTypedName","src":"370:7:30","type":""}],"src":"334:101:30"},{"body":{"nativeSrc":"483:78:30","nodeType":"YulBlock","src":"483:78:30","statements":[{"body":{"nativeSrc":"539:16:30","nodeType":"YulBlock","src":"539:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"548:1:30","nodeType":"YulLiteral","src":"548:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"551:1:30","nodeType":"YulLiteral","src":"551:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"541:6:30","nodeType":"YulIdentifier","src":"541:6:30"},"nativeSrc":"541:12:30","nodeType":"YulFunctionCall","src":"541:12:30"},"nativeSrc":"541:12:30","nodeType":"YulExpressionStatement","src":"541:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"506:5:30","nodeType":"YulIdentifier","src":"506:5:30"},{"arguments":[{"name":"value","nativeSrc":"530:5:30","nodeType":"YulIdentifier","src":"530:5:30"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"513:16:30","nodeType":"YulIdentifier","src":"513:16:30"},"nativeSrc":"513:23:30","nodeType":"YulFunctionCall","src":"513:23:30"}],"functionName":{"name":"eq","nativeSrc":"503:2:30","nodeType":"YulIdentifier","src":"503:2:30"},"nativeSrc":"503:34:30","nodeType":"YulFunctionCall","src":"503:34:30"}],"functionName":{"name":"iszero","nativeSrc":"496:6:30","nodeType":"YulIdentifier","src":"496:6:30"},"nativeSrc":"496:42:30","nodeType":"YulFunctionCall","src":"496:42:30"},"nativeSrc":"493:62:30","nodeType":"YulIf","src":"493:62:30"}]},"name":"validator_revert_t_uint64","nativeSrc":"441:120:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"476:5:30","nodeType":"YulTypedName","src":"476:5:30","type":""}],"src":"441:120:30"},{"body":{"nativeSrc":"618:86:30","nodeType":"YulBlock","src":"618:86:30","statements":[{"nativeSrc":"628:29:30","nodeType":"YulAssignment","src":"628:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"650:6:30","nodeType":"YulIdentifier","src":"650:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"637:12:30","nodeType":"YulIdentifier","src":"637:12:30"},"nativeSrc":"637:20:30","nodeType":"YulFunctionCall","src":"637:20:30"},"variableNames":[{"name":"value","nativeSrc":"628:5:30","nodeType":"YulIdentifier","src":"628:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"692:5:30","nodeType":"YulIdentifier","src":"692:5:30"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"666:25:30","nodeType":"YulIdentifier","src":"666:25:30"},"nativeSrc":"666:32:30","nodeType":"YulFunctionCall","src":"666:32:30"},"nativeSrc":"666:32:30","nodeType":"YulExpressionStatement","src":"666:32:30"}]},"name":"abi_decode_t_uint64","nativeSrc":"567:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"596:6:30","nodeType":"YulTypedName","src":"596:6:30","type":""},{"name":"end","nativeSrc":"604:3:30","nodeType":"YulTypedName","src":"604:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"612:5:30","nodeType":"YulTypedName","src":"612:5:30","type":""}],"src":"567:137:30"},{"body":{"nativeSrc":"775:262:30","nodeType":"YulBlock","src":"775:262:30","statements":[{"body":{"nativeSrc":"821:83:30","nodeType":"YulBlock","src":"821:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"823:77:30","nodeType":"YulIdentifier","src":"823:77:30"},"nativeSrc":"823:79:30","nodeType":"YulFunctionCall","src":"823:79:30"},"nativeSrc":"823:79:30","nodeType":"YulExpressionStatement","src":"823:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"796:7:30","nodeType":"YulIdentifier","src":"796:7:30"},{"name":"headStart","nativeSrc":"805:9:30","nodeType":"YulIdentifier","src":"805:9:30"}],"functionName":{"name":"sub","nativeSrc":"792:3:30","nodeType":"YulIdentifier","src":"792:3:30"},"nativeSrc":"792:23:30","nodeType":"YulFunctionCall","src":"792:23:30"},{"kind":"number","nativeSrc":"817:2:30","nodeType":"YulLiteral","src":"817:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"788:3:30","nodeType":"YulIdentifier","src":"788:3:30"},"nativeSrc":"788:32:30","nodeType":"YulFunctionCall","src":"788:32:30"},"nativeSrc":"785:119:30","nodeType":"YulIf","src":"785:119:30"},{"nativeSrc":"914:116:30","nodeType":"YulBlock","src":"914:116:30","statements":[{"nativeSrc":"929:15:30","nodeType":"YulVariableDeclaration","src":"929:15:30","value":{"kind":"number","nativeSrc":"943:1:30","nodeType":"YulLiteral","src":"943:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"933:6:30","nodeType":"YulTypedName","src":"933:6:30","type":""}]},{"nativeSrc":"958:62:30","nodeType":"YulAssignment","src":"958:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"992:9:30","nodeType":"YulIdentifier","src":"992:9:30"},{"name":"offset","nativeSrc":"1003:6:30","nodeType":"YulIdentifier","src":"1003:6:30"}],"functionName":{"name":"add","nativeSrc":"988:3:30","nodeType":"YulIdentifier","src":"988:3:30"},"nativeSrc":"988:22:30","nodeType":"YulFunctionCall","src":"988:22:30"},{"name":"dataEnd","nativeSrc":"1012:7:30","nodeType":"YulIdentifier","src":"1012:7:30"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"968:19:30","nodeType":"YulIdentifier","src":"968:19:30"},"nativeSrc":"968:52:30","nodeType":"YulFunctionCall","src":"968:52:30"},"variableNames":[{"name":"value0","nativeSrc":"958:6:30","nodeType":"YulIdentifier","src":"958:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"710:327:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"745:9:30","nodeType":"YulTypedName","src":"745:9:30","type":""},{"name":"dataEnd","nativeSrc":"756:7:30","nodeType":"YulTypedName","src":"756:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"768:6:30","nodeType":"YulTypedName","src":"768:6:30","type":""}],"src":"710:327:30"},{"body":{"nativeSrc":"1088:32:30","nodeType":"YulBlock","src":"1088:32:30","statements":[{"nativeSrc":"1098:16:30","nodeType":"YulAssignment","src":"1098:16:30","value":{"name":"value","nativeSrc":"1109:5:30","nodeType":"YulIdentifier","src":"1109:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1098:7:30","nodeType":"YulIdentifier","src":"1098:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1043:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1070:5:30","nodeType":"YulTypedName","src":"1070:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1080:7:30","nodeType":"YulTypedName","src":"1080:7:30","type":""}],"src":"1043:77:30"},{"body":{"nativeSrc":"1191:53:30","nodeType":"YulBlock","src":"1191:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1208:3:30","nodeType":"YulIdentifier","src":"1208:3:30"},{"arguments":[{"name":"value","nativeSrc":"1231:5:30","nodeType":"YulIdentifier","src":"1231:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1213:17:30","nodeType":"YulIdentifier","src":"1213:17:30"},"nativeSrc":"1213:24:30","nodeType":"YulFunctionCall","src":"1213:24:30"}],"functionName":{"name":"mstore","nativeSrc":"1201:6:30","nodeType":"YulIdentifier","src":"1201:6:30"},"nativeSrc":"1201:37:30","nodeType":"YulFunctionCall","src":"1201:37:30"},"nativeSrc":"1201:37:30","nodeType":"YulExpressionStatement","src":"1201:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1126:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1179:5:30","nodeType":"YulTypedName","src":"1179:5:30","type":""},{"name":"pos","nativeSrc":"1186:3:30","nodeType":"YulTypedName","src":"1186:3:30","type":""}],"src":"1126:118:30"},{"body":{"nativeSrc":"1348:124:30","nodeType":"YulBlock","src":"1348:124:30","statements":[{"nativeSrc":"1358:26:30","nodeType":"YulAssignment","src":"1358:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1370:9:30","nodeType":"YulIdentifier","src":"1370:9:30"},{"kind":"number","nativeSrc":"1381:2:30","nodeType":"YulLiteral","src":"1381:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1366:3:30","nodeType":"YulIdentifier","src":"1366:3:30"},"nativeSrc":"1366:18:30","nodeType":"YulFunctionCall","src":"1366:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1358:4:30","nodeType":"YulIdentifier","src":"1358:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1438:6:30","nodeType":"YulIdentifier","src":"1438:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1451:9:30","nodeType":"YulIdentifier","src":"1451:9:30"},{"kind":"number","nativeSrc":"1462:1:30","nodeType":"YulLiteral","src":"1462:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1447:3:30","nodeType":"YulIdentifier","src":"1447:3:30"},"nativeSrc":"1447:17:30","nodeType":"YulFunctionCall","src":"1447:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1394:43:30","nodeType":"YulIdentifier","src":"1394:43:30"},"nativeSrc":"1394:71:30","nodeType":"YulFunctionCall","src":"1394:71:30"},"nativeSrc":"1394:71:30","nodeType":"YulExpressionStatement","src":"1394:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1250:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1320:9:30","nodeType":"YulTypedName","src":"1320:9:30","type":""},{"name":"value0","nativeSrc":"1332:6:30","nodeType":"YulTypedName","src":"1332:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1343:4:30","nodeType":"YulTypedName","src":"1343:4:30","type":""}],"src":"1250:222:30"},{"body":{"nativeSrc":"1523:81:30","nodeType":"YulBlock","src":"1523:81:30","statements":[{"nativeSrc":"1533:65:30","nodeType":"YulAssignment","src":"1533:65:30","value":{"arguments":[{"name":"value","nativeSrc":"1548:5:30","nodeType":"YulIdentifier","src":"1548:5:30"},{"kind":"number","nativeSrc":"1555:42:30","nodeType":"YulLiteral","src":"1555:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1544:3:30","nodeType":"YulIdentifier","src":"1544:3:30"},"nativeSrc":"1544:54:30","nodeType":"YulFunctionCall","src":"1544:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1533:7:30","nodeType":"YulIdentifier","src":"1533:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1478:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1505:5:30","nodeType":"YulTypedName","src":"1505:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1515:7:30","nodeType":"YulTypedName","src":"1515:7:30","type":""}],"src":"1478:126:30"},{"body":{"nativeSrc":"1655:51:30","nodeType":"YulBlock","src":"1655:51:30","statements":[{"nativeSrc":"1665:35:30","nodeType":"YulAssignment","src":"1665:35:30","value":{"arguments":[{"name":"value","nativeSrc":"1694:5:30","nodeType":"YulIdentifier","src":"1694:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1676:17:30","nodeType":"YulIdentifier","src":"1676:17:30"},"nativeSrc":"1676:24:30","nodeType":"YulFunctionCall","src":"1676:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1665:7:30","nodeType":"YulIdentifier","src":"1665:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"1610:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1637:5:30","nodeType":"YulTypedName","src":"1637:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1647:7:30","nodeType":"YulTypedName","src":"1647:7:30","type":""}],"src":"1610:96:30"},{"body":{"nativeSrc":"1755:79:30","nodeType":"YulBlock","src":"1755:79:30","statements":[{"body":{"nativeSrc":"1812:16:30","nodeType":"YulBlock","src":"1812:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1821:1:30","nodeType":"YulLiteral","src":"1821:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1824:1:30","nodeType":"YulLiteral","src":"1824:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1814:6:30","nodeType":"YulIdentifier","src":"1814:6:30"},"nativeSrc":"1814:12:30","nodeType":"YulFunctionCall","src":"1814:12:30"},"nativeSrc":"1814:12:30","nodeType":"YulExpressionStatement","src":"1814:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1778:5:30","nodeType":"YulIdentifier","src":"1778:5:30"},{"arguments":[{"name":"value","nativeSrc":"1803:5:30","nodeType":"YulIdentifier","src":"1803:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1785:17:30","nodeType":"YulIdentifier","src":"1785:17:30"},"nativeSrc":"1785:24:30","nodeType":"YulFunctionCall","src":"1785:24:30"}],"functionName":{"name":"eq","nativeSrc":"1775:2:30","nodeType":"YulIdentifier","src":"1775:2:30"},"nativeSrc":"1775:35:30","nodeType":"YulFunctionCall","src":"1775:35:30"}],"functionName":{"name":"iszero","nativeSrc":"1768:6:30","nodeType":"YulIdentifier","src":"1768:6:30"},"nativeSrc":"1768:43:30","nodeType":"YulFunctionCall","src":"1768:43:30"},"nativeSrc":"1765:63:30","nodeType":"YulIf","src":"1765:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"1712:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1748:5:30","nodeType":"YulTypedName","src":"1748:5:30","type":""}],"src":"1712:122:30"},{"body":{"nativeSrc":"1892:87:30","nodeType":"YulBlock","src":"1892:87:30","statements":[{"nativeSrc":"1902:29:30","nodeType":"YulAssignment","src":"1902:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1924:6:30","nodeType":"YulIdentifier","src":"1924:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1911:12:30","nodeType":"YulIdentifier","src":"1911:12:30"},"nativeSrc":"1911:20:30","nodeType":"YulFunctionCall","src":"1911:20:30"},"variableNames":[{"name":"value","nativeSrc":"1902:5:30","nodeType":"YulIdentifier","src":"1902:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1967:5:30","nodeType":"YulIdentifier","src":"1967:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1940:26:30","nodeType":"YulIdentifier","src":"1940:26:30"},"nativeSrc":"1940:33:30","nodeType":"YulFunctionCall","src":"1940:33:30"},"nativeSrc":"1940:33:30","nodeType":"YulExpressionStatement","src":"1940:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"1840:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1870:6:30","nodeType":"YulTypedName","src":"1870:6:30","type":""},{"name":"end","nativeSrc":"1878:3:30","nodeType":"YulTypedName","src":"1878:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1886:5:30","nodeType":"YulTypedName","src":"1886:5:30","type":""}],"src":"1840:139:30"},{"body":{"nativeSrc":"2051:263:30","nodeType":"YulBlock","src":"2051:263:30","statements":[{"body":{"nativeSrc":"2097:83:30","nodeType":"YulBlock","src":"2097:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2099:77:30","nodeType":"YulIdentifier","src":"2099:77:30"},"nativeSrc":"2099:79:30","nodeType":"YulFunctionCall","src":"2099:79:30"},"nativeSrc":"2099:79:30","nodeType":"YulExpressionStatement","src":"2099:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2072:7:30","nodeType":"YulIdentifier","src":"2072:7:30"},{"name":"headStart","nativeSrc":"2081:9:30","nodeType":"YulIdentifier","src":"2081:9:30"}],"functionName":{"name":"sub","nativeSrc":"2068:3:30","nodeType":"YulIdentifier","src":"2068:3:30"},"nativeSrc":"2068:23:30","nodeType":"YulFunctionCall","src":"2068:23:30"},{"kind":"number","nativeSrc":"2093:2:30","nodeType":"YulLiteral","src":"2093:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2064:3:30","nodeType":"YulIdentifier","src":"2064:3:30"},"nativeSrc":"2064:32:30","nodeType":"YulFunctionCall","src":"2064:32:30"},"nativeSrc":"2061:119:30","nodeType":"YulIf","src":"2061:119:30"},{"nativeSrc":"2190:117:30","nodeType":"YulBlock","src":"2190:117:30","statements":[{"nativeSrc":"2205:15:30","nodeType":"YulVariableDeclaration","src":"2205:15:30","value":{"kind":"number","nativeSrc":"2219:1:30","nodeType":"YulLiteral","src":"2219:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2209:6:30","nodeType":"YulTypedName","src":"2209:6:30","type":""}]},{"nativeSrc":"2234:63:30","nodeType":"YulAssignment","src":"2234:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2269:9:30","nodeType":"YulIdentifier","src":"2269:9:30"},{"name":"offset","nativeSrc":"2280:6:30","nodeType":"YulIdentifier","src":"2280:6:30"}],"functionName":{"name":"add","nativeSrc":"2265:3:30","nodeType":"YulIdentifier","src":"2265:3:30"},"nativeSrc":"2265:22:30","nodeType":"YulFunctionCall","src":"2265:22:30"},{"name":"dataEnd","nativeSrc":"2289:7:30","nodeType":"YulIdentifier","src":"2289:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2244:20:30","nodeType":"YulIdentifier","src":"2244:20:30"},"nativeSrc":"2244:53:30","nodeType":"YulFunctionCall","src":"2244:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2234:6:30","nodeType":"YulIdentifier","src":"2234:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1985:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2021:9:30","nodeType":"YulTypedName","src":"2021:9:30","type":""},{"name":"dataEnd","nativeSrc":"2032:7:30","nodeType":"YulTypedName","src":"2032:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2044:6:30","nodeType":"YulTypedName","src":"2044:6:30","type":""}],"src":"1985:329:30"},{"body":{"nativeSrc":"2402:390:30","nodeType":"YulBlock","src":"2402:390:30","statements":[{"body":{"nativeSrc":"2448:83:30","nodeType":"YulBlock","src":"2448:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2450:77:30","nodeType":"YulIdentifier","src":"2450:77:30"},"nativeSrc":"2450:79:30","nodeType":"YulFunctionCall","src":"2450:79:30"},"nativeSrc":"2450:79:30","nodeType":"YulExpressionStatement","src":"2450:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2423:7:30","nodeType":"YulIdentifier","src":"2423:7:30"},{"name":"headStart","nativeSrc":"2432:9:30","nodeType":"YulIdentifier","src":"2432:9:30"}],"functionName":{"name":"sub","nativeSrc":"2419:3:30","nodeType":"YulIdentifier","src":"2419:3:30"},"nativeSrc":"2419:23:30","nodeType":"YulFunctionCall","src":"2419:23:30"},{"kind":"number","nativeSrc":"2444:2:30","nodeType":"YulLiteral","src":"2444:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2415:3:30","nodeType":"YulIdentifier","src":"2415:3:30"},"nativeSrc":"2415:32:30","nodeType":"YulFunctionCall","src":"2415:32:30"},"nativeSrc":"2412:119:30","nodeType":"YulIf","src":"2412:119:30"},{"nativeSrc":"2541:117:30","nodeType":"YulBlock","src":"2541:117:30","statements":[{"nativeSrc":"2556:15:30","nodeType":"YulVariableDeclaration","src":"2556:15:30","value":{"kind":"number","nativeSrc":"2570:1:30","nodeType":"YulLiteral","src":"2570:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2560:6:30","nodeType":"YulTypedName","src":"2560:6:30","type":""}]},{"nativeSrc":"2585:63:30","nodeType":"YulAssignment","src":"2585:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2620:9:30","nodeType":"YulIdentifier","src":"2620:9:30"},{"name":"offset","nativeSrc":"2631:6:30","nodeType":"YulIdentifier","src":"2631:6:30"}],"functionName":{"name":"add","nativeSrc":"2616:3:30","nodeType":"YulIdentifier","src":"2616:3:30"},"nativeSrc":"2616:22:30","nodeType":"YulFunctionCall","src":"2616:22:30"},{"name":"dataEnd","nativeSrc":"2640:7:30","nodeType":"YulIdentifier","src":"2640:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2595:20:30","nodeType":"YulIdentifier","src":"2595:20:30"},"nativeSrc":"2595:53:30","nodeType":"YulFunctionCall","src":"2595:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2585:6:30","nodeType":"YulIdentifier","src":"2585:6:30"}]}]},{"nativeSrc":"2668:117:30","nodeType":"YulBlock","src":"2668:117:30","statements":[{"nativeSrc":"2683:16:30","nodeType":"YulVariableDeclaration","src":"2683:16:30","value":{"kind":"number","nativeSrc":"2697:2:30","nodeType":"YulLiteral","src":"2697:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2687:6:30","nodeType":"YulTypedName","src":"2687:6:30","type":""}]},{"nativeSrc":"2713:62:30","nodeType":"YulAssignment","src":"2713:62:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2747:9:30","nodeType":"YulIdentifier","src":"2747:9:30"},{"name":"offset","nativeSrc":"2758:6:30","nodeType":"YulIdentifier","src":"2758:6:30"}],"functionName":{"name":"add","nativeSrc":"2743:3:30","nodeType":"YulIdentifier","src":"2743:3:30"},"nativeSrc":"2743:22:30","nodeType":"YulFunctionCall","src":"2743:22:30"},{"name":"dataEnd","nativeSrc":"2767:7:30","nodeType":"YulIdentifier","src":"2767:7:30"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"2723:19:30","nodeType":"YulIdentifier","src":"2723:19:30"},"nativeSrc":"2723:52:30","nodeType":"YulFunctionCall","src":"2723:52:30"},"variableNames":[{"name":"value1","nativeSrc":"2713:6:30","nodeType":"YulIdentifier","src":"2713:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"2320:472:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2364:9:30","nodeType":"YulTypedName","src":"2364:9:30","type":""},{"name":"dataEnd","nativeSrc":"2375:7:30","nodeType":"YulTypedName","src":"2375:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2387:6:30","nodeType":"YulTypedName","src":"2387:6:30","type":""},{"name":"value1","nativeSrc":"2395:6:30","nodeType":"YulTypedName","src":"2395:6:30","type":""}],"src":"2320:472:30"},{"body":{"nativeSrc":"2863:53:30","nodeType":"YulBlock","src":"2863:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2880:3:30","nodeType":"YulIdentifier","src":"2880:3:30"},{"arguments":[{"name":"value","nativeSrc":"2903:5:30","nodeType":"YulIdentifier","src":"2903:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2885:17:30","nodeType":"YulIdentifier","src":"2885:17:30"},"nativeSrc":"2885:24:30","nodeType":"YulFunctionCall","src":"2885:24:30"}],"functionName":{"name":"mstore","nativeSrc":"2873:6:30","nodeType":"YulIdentifier","src":"2873:6:30"},"nativeSrc":"2873:37:30","nodeType":"YulFunctionCall","src":"2873:37:30"},"nativeSrc":"2873:37:30","nodeType":"YulExpressionStatement","src":"2873:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2798:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2851:5:30","nodeType":"YulTypedName","src":"2851:5:30","type":""},{"name":"pos","nativeSrc":"2858:3:30","nodeType":"YulTypedName","src":"2858:3:30","type":""}],"src":"2798:118:30"},{"body":{"nativeSrc":"3020:124:30","nodeType":"YulBlock","src":"3020:124:30","statements":[{"nativeSrc":"3030:26:30","nodeType":"YulAssignment","src":"3030:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3042:9:30","nodeType":"YulIdentifier","src":"3042:9:30"},{"kind":"number","nativeSrc":"3053:2:30","nodeType":"YulLiteral","src":"3053:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3038:3:30","nodeType":"YulIdentifier","src":"3038:3:30"},"nativeSrc":"3038:18:30","nodeType":"YulFunctionCall","src":"3038:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3030:4:30","nodeType":"YulIdentifier","src":"3030:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3110:6:30","nodeType":"YulIdentifier","src":"3110:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"3123:9:30","nodeType":"YulIdentifier","src":"3123:9:30"},{"kind":"number","nativeSrc":"3134:1:30","nodeType":"YulLiteral","src":"3134:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3119:3:30","nodeType":"YulIdentifier","src":"3119:3:30"},"nativeSrc":"3119:17:30","nodeType":"YulFunctionCall","src":"3119:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3066:43:30","nodeType":"YulIdentifier","src":"3066:43:30"},"nativeSrc":"3066:71:30","nodeType":"YulFunctionCall","src":"3066:71:30"},"nativeSrc":"3066:71:30","nodeType":"YulExpressionStatement","src":"3066:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2922:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2992:9:30","nodeType":"YulTypedName","src":"2992:9:30","type":""},{"name":"value0","nativeSrc":"3004:6:30","nodeType":"YulTypedName","src":"3004:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3015:4:30","nodeType":"YulTypedName","src":"3015:4:30","type":""}],"src":"2922:222:30"},{"body":{"nativeSrc":"3178:152:30","nodeType":"YulBlock","src":"3178:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3195:1:30","nodeType":"YulLiteral","src":"3195:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3198:77:30","nodeType":"YulLiteral","src":"3198:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3188:6:30","nodeType":"YulIdentifier","src":"3188:6:30"},"nativeSrc":"3188:88:30","nodeType":"YulFunctionCall","src":"3188:88:30"},"nativeSrc":"3188:88:30","nodeType":"YulExpressionStatement","src":"3188:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3292:1:30","nodeType":"YulLiteral","src":"3292:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"3295:4:30","nodeType":"YulLiteral","src":"3295:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3285:6:30","nodeType":"YulIdentifier","src":"3285:6:30"},"nativeSrc":"3285:15:30","nodeType":"YulFunctionCall","src":"3285:15:30"},"nativeSrc":"3285:15:30","nodeType":"YulExpressionStatement","src":"3285:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3316:1:30","nodeType":"YulLiteral","src":"3316:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3319:4:30","nodeType":"YulLiteral","src":"3319:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3309:6:30","nodeType":"YulIdentifier","src":"3309:6:30"},"nativeSrc":"3309:15:30","nodeType":"YulFunctionCall","src":"3309:15:30"},"nativeSrc":"3309:15:30","nodeType":"YulExpressionStatement","src":"3309:15:30"}]},"name":"panic_error_0x11","nativeSrc":"3150:180:30","nodeType":"YulFunctionDefinition","src":"3150:180:30"},{"body":{"nativeSrc":"3380:147:30","nodeType":"YulBlock","src":"3380:147:30","statements":[{"nativeSrc":"3390:25:30","nodeType":"YulAssignment","src":"3390:25:30","value":{"arguments":[{"name":"x","nativeSrc":"3413:1:30","nodeType":"YulIdentifier","src":"3413:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3395:17:30","nodeType":"YulIdentifier","src":"3395:17:30"},"nativeSrc":"3395:20:30","nodeType":"YulFunctionCall","src":"3395:20:30"},"variableNames":[{"name":"x","nativeSrc":"3390:1:30","nodeType":"YulIdentifier","src":"3390:1:30"}]},{"nativeSrc":"3424:25:30","nodeType":"YulAssignment","src":"3424:25:30","value":{"arguments":[{"name":"y","nativeSrc":"3447:1:30","nodeType":"YulIdentifier","src":"3447:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3429:17:30","nodeType":"YulIdentifier","src":"3429:17:30"},"nativeSrc":"3429:20:30","nodeType":"YulFunctionCall","src":"3429:20:30"},"variableNames":[{"name":"y","nativeSrc":"3424:1:30","nodeType":"YulIdentifier","src":"3424:1:30"}]},{"nativeSrc":"3458:16:30","nodeType":"YulAssignment","src":"3458:16:30","value":{"arguments":[{"name":"x","nativeSrc":"3469:1:30","nodeType":"YulIdentifier","src":"3469:1:30"},{"name":"y","nativeSrc":"3472:1:30","nodeType":"YulIdentifier","src":"3472:1:30"}],"functionName":{"name":"add","nativeSrc":"3465:3:30","nodeType":"YulIdentifier","src":"3465:3:30"},"nativeSrc":"3465:9:30","nodeType":"YulFunctionCall","src":"3465:9:30"},"variableNames":[{"name":"sum","nativeSrc":"3458:3:30","nodeType":"YulIdentifier","src":"3458:3:30"}]},{"body":{"nativeSrc":"3498:22:30","nodeType":"YulBlock","src":"3498:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3500:16:30","nodeType":"YulIdentifier","src":"3500:16:30"},"nativeSrc":"3500:18:30","nodeType":"YulFunctionCall","src":"3500:18:30"},"nativeSrc":"3500:18:30","nodeType":"YulExpressionStatement","src":"3500:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3490:1:30","nodeType":"YulIdentifier","src":"3490:1:30"},{"name":"sum","nativeSrc":"3493:3:30","nodeType":"YulIdentifier","src":"3493:3:30"}],"functionName":{"name":"gt","nativeSrc":"3487:2:30","nodeType":"YulIdentifier","src":"3487:2:30"},"nativeSrc":"3487:10:30","nodeType":"YulFunctionCall","src":"3487:10:30"},"nativeSrc":"3484:36:30","nodeType":"YulIf","src":"3484:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"3336:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3367:1:30","nodeType":"YulTypedName","src":"3367:1:30","type":""},{"name":"y","nativeSrc":"3370:1:30","nodeType":"YulTypedName","src":"3370:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3376:3:30","nodeType":"YulTypedName","src":"3376:3:30","type":""}],"src":"3336:191:30"},{"body":{"nativeSrc":"3576:79:30","nodeType":"YulBlock","src":"3576:79:30","statements":[{"body":{"nativeSrc":"3633:16:30","nodeType":"YulBlock","src":"3633:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3642:1:30","nodeType":"YulLiteral","src":"3642:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3645:1:30","nodeType":"YulLiteral","src":"3645:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3635:6:30","nodeType":"YulIdentifier","src":"3635:6:30"},"nativeSrc":"3635:12:30","nodeType":"YulFunctionCall","src":"3635:12:30"},"nativeSrc":"3635:12:30","nodeType":"YulExpressionStatement","src":"3635:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3599:5:30","nodeType":"YulIdentifier","src":"3599:5:30"},{"arguments":[{"name":"value","nativeSrc":"3624:5:30","nodeType":"YulIdentifier","src":"3624:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3606:17:30","nodeType":"YulIdentifier","src":"3606:17:30"},"nativeSrc":"3606:24:30","nodeType":"YulFunctionCall","src":"3606:24:30"}],"functionName":{"name":"eq","nativeSrc":"3596:2:30","nodeType":"YulIdentifier","src":"3596:2:30"},"nativeSrc":"3596:35:30","nodeType":"YulFunctionCall","src":"3596:35:30"}],"functionName":{"name":"iszero","nativeSrc":"3589:6:30","nodeType":"YulIdentifier","src":"3589:6:30"},"nativeSrc":"3589:43:30","nodeType":"YulFunctionCall","src":"3589:43:30"},"nativeSrc":"3586:63:30","nodeType":"YulIf","src":"3586:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"3533:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3569:5:30","nodeType":"YulTypedName","src":"3569:5:30","type":""}],"src":"3533:122:30"},{"body":{"nativeSrc":"3724:80:30","nodeType":"YulBlock","src":"3724:80:30","statements":[{"nativeSrc":"3734:22:30","nodeType":"YulAssignment","src":"3734:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"3749:6:30","nodeType":"YulIdentifier","src":"3749:6:30"}],"functionName":{"name":"mload","nativeSrc":"3743:5:30","nodeType":"YulIdentifier","src":"3743:5:30"},"nativeSrc":"3743:13:30","nodeType":"YulFunctionCall","src":"3743:13:30"},"variableNames":[{"name":"value","nativeSrc":"3734:5:30","nodeType":"YulIdentifier","src":"3734:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3792:5:30","nodeType":"YulIdentifier","src":"3792:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3765:26:30","nodeType":"YulIdentifier","src":"3765:26:30"},"nativeSrc":"3765:33:30","nodeType":"YulFunctionCall","src":"3765:33:30"},"nativeSrc":"3765:33:30","nodeType":"YulExpressionStatement","src":"3765:33:30"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3661:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3702:6:30","nodeType":"YulTypedName","src":"3702:6:30","type":""},{"name":"end","nativeSrc":"3710:3:30","nodeType":"YulTypedName","src":"3710:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3718:5:30","nodeType":"YulTypedName","src":"3718:5:30","type":""}],"src":"3661:143:30"},{"body":{"nativeSrc":"3887:274:30","nodeType":"YulBlock","src":"3887:274:30","statements":[{"body":{"nativeSrc":"3933:83:30","nodeType":"YulBlock","src":"3933:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3935:77:30","nodeType":"YulIdentifier","src":"3935:77:30"},"nativeSrc":"3935:79:30","nodeType":"YulFunctionCall","src":"3935:79:30"},"nativeSrc":"3935:79:30","nodeType":"YulExpressionStatement","src":"3935:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:30","nodeType":"YulIdentifier","src":"3908:7:30"},{"name":"headStart","nativeSrc":"3917:9:30","nodeType":"YulIdentifier","src":"3917:9:30"}],"functionName":{"name":"sub","nativeSrc":"3904:3:30","nodeType":"YulIdentifier","src":"3904:3:30"},"nativeSrc":"3904:23:30","nodeType":"YulFunctionCall","src":"3904:23:30"},{"kind":"number","nativeSrc":"3929:2:30","nodeType":"YulLiteral","src":"3929:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:30","nodeType":"YulIdentifier","src":"3900:3:30"},"nativeSrc":"3900:32:30","nodeType":"YulFunctionCall","src":"3900:32:30"},"nativeSrc":"3897:119:30","nodeType":"YulIf","src":"3897:119:30"},{"nativeSrc":"4026:128:30","nodeType":"YulBlock","src":"4026:128:30","statements":[{"nativeSrc":"4041:15:30","nodeType":"YulVariableDeclaration","src":"4041:15:30","value":{"kind":"number","nativeSrc":"4055:1:30","nodeType":"YulLiteral","src":"4055:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4045:6:30","nodeType":"YulTypedName","src":"4045:6:30","type":""}]},{"nativeSrc":"4070:74:30","nodeType":"YulAssignment","src":"4070:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:30","nodeType":"YulIdentifier","src":"4116:9:30"},{"name":"offset","nativeSrc":"4127:6:30","nodeType":"YulIdentifier","src":"4127:6:30"}],"functionName":{"name":"add","nativeSrc":"4112:3:30","nodeType":"YulIdentifier","src":"4112:3:30"},"nativeSrc":"4112:22:30","nodeType":"YulFunctionCall","src":"4112:22:30"},{"name":"dataEnd","nativeSrc":"4136:7:30","nodeType":"YulIdentifier","src":"4136:7:30"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4080:31:30","nodeType":"YulIdentifier","src":"4080:31:30"},"nativeSrc":"4080:64:30","nodeType":"YulFunctionCall","src":"4080:64:30"},"variableNames":[{"name":"value0","nativeSrc":"4070:6:30","nodeType":"YulIdentifier","src":"4070:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3810:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3857:9:30","nodeType":"YulTypedName","src":"3857:9:30","type":""},{"name":"dataEnd","nativeSrc":"3868:7:30","nodeType":"YulTypedName","src":"3868:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3880:6:30","nodeType":"YulTypedName","src":"3880:6:30","type":""}],"src":"3810:351:30"},{"body":{"nativeSrc":"4212:149:30","nodeType":"YulBlock","src":"4212:149:30","statements":[{"nativeSrc":"4222:25:30","nodeType":"YulAssignment","src":"4222:25:30","value":{"arguments":[{"name":"x","nativeSrc":"4245:1:30","nodeType":"YulIdentifier","src":"4245:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4227:17:30","nodeType":"YulIdentifier","src":"4227:17:30"},"nativeSrc":"4227:20:30","nodeType":"YulFunctionCall","src":"4227:20:30"},"variableNames":[{"name":"x","nativeSrc":"4222:1:30","nodeType":"YulIdentifier","src":"4222:1:30"}]},{"nativeSrc":"4256:25:30","nodeType":"YulAssignment","src":"4256:25:30","value":{"arguments":[{"name":"y","nativeSrc":"4279:1:30","nodeType":"YulIdentifier","src":"4279:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4261:17:30","nodeType":"YulIdentifier","src":"4261:17:30"},"nativeSrc":"4261:20:30","nodeType":"YulFunctionCall","src":"4261:20:30"},"variableNames":[{"name":"y","nativeSrc":"4256:1:30","nodeType":"YulIdentifier","src":"4256:1:30"}]},{"nativeSrc":"4290:17:30","nodeType":"YulAssignment","src":"4290:17:30","value":{"arguments":[{"name":"x","nativeSrc":"4302:1:30","nodeType":"YulIdentifier","src":"4302:1:30"},{"name":"y","nativeSrc":"4305:1:30","nodeType":"YulIdentifier","src":"4305:1:30"}],"functionName":{"name":"sub","nativeSrc":"4298:3:30","nodeType":"YulIdentifier","src":"4298:3:30"},"nativeSrc":"4298:9:30","nodeType":"YulFunctionCall","src":"4298:9:30"},"variableNames":[{"name":"diff","nativeSrc":"4290:4:30","nodeType":"YulIdentifier","src":"4290:4:30"}]},{"body":{"nativeSrc":"4332:22:30","nodeType":"YulBlock","src":"4332:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4334:16:30","nodeType":"YulIdentifier","src":"4334:16:30"},"nativeSrc":"4334:18:30","nodeType":"YulFunctionCall","src":"4334:18:30"},"nativeSrc":"4334:18:30","nodeType":"YulExpressionStatement","src":"4334:18:30"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"4323:4:30","nodeType":"YulIdentifier","src":"4323:4:30"},{"name":"x","nativeSrc":"4329:1:30","nodeType":"YulIdentifier","src":"4329:1:30"}],"functionName":{"name":"gt","nativeSrc":"4320:2:30","nodeType":"YulIdentifier","src":"4320:2:30"},"nativeSrc":"4320:11:30","nodeType":"YulFunctionCall","src":"4320:11:30"},"nativeSrc":"4317:37:30","nodeType":"YulIf","src":"4317:37:30"}]},"name":"checked_sub_t_uint256","nativeSrc":"4167:194:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4198:1:30","nodeType":"YulTypedName","src":"4198:1:30","type":""},{"name":"y","nativeSrc":"4201:1:30","nodeType":"YulTypedName","src":"4201:1:30","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4207:4:30","nodeType":"YulTypedName","src":"4207:4:30","type":""}],"src":"4167:194:30"},{"body":{"nativeSrc":"4493:206:30","nodeType":"YulBlock","src":"4493:206:30","statements":[{"nativeSrc":"4503:26:30","nodeType":"YulAssignment","src":"4503:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4515:9:30","nodeType":"YulIdentifier","src":"4515:9:30"},{"kind":"number","nativeSrc":"4526:2:30","nodeType":"YulLiteral","src":"4526:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4511:3:30","nodeType":"YulIdentifier","src":"4511:3:30"},"nativeSrc":"4511:18:30","nodeType":"YulFunctionCall","src":"4511:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4503:4:30","nodeType":"YulIdentifier","src":"4503:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4583:6:30","nodeType":"YulIdentifier","src":"4583:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4596:9:30","nodeType":"YulIdentifier","src":"4596:9:30"},{"kind":"number","nativeSrc":"4607:1:30","nodeType":"YulLiteral","src":"4607:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4592:3:30","nodeType":"YulIdentifier","src":"4592:3:30"},"nativeSrc":"4592:17:30","nodeType":"YulFunctionCall","src":"4592:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4539:43:30","nodeType":"YulIdentifier","src":"4539:43:30"},"nativeSrc":"4539:71:30","nodeType":"YulFunctionCall","src":"4539:71:30"},"nativeSrc":"4539:71:30","nodeType":"YulExpressionStatement","src":"4539:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4664:6:30","nodeType":"YulIdentifier","src":"4664:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4677:9:30","nodeType":"YulIdentifier","src":"4677:9:30"},{"kind":"number","nativeSrc":"4688:2:30","nodeType":"YulLiteral","src":"4688:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4673:3:30","nodeType":"YulIdentifier","src":"4673:3:30"},"nativeSrc":"4673:18:30","nodeType":"YulFunctionCall","src":"4673:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4620:43:30","nodeType":"YulIdentifier","src":"4620:43:30"},"nativeSrc":"4620:72:30","nodeType":"YulFunctionCall","src":"4620:72:30"},"nativeSrc":"4620:72:30","nodeType":"YulExpressionStatement","src":"4620:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4367:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:30","nodeType":"YulTypedName","src":"4457:9:30","type":""},{"name":"value1","nativeSrc":"4469:6:30","nodeType":"YulTypedName","src":"4469:6:30","type":""},{"name":"value0","nativeSrc":"4477:6:30","nodeType":"YulTypedName","src":"4477:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4488:4:30","nodeType":"YulTypedName","src":"4488:4:30","type":""}],"src":"4367:332:30"},{"body":{"nativeSrc":"4818:34:30","nodeType":"YulBlock","src":"4818:34:30","statements":[{"nativeSrc":"4828:18:30","nodeType":"YulAssignment","src":"4828:18:30","value":{"name":"pos","nativeSrc":"4843:3:30","nodeType":"YulIdentifier","src":"4843:3:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"4828:11:30","nodeType":"YulIdentifier","src":"4828:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4705:147:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4790:3:30","nodeType":"YulTypedName","src":"4790:3:30","type":""},{"name":"length","nativeSrc":"4795:6:30","nodeType":"YulTypedName","src":"4795:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4806:11:30","nodeType":"YulTypedName","src":"4806:11:30","type":""}],"src":"4705:147:30"},{"body":{"nativeSrc":"4964:8:30","nodeType":"YulBlock","src":"4964:8:30","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"4858:114:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4956:6:30","nodeType":"YulTypedName","src":"4956:6:30","type":""}],"src":"4858:114:30"},{"body":{"nativeSrc":"5141:235:30","nodeType":"YulBlock","src":"5141:235:30","statements":[{"nativeSrc":"5151:90:30","nodeType":"YulAssignment","src":"5151:90:30","value":{"arguments":[{"name":"pos","nativeSrc":"5234:3:30","nodeType":"YulIdentifier","src":"5234:3:30"},{"kind":"number","nativeSrc":"5239:1:30","nodeType":"YulLiteral","src":"5239:1:30","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5158:75:30","nodeType":"YulIdentifier","src":"5158:75:30"},"nativeSrc":"5158:83:30","nodeType":"YulFunctionCall","src":"5158:83:30"},"variableNames":[{"name":"pos","nativeSrc":"5151:3:30","nodeType":"YulIdentifier","src":"5151:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5339:3:30","nodeType":"YulIdentifier","src":"5339:3:30"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5250:88:30","nodeType":"YulIdentifier","src":"5250:88:30"},"nativeSrc":"5250:93:30","nodeType":"YulFunctionCall","src":"5250:93:30"},"nativeSrc":"5250:93:30","nodeType":"YulExpressionStatement","src":"5250:93:30"},{"nativeSrc":"5352:18:30","nodeType":"YulAssignment","src":"5352:18:30","value":{"arguments":[{"name":"pos","nativeSrc":"5363:3:30","nodeType":"YulIdentifier","src":"5363:3:30"},{"kind":"number","nativeSrc":"5368:1:30","nodeType":"YulLiteral","src":"5368:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5359:3:30","nodeType":"YulIdentifier","src":"5359:3:30"},"nativeSrc":"5359:11:30","nodeType":"YulFunctionCall","src":"5359:11:30"},"variableNames":[{"name":"end","nativeSrc":"5352:3:30","nodeType":"YulIdentifier","src":"5352:3:30"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4978:398:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5129:3:30","nodeType":"YulTypedName","src":"5129:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5137:3:30","nodeType":"YulTypedName","src":"5137:3:30","type":""}],"src":"4978:398:30"},{"body":{"nativeSrc":"5570:191:30","nodeType":"YulBlock","src":"5570:191:30","statements":[{"nativeSrc":"5581:154:30","nodeType":"YulAssignment","src":"5581:154:30","value":{"arguments":[{"name":"pos","nativeSrc":"5731:3:30","nodeType":"YulIdentifier","src":"5731:3:30"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5588:141:30","nodeType":"YulIdentifier","src":"5588:141:30"},"nativeSrc":"5588:147:30","nodeType":"YulFunctionCall","src":"5588:147:30"},"variableNames":[{"name":"pos","nativeSrc":"5581:3:30","nodeType":"YulIdentifier","src":"5581:3:30"}]},{"nativeSrc":"5745:10:30","nodeType":"YulAssignment","src":"5745:10:30","value":{"name":"pos","nativeSrc":"5752:3:30","nodeType":"YulIdentifier","src":"5752:3:30"},"variableNames":[{"name":"end","nativeSrc":"5745:3:30","nodeType":"YulIdentifier","src":"5745:3:30"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5382:379:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5557:3:30","nodeType":"YulTypedName","src":"5557:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5566:3:30","nodeType":"YulTypedName","src":"5566:3:30","type":""}],"src":"5382:379:30"},{"body":{"nativeSrc":"5815:362:30","nodeType":"YulBlock","src":"5815:362:30","statements":[{"nativeSrc":"5825:25:30","nodeType":"YulAssignment","src":"5825:25:30","value":{"arguments":[{"name":"x","nativeSrc":"5848:1:30","nodeType":"YulIdentifier","src":"5848:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5830:17:30","nodeType":"YulIdentifier","src":"5830:17:30"},"nativeSrc":"5830:20:30","nodeType":"YulFunctionCall","src":"5830:20:30"},"variableNames":[{"name":"x","nativeSrc":"5825:1:30","nodeType":"YulIdentifier","src":"5825:1:30"}]},{"nativeSrc":"5859:25:30","nodeType":"YulAssignment","src":"5859:25:30","value":{"arguments":[{"name":"y","nativeSrc":"5882:1:30","nodeType":"YulIdentifier","src":"5882:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5864:17:30","nodeType":"YulIdentifier","src":"5864:17:30"},"nativeSrc":"5864:20:30","nodeType":"YulFunctionCall","src":"5864:20:30"},"variableNames":[{"name":"y","nativeSrc":"5859:1:30","nodeType":"YulIdentifier","src":"5859:1:30"}]},{"nativeSrc":"5893:28:30","nodeType":"YulVariableDeclaration","src":"5893:28:30","value":{"arguments":[{"name":"x","nativeSrc":"5916:1:30","nodeType":"YulIdentifier","src":"5916:1:30"},{"name":"y","nativeSrc":"5919:1:30","nodeType":"YulIdentifier","src":"5919:1:30"}],"functionName":{"name":"mul","nativeSrc":"5912:3:30","nodeType":"YulIdentifier","src":"5912:3:30"},"nativeSrc":"5912:9:30","nodeType":"YulFunctionCall","src":"5912:9:30"},"variables":[{"name":"product_raw","nativeSrc":"5897:11:30","nodeType":"YulTypedName","src":"5897:11:30","type":""}]},{"nativeSrc":"5930:41:30","nodeType":"YulAssignment","src":"5930:41:30","value":{"arguments":[{"name":"product_raw","nativeSrc":"5959:11:30","nodeType":"YulIdentifier","src":"5959:11:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5941:17:30","nodeType":"YulIdentifier","src":"5941:17:30"},"nativeSrc":"5941:30:30","nodeType":"YulFunctionCall","src":"5941:30:30"},"variableNames":[{"name":"product","nativeSrc":"5930:7:30","nodeType":"YulIdentifier","src":"5930:7:30"}]},{"body":{"nativeSrc":"6148:22:30","nodeType":"YulBlock","src":"6148:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6150:16:30","nodeType":"YulIdentifier","src":"6150:16:30"},"nativeSrc":"6150:18:30","nodeType":"YulFunctionCall","src":"6150:18:30"},"nativeSrc":"6150:18:30","nodeType":"YulExpressionStatement","src":"6150:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6081:1:30","nodeType":"YulIdentifier","src":"6081:1:30"}],"functionName":{"name":"iszero","nativeSrc":"6074:6:30","nodeType":"YulIdentifier","src":"6074:6:30"},"nativeSrc":"6074:9:30","nodeType":"YulFunctionCall","src":"6074:9:30"},{"arguments":[{"name":"y","nativeSrc":"6104:1:30","nodeType":"YulIdentifier","src":"6104:1:30"},{"arguments":[{"name":"product","nativeSrc":"6111:7:30","nodeType":"YulIdentifier","src":"6111:7:30"},{"name":"x","nativeSrc":"6120:1:30","nodeType":"YulIdentifier","src":"6120:1:30"}],"functionName":{"name":"div","nativeSrc":"6107:3:30","nodeType":"YulIdentifier","src":"6107:3:30"},"nativeSrc":"6107:15:30","nodeType":"YulFunctionCall","src":"6107:15:30"}],"functionName":{"name":"eq","nativeSrc":"6101:2:30","nodeType":"YulIdentifier","src":"6101:2:30"},"nativeSrc":"6101:22:30","nodeType":"YulFunctionCall","src":"6101:22:30"}],"functionName":{"name":"or","nativeSrc":"6054:2:30","nodeType":"YulIdentifier","src":"6054:2:30"},"nativeSrc":"6054:83:30","nodeType":"YulFunctionCall","src":"6054:83:30"}],"functionName":{"name":"iszero","nativeSrc":"6034:6:30","nodeType":"YulIdentifier","src":"6034:6:30"},"nativeSrc":"6034:113:30","nodeType":"YulFunctionCall","src":"6034:113:30"},"nativeSrc":"6031:139:30","nodeType":"YulIf","src":"6031:139:30"}]},"name":"checked_mul_t_uint256","nativeSrc":"5767:410:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5798:1:30","nodeType":"YulTypedName","src":"5798:1:30","type":""},{"name":"y","nativeSrc":"5801:1:30","nodeType":"YulTypedName","src":"5801:1:30","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5807:7:30","nodeType":"YulTypedName","src":"5807:7:30","type":""}],"src":"5767:410:30"},{"body":{"nativeSrc":"6211:152:30","nodeType":"YulBlock","src":"6211:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6228:1:30","nodeType":"YulLiteral","src":"6228:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6231:77:30","nodeType":"YulLiteral","src":"6231:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6221:6:30","nodeType":"YulIdentifier","src":"6221:6:30"},"nativeSrc":"6221:88:30","nodeType":"YulFunctionCall","src":"6221:88:30"},"nativeSrc":"6221:88:30","nodeType":"YulExpressionStatement","src":"6221:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6325:1:30","nodeType":"YulLiteral","src":"6325:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"6328:4:30","nodeType":"YulLiteral","src":"6328:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"6318:6:30","nodeType":"YulIdentifier","src":"6318:6:30"},"nativeSrc":"6318:15:30","nodeType":"YulFunctionCall","src":"6318:15:30"},"nativeSrc":"6318:15:30","nodeType":"YulExpressionStatement","src":"6318:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6349:1:30","nodeType":"YulLiteral","src":"6349:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6352:4:30","nodeType":"YulLiteral","src":"6352:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6342:6:30","nodeType":"YulIdentifier","src":"6342:6:30"},"nativeSrc":"6342:15:30","nodeType":"YulFunctionCall","src":"6342:15:30"},"nativeSrc":"6342:15:30","nodeType":"YulExpressionStatement","src":"6342:15:30"}]},"name":"panic_error_0x12","nativeSrc":"6183:180:30","nodeType":"YulFunctionDefinition","src":"6183:180:30"},{"body":{"nativeSrc":"6411:143:30","nodeType":"YulBlock","src":"6411:143:30","statements":[{"nativeSrc":"6421:25:30","nodeType":"YulAssignment","src":"6421:25:30","value":{"arguments":[{"name":"x","nativeSrc":"6444:1:30","nodeType":"YulIdentifier","src":"6444:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6426:17:30","nodeType":"YulIdentifier","src":"6426:17:30"},"nativeSrc":"6426:20:30","nodeType":"YulFunctionCall","src":"6426:20:30"},"variableNames":[{"name":"x","nativeSrc":"6421:1:30","nodeType":"YulIdentifier","src":"6421:1:30"}]},{"nativeSrc":"6455:25:30","nodeType":"YulAssignment","src":"6455:25:30","value":{"arguments":[{"name":"y","nativeSrc":"6478:1:30","nodeType":"YulIdentifier","src":"6478:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6460:17:30","nodeType":"YulIdentifier","src":"6460:17:30"},"nativeSrc":"6460:20:30","nodeType":"YulFunctionCall","src":"6460:20:30"},"variableNames":[{"name":"y","nativeSrc":"6455:1:30","nodeType":"YulIdentifier","src":"6455:1:30"}]},{"body":{"nativeSrc":"6502:22:30","nodeType":"YulBlock","src":"6502:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"6504:16:30","nodeType":"YulIdentifier","src":"6504:16:30"},"nativeSrc":"6504:18:30","nodeType":"YulFunctionCall","src":"6504:18:30"},"nativeSrc":"6504:18:30","nodeType":"YulExpressionStatement","src":"6504:18:30"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6499:1:30","nodeType":"YulIdentifier","src":"6499:1:30"}],"functionName":{"name":"iszero","nativeSrc":"6492:6:30","nodeType":"YulIdentifier","src":"6492:6:30"},"nativeSrc":"6492:9:30","nodeType":"YulFunctionCall","src":"6492:9:30"},"nativeSrc":"6489:35:30","nodeType":"YulIf","src":"6489:35:30"},{"nativeSrc":"6534:14:30","nodeType":"YulAssignment","src":"6534:14:30","value":{"arguments":[{"name":"x","nativeSrc":"6543:1:30","nodeType":"YulIdentifier","src":"6543:1:30"},{"name":"y","nativeSrc":"6546:1:30","nodeType":"YulIdentifier","src":"6546:1:30"}],"functionName":{"name":"div","nativeSrc":"6539:3:30","nodeType":"YulIdentifier","src":"6539:3:30"},"nativeSrc":"6539:9:30","nodeType":"YulFunctionCall","src":"6539:9:30"},"variableNames":[{"name":"r","nativeSrc":"6534:1:30","nodeType":"YulIdentifier","src":"6534:1:30"}]}]},"name":"checked_div_t_uint256","nativeSrc":"6369:185:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6400:1:30","nodeType":"YulTypedName","src":"6400:1:30","type":""},{"name":"y","nativeSrc":"6403:1:30","nodeType":"YulTypedName","src":"6403:1:30","type":""}],"returnVariables":[{"name":"r","nativeSrc":"6409:1:30","nodeType":"YulTypedName","src":"6409:1:30","type":""}],"src":"6369:185:30"},{"body":{"nativeSrc":"6602:48:30","nodeType":"YulBlock","src":"6602:48:30","statements":[{"nativeSrc":"6612:32:30","nodeType":"YulAssignment","src":"6612:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6637:5:30","nodeType":"YulIdentifier","src":"6637:5:30"}],"functionName":{"name":"iszero","nativeSrc":"6630:6:30","nodeType":"YulIdentifier","src":"6630:6:30"},"nativeSrc":"6630:13:30","nodeType":"YulFunctionCall","src":"6630:13:30"}],"functionName":{"name":"iszero","nativeSrc":"6623:6:30","nodeType":"YulIdentifier","src":"6623:6:30"},"nativeSrc":"6623:21:30","nodeType":"YulFunctionCall","src":"6623:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"6612:7:30","nodeType":"YulIdentifier","src":"6612:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"6560:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6584:5:30","nodeType":"YulTypedName","src":"6584:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6594:7:30","nodeType":"YulTypedName","src":"6594:7:30","type":""}],"src":"6560:90:30"},{"body":{"nativeSrc":"6696:76:30","nodeType":"YulBlock","src":"6696:76:30","statements":[{"body":{"nativeSrc":"6750:16:30","nodeType":"YulBlock","src":"6750:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6759:1:30","nodeType":"YulLiteral","src":"6759:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6762:1:30","nodeType":"YulLiteral","src":"6762:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6752:6:30","nodeType":"YulIdentifier","src":"6752:6:30"},"nativeSrc":"6752:12:30","nodeType":"YulFunctionCall","src":"6752:12:30"},"nativeSrc":"6752:12:30","nodeType":"YulExpressionStatement","src":"6752:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6719:5:30","nodeType":"YulIdentifier","src":"6719:5:30"},{"arguments":[{"name":"value","nativeSrc":"6741:5:30","nodeType":"YulIdentifier","src":"6741:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6726:14:30","nodeType":"YulIdentifier","src":"6726:14:30"},"nativeSrc":"6726:21:30","nodeType":"YulFunctionCall","src":"6726:21:30"}],"functionName":{"name":"eq","nativeSrc":"6716:2:30","nodeType":"YulIdentifier","src":"6716:2:30"},"nativeSrc":"6716:32:30","nodeType":"YulFunctionCall","src":"6716:32:30"}],"functionName":{"name":"iszero","nativeSrc":"6709:6:30","nodeType":"YulIdentifier","src":"6709:6:30"},"nativeSrc":"6709:40:30","nodeType":"YulFunctionCall","src":"6709:40:30"},"nativeSrc":"6706:60:30","nodeType":"YulIf","src":"6706:60:30"}]},"name":"validator_revert_t_bool","nativeSrc":"6656:116:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6689:5:30","nodeType":"YulTypedName","src":"6689:5:30","type":""}],"src":"6656:116:30"},{"body":{"nativeSrc":"6838:77:30","nodeType":"YulBlock","src":"6838:77:30","statements":[{"nativeSrc":"6848:22:30","nodeType":"YulAssignment","src":"6848:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"6863:6:30","nodeType":"YulIdentifier","src":"6863:6:30"}],"functionName":{"name":"mload","nativeSrc":"6857:5:30","nodeType":"YulIdentifier","src":"6857:5:30"},"nativeSrc":"6857:13:30","nodeType":"YulFunctionCall","src":"6857:13:30"},"variableNames":[{"name":"value","nativeSrc":"6848:5:30","nodeType":"YulIdentifier","src":"6848:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6903:5:30","nodeType":"YulIdentifier","src":"6903:5:30"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6879:23:30","nodeType":"YulIdentifier","src":"6879:23:30"},"nativeSrc":"6879:30:30","nodeType":"YulFunctionCall","src":"6879:30:30"},"nativeSrc":"6879:30:30","nodeType":"YulExpressionStatement","src":"6879:30:30"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"6778:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6816:6:30","nodeType":"YulTypedName","src":"6816:6:30","type":""},{"name":"end","nativeSrc":"6824:3:30","nodeType":"YulTypedName","src":"6824:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6832:5:30","nodeType":"YulTypedName","src":"6832:5:30","type":""}],"src":"6778:137:30"},{"body":{"nativeSrc":"6995:271:30","nodeType":"YulBlock","src":"6995:271:30","statements":[{"body":{"nativeSrc":"7041:83:30","nodeType":"YulBlock","src":"7041:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7043:77:30","nodeType":"YulIdentifier","src":"7043:77:30"},"nativeSrc":"7043:79:30","nodeType":"YulFunctionCall","src":"7043:79:30"},"nativeSrc":"7043:79:30","nodeType":"YulExpressionStatement","src":"7043:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7016:7:30","nodeType":"YulIdentifier","src":"7016:7:30"},{"name":"headStart","nativeSrc":"7025:9:30","nodeType":"YulIdentifier","src":"7025:9:30"}],"functionName":{"name":"sub","nativeSrc":"7012:3:30","nodeType":"YulIdentifier","src":"7012:3:30"},"nativeSrc":"7012:23:30","nodeType":"YulFunctionCall","src":"7012:23:30"},{"kind":"number","nativeSrc":"7037:2:30","nodeType":"YulLiteral","src":"7037:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7008:3:30","nodeType":"YulIdentifier","src":"7008:3:30"},"nativeSrc":"7008:32:30","nodeType":"YulFunctionCall","src":"7008:32:30"},"nativeSrc":"7005:119:30","nodeType":"YulIf","src":"7005:119:30"},{"nativeSrc":"7134:125:30","nodeType":"YulBlock","src":"7134:125:30","statements":[{"nativeSrc":"7149:15:30","nodeType":"YulVariableDeclaration","src":"7149:15:30","value":{"kind":"number","nativeSrc":"7163:1:30","nodeType":"YulLiteral","src":"7163:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7153:6:30","nodeType":"YulTypedName","src":"7153:6:30","type":""}]},{"nativeSrc":"7178:71:30","nodeType":"YulAssignment","src":"7178:71:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7221:9:30","nodeType":"YulIdentifier","src":"7221:9:30"},{"name":"offset","nativeSrc":"7232:6:30","nodeType":"YulIdentifier","src":"7232:6:30"}],"functionName":{"name":"add","nativeSrc":"7217:3:30","nodeType":"YulIdentifier","src":"7217:3:30"},"nativeSrc":"7217:22:30","nodeType":"YulFunctionCall","src":"7217:22:30"},{"name":"dataEnd","nativeSrc":"7241:7:30","nodeType":"YulIdentifier","src":"7241:7:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"7188:28:30","nodeType":"YulIdentifier","src":"7188:28:30"},"nativeSrc":"7188:61:30","nodeType":"YulFunctionCall","src":"7188:61:30"},"variableNames":[{"name":"value0","nativeSrc":"7178:6:30","nodeType":"YulIdentifier","src":"7178:6:30"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6921:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6965:9:30","nodeType":"YulTypedName","src":"6965:9:30","type":""},{"name":"dataEnd","nativeSrc":"6976:7:30","nodeType":"YulTypedName","src":"6976:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6988:6:30","nodeType":"YulTypedName","src":"6988:6:30","type":""}],"src":"6921:345:30"},{"body":{"nativeSrc":"7330:40:30","nodeType":"YulBlock","src":"7330:40:30","statements":[{"nativeSrc":"7341:22:30","nodeType":"YulAssignment","src":"7341:22:30","value":{"arguments":[{"name":"value","nativeSrc":"7357:5:30","nodeType":"YulIdentifier","src":"7357:5:30"}],"functionName":{"name":"mload","nativeSrc":"7351:5:30","nodeType":"YulIdentifier","src":"7351:5:30"},"nativeSrc":"7351:12:30","nodeType":"YulFunctionCall","src":"7351:12:30"},"variableNames":[{"name":"length","nativeSrc":"7341:6:30","nodeType":"YulIdentifier","src":"7341:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7272:98:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7313:5:30","nodeType":"YulTypedName","src":"7313:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7323:6:30","nodeType":"YulTypedName","src":"7323:6:30","type":""}],"src":"7272:98:30"},{"body":{"nativeSrc":"7438:184:30","nodeType":"YulBlock","src":"7438:184:30","statements":[{"nativeSrc":"7448:10:30","nodeType":"YulVariableDeclaration","src":"7448:10:30","value":{"kind":"number","nativeSrc":"7457:1:30","nodeType":"YulLiteral","src":"7457:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7452:1:30","nodeType":"YulTypedName","src":"7452:1:30","type":""}]},{"body":{"nativeSrc":"7517:63:30","nodeType":"YulBlock","src":"7517:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7542:3:30","nodeType":"YulIdentifier","src":"7542:3:30"},{"name":"i","nativeSrc":"7547:1:30","nodeType":"YulIdentifier","src":"7547:1:30"}],"functionName":{"name":"add","nativeSrc":"7538:3:30","nodeType":"YulIdentifier","src":"7538:3:30"},"nativeSrc":"7538:11:30","nodeType":"YulFunctionCall","src":"7538:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7561:3:30","nodeType":"YulIdentifier","src":"7561:3:30"},{"name":"i","nativeSrc":"7566:1:30","nodeType":"YulIdentifier","src":"7566:1:30"}],"functionName":{"name":"add","nativeSrc":"7557:3:30","nodeType":"YulIdentifier","src":"7557:3:30"},"nativeSrc":"7557:11:30","nodeType":"YulFunctionCall","src":"7557:11:30"}],"functionName":{"name":"mload","nativeSrc":"7551:5:30","nodeType":"YulIdentifier","src":"7551:5:30"},"nativeSrc":"7551:18:30","nodeType":"YulFunctionCall","src":"7551:18:30"}],"functionName":{"name":"mstore","nativeSrc":"7531:6:30","nodeType":"YulIdentifier","src":"7531:6:30"},"nativeSrc":"7531:39:30","nodeType":"YulFunctionCall","src":"7531:39:30"},"nativeSrc":"7531:39:30","nodeType":"YulExpressionStatement","src":"7531:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7478:1:30","nodeType":"YulIdentifier","src":"7478:1:30"},{"name":"length","nativeSrc":"7481:6:30","nodeType":"YulIdentifier","src":"7481:6:30"}],"functionName":{"name":"lt","nativeSrc":"7475:2:30","nodeType":"YulIdentifier","src":"7475:2:30"},"nativeSrc":"7475:13:30","nodeType":"YulFunctionCall","src":"7475:13:30"},"nativeSrc":"7467:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"7489:19:30","nodeType":"YulBlock","src":"7489:19:30","statements":[{"nativeSrc":"7491:15:30","nodeType":"YulAssignment","src":"7491:15:30","value":{"arguments":[{"name":"i","nativeSrc":"7500:1:30","nodeType":"YulIdentifier","src":"7500:1:30"},{"kind":"number","nativeSrc":"7503:2:30","nodeType":"YulLiteral","src":"7503:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7496:3:30","nodeType":"YulIdentifier","src":"7496:3:30"},"nativeSrc":"7496:10:30","nodeType":"YulFunctionCall","src":"7496:10:30"},"variableNames":[{"name":"i","nativeSrc":"7491:1:30","nodeType":"YulIdentifier","src":"7491:1:30"}]}]},"pre":{"nativeSrc":"7471:3:30","nodeType":"YulBlock","src":"7471:3:30","statements":[]},"src":"7467:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7600:3:30","nodeType":"YulIdentifier","src":"7600:3:30"},{"name":"length","nativeSrc":"7605:6:30","nodeType":"YulIdentifier","src":"7605:6:30"}],"functionName":{"name":"add","nativeSrc":"7596:3:30","nodeType":"YulIdentifier","src":"7596:3:30"},"nativeSrc":"7596:16:30","nodeType":"YulFunctionCall","src":"7596:16:30"},{"kind":"number","nativeSrc":"7614:1:30","nodeType":"YulLiteral","src":"7614:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7589:6:30","nodeType":"YulIdentifier","src":"7589:6:30"},"nativeSrc":"7589:27:30","nodeType":"YulFunctionCall","src":"7589:27:30"},"nativeSrc":"7589:27:30","nodeType":"YulExpressionStatement","src":"7589:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7376:246:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7420:3:30","nodeType":"YulTypedName","src":"7420:3:30","type":""},{"name":"dst","nativeSrc":"7425:3:30","nodeType":"YulTypedName","src":"7425:3:30","type":""},{"name":"length","nativeSrc":"7430:6:30","nodeType":"YulTypedName","src":"7430:6:30","type":""}],"src":"7376:246:30"},{"body":{"nativeSrc":"7736:278:30","nodeType":"YulBlock","src":"7736:278:30","statements":[{"nativeSrc":"7746:52:30","nodeType":"YulVariableDeclaration","src":"7746:52:30","value":{"arguments":[{"name":"value","nativeSrc":"7792:5:30","nodeType":"YulIdentifier","src":"7792:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7760:31:30","nodeType":"YulIdentifier","src":"7760:31:30"},"nativeSrc":"7760:38:30","nodeType":"YulFunctionCall","src":"7760:38:30"},"variables":[{"name":"length","nativeSrc":"7750:6:30","nodeType":"YulTypedName","src":"7750:6:30","type":""}]},{"nativeSrc":"7807:95:30","nodeType":"YulAssignment","src":"7807:95:30","value":{"arguments":[{"name":"pos","nativeSrc":"7890:3:30","nodeType":"YulIdentifier","src":"7890:3:30"},{"name":"length","nativeSrc":"7895:6:30","nodeType":"YulIdentifier","src":"7895:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7814:75:30","nodeType":"YulIdentifier","src":"7814:75:30"},"nativeSrc":"7814:88:30","nodeType":"YulFunctionCall","src":"7814:88:30"},"variableNames":[{"name":"pos","nativeSrc":"7807:3:30","nodeType":"YulIdentifier","src":"7807:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7950:5:30","nodeType":"YulIdentifier","src":"7950:5:30"},{"kind":"number","nativeSrc":"7957:4:30","nodeType":"YulLiteral","src":"7957:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7946:3:30","nodeType":"YulIdentifier","src":"7946:3:30"},"nativeSrc":"7946:16:30","nodeType":"YulFunctionCall","src":"7946:16:30"},{"name":"pos","nativeSrc":"7964:3:30","nodeType":"YulIdentifier","src":"7964:3:30"},{"name":"length","nativeSrc":"7969:6:30","nodeType":"YulIdentifier","src":"7969:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7911:34:30","nodeType":"YulIdentifier","src":"7911:34:30"},"nativeSrc":"7911:65:30","nodeType":"YulFunctionCall","src":"7911:65:30"},"nativeSrc":"7911:65:30","nodeType":"YulExpressionStatement","src":"7911:65:30"},{"nativeSrc":"7985:23:30","nodeType":"YulAssignment","src":"7985:23:30","value":{"arguments":[{"name":"pos","nativeSrc":"7996:3:30","nodeType":"YulIdentifier","src":"7996:3:30"},{"name":"length","nativeSrc":"8001:6:30","nodeType":"YulIdentifier","src":"8001:6:30"}],"functionName":{"name":"add","nativeSrc":"7992:3:30","nodeType":"YulIdentifier","src":"7992:3:30"},"nativeSrc":"7992:16:30","nodeType":"YulFunctionCall","src":"7992:16:30"},"variableNames":[{"name":"end","nativeSrc":"7985:3:30","nodeType":"YulIdentifier","src":"7985:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7628:386:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7717:5:30","nodeType":"YulTypedName","src":"7717:5:30","type":""},{"name":"pos","nativeSrc":"7724:3:30","nodeType":"YulTypedName","src":"7724:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7732:3:30","nodeType":"YulTypedName","src":"7732:3:30","type":""}],"src":"7628:386:30"},{"body":{"nativeSrc":"8154:137:30","nodeType":"YulBlock","src":"8154:137:30","statements":[{"nativeSrc":"8165:100:30","nodeType":"YulAssignment","src":"8165:100:30","value":{"arguments":[{"name":"value0","nativeSrc":"8252:6:30","nodeType":"YulIdentifier","src":"8252:6:30"},{"name":"pos","nativeSrc":"8261:3:30","nodeType":"YulIdentifier","src":"8261:3:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8172:79:30","nodeType":"YulIdentifier","src":"8172:79:30"},"nativeSrc":"8172:93:30","nodeType":"YulFunctionCall","src":"8172:93:30"},"variableNames":[{"name":"pos","nativeSrc":"8165:3:30","nodeType":"YulIdentifier","src":"8165:3:30"}]},{"nativeSrc":"8275:10:30","nodeType":"YulAssignment","src":"8275:10:30","value":{"name":"pos","nativeSrc":"8282:3:30","nodeType":"YulIdentifier","src":"8282:3:30"},"variableNames":[{"name":"end","nativeSrc":"8275:3:30","nodeType":"YulIdentifier","src":"8275:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8020:271:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8133:3:30","nodeType":"YulTypedName","src":"8133:3:30","type":""},{"name":"value0","nativeSrc":"8139:6:30","nodeType":"YulTypedName","src":"8139:6:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8150:3:30","nodeType":"YulTypedName","src":"8150:3:30","type":""}],"src":"8020:271:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"561":[{"length":32,"start":1715}],"563":[{"length":32,"start":962}],"8115":[{"length":32,"start":1012}]},"linkReferences":{},"object":"6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063be9a655511610059578063be9a6555146102ef578063efbe1c1c1461031a578063f2fde38b14610345578063fbccedae1461036e576100f3565b80638da5cb5b1461021f578063961325211461024a5780639852595c14610275578063a3f8eace146102b2576100f3565b806319165587116100c6578063191655871461018b578063715018a6146101b4578063810ec23b146101cb57806386d1a69f14610208576100f3565b80630a17b06b146100f85780630fb5a6b41461013557806313d033c014610160576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190610db7565b610399565b60405161012c9190610dfd565b60405180910390f35b34801561014157600080fd5b5061014a6103be565b6040516101579190610dfd565b60405180910390f35b34801561016c57600080fd5b506101756103f0565b6040516101829190610dfd565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190610e76565b610422565b005b3480156101c057600080fd5b506101c96104e9565b005b3480156101d757600080fd5b506101f260048036038101906101ed9190610ea3565b6104fd565b6040516101ff9190610dfd565b60405180910390f35b34801561021457600080fd5b5061021d61059d565b005b34801561022b57600080fd5b5061023461060d565b6040516102419190610ef2565b60405180910390f35b34801561025657600080fd5b5061025f610636565b60405161026c9190610dfd565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190610e76565b610640565b6040516102a99190610dfd565b60405180910390f35b3480156102be57600080fd5b506102d960048036038101906102d49190610e76565b610689565b6040516102e69190610dfd565b60405180910390f35b3480156102fb57600080fd5b506103046106af565b6040516103119190610dfd565b60405180910390f35b34801561032657600080fd5b5061032f6106e1565b60405161033c9190610dfd565b60405180910390f35b34801561035157600080fd5b5061036c60048036038101906103679190610e76565b610702565b005b34801561037a57600080fd5b50610383610788565b6040516103909190610dfd565b60405180910390f35b60006103b76103a6610636565b476103b19190610f3c565b836107aa565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061042d82610689565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461047e9190610f3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104cb9190610dfd565b60405180910390a26104e5826104df61060d565b836107de565b5050565b6104f161085d565b6104fb60006108e4565b565b600061059561050b84610640565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105449190610ef2565b602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610f9c565b61058f9190610f3c565b836107aa565b905092915050565b60006105a7610788565b905080600160008282546105bb9190610f3c565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105f19190610dfd565b60405180910390a161060a61060461060d565b826109a8565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061069482610640565b61069e83426104fd565b6106a89190610fc9565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006106eb6103be565b6106f36106af565b6106fd9190610f3c565b905090565b61070a61085d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107739190610ef2565b60405180910390fd5b610785816108e4565b50565b6000610792610636565b61079b42610399565b6107a59190610fc9565b905090565b60006107b46103f0565b8267ffffffffffffffff16106107d3576107ce8383610a95565b6107d6565b60005b905092915050565b610858838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610811929190610ffd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b1c565b505050565b610865610bb3565b73ffffffffffffffffffffffffffffffffffffffff1661088361060d565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576108a6610bb3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d99190610ef2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109ed57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109e49190610ef2565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610a1390611057565b60006040518083038185875af1925050503d8060008114610a50576040519150601f19603f3d011682016040523d82523d6000602084013e610a55565b606091505b5050905080610a90576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610a9f6106af565b8267ffffffffffffffff161015610ab95760009050610b16565b610ac16106e1565b8267ffffffffffffffff1610610ad957829050610b16565b610ae16103be565b610ae96106af565b8367ffffffffffffffff16610afe9190610fc9565b84610b09919061106c565b610b1391906110dd565b90505b92915050565b6000610b47828473ffffffffffffffffffffffffffffffffffffffff16610bbb90919063ffffffff16565b90506000815114158015610b6c575080806020019051810190610b6a9190611146565b155b15610bae57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610ba59190610ef2565b60405180910390fd5b505050565b600033905090565b6060610bc983836000610bd1565b905092915050565b606081471015610c1857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610c0f9190610ef2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610c4191906111d9565b60006040518083038185875af1925050503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b5091509150610c93868383610c9e565b925050509392505050565b606082610cb357610cae82610d2d565b610d25565b60008251148015610cdb575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610d1d57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610d149190610ef2565b60405180910390fd5b819050610d26565b5b9392505050565b600081511115610d405780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610d9481610d77565b8114610d9f57600080fd5b50565b600081359050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc610d72565b5b6000610ddb84828501610da2565b91505092915050565b6000819050919050565b610df781610de4565b82525050565b6000602082019050610e126000830184610dee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4382610e18565b9050919050565b610e5381610e38565b8114610e5e57600080fd5b50565b600081359050610e7081610e4a565b92915050565b600060208284031215610e8c57610e8b610d72565b5b6000610e9a84828501610e61565b91505092915050565b60008060408385031215610eba57610eb9610d72565b5b6000610ec885828601610e61565b9250506020610ed985828601610da2565b9150509250929050565b610eec81610e38565b82525050565b6000602082019050610f076000830184610ee3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4782610de4565b9150610f5283610de4565b9250828201905080821115610f6a57610f69610f0d565b5b92915050565b610f7981610de4565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600060208284031215610fb257610fb1610d72565b5b6000610fc084828501610f87565b91505092915050565b6000610fd482610de4565b9150610fdf83610de4565b9250828203905081811115610ff757610ff6610f0d565b5b92915050565b60006040820190506110126000830185610ee3565b61101f6020830184610dee565b9392505050565b600081905092915050565b50565b6000611041600083611026565b915061104c82611031565b600082019050919050565b600061106282611034565b9150819050919050565b600061107782610de4565b915061108283610de4565b925082820261109081610de4565b915082820484148315176110a7576110a6610f0d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110e882610de4565b91506110f383610de4565b925082611103576111026110ae565b5b828204905092915050565b60008115159050919050565b6111238161110e565b811461112e57600080fd5b50565b6000815190506111408161111a565b92915050565b60006020828403121561115c5761115b610d72565b5b600061116a84828501611131565b91505092915050565b600081519050919050565b60005b8381101561119c578082015181840152602081019050611181565b60008484015250505050565b60006111b382611173565b6111bd8185611026565b93506111cd81856020860161117e565b80840191505092915050565b60006111e582846111a8565b91508190509291505056fea26469706673582212200e4fdcc0d11e38f965e10c67cb2120229f3b5056e93cce0e80801ecdb217509f64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x36E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x2B2 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x208 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x160 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3B7 PUSH2 0x3A6 PUSH2 0x636 JUMP JUMPDEST SELFBALANCE PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4E5 DUP3 PUSH2 0x4DF PUSH2 0x60D JUMP JUMPDEST DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x8E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH2 0x50B DUP5 PUSH2 0x640 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x60A PUSH2 0x604 PUSH2 0x60D JUMP JUMPDEST DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x69E DUP4 TIMESTAMP PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70A PUSH2 0x85D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x792 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x79B TIMESTAMP PUSH2 0x399 JUMP JUMPDEST PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B4 PUSH2 0x3F0 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x7D3 JUMPI PUSH2 0x7CE DUP4 DUP4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x858 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP3 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9ED JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x6AF JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0x6E1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xAD9 JUMPI DUP3 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x6AF JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBAE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xC18 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC93 DUP7 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCAE DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xCDB JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD1D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xD26 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD40 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH2 0xEB9 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF79 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP5 DUP3 DUP6 ADD PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDF DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1012 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x0 DUP4 PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1090 DUP2 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10E8 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1123 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1140 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B3 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x11BD DUP2 DUP6 PUSH2 0x1026 JUMP JUMPDEST SWAP4 POP PUSH2 0x11CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 DUP3 DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x4F 0xDC 0xC0 0xD1 0x1E CODESIZE 0xF9 PUSH6 0xE10C67CB2120 0x22 SWAP16 EXTCODESIZE POP JUMP 0xE9 EXTCODECOPY 0xCE 0xE DUP1 DUP1 0x1E 0xCD 0xB2 OR POP SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:687:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:165:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:85:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:246:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;4919:202:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3905:198;;;;;;;;;;;;;:::i;:::-;;1638:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:91:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3608:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:134:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:165;4682:7;4708:63;4749:10;:8;:10::i;:::-;4725:21;:34;;;;:::i;:::-;4761:9;4708:16;:63::i;:::-;4701:70;;4613:165;;;:::o;2662:91::-;2711:7;2737:9;2730:16;;;;2662:91;:::o;953:85:29:-;999:7;1025:6;1018:13;;;;953:85;:::o;4227:246:3:-;4284:14;4301:17;4312:5;4301:10;:17::i;:::-;4284:34;;4353:6;4328:14;:21;4343:5;4328:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4388:5;4374:28;;;4395:6;4374:28;;;;;;:::i;:::-;;;;;;;;4412:54;4442:5;4450:7;:5;:7::i;:::-;4459:6;4412:22;:54::i;:::-;4274:199;4227:246;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4919:202:3:-;5003:7;5029:85;5087:15;5096:5;5087:8;:15::i;:::-;5053:5;5046:23;;;5078:4;5046:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;5104:9;5029:16;:85::i;:::-;5022:92;;4919:202;;;;:::o;3905:198::-;3949:14;3966:12;:10;:12::i;:::-;3949:29;;4001:6;3988:9;;:19;;;;;;;:::i;:::-;;;;;;;;4022:21;4036:6;4022:21;;;;;;:::i;:::-;;;;;;;;4053:43;4079:7;:5;:7::i;:::-;4089:6;4053:17;:43::i;:::-;3939:164;3905:198::o;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2979:91:3:-;3028:7;3054:9;;3047:16;;2979:91;:::o;3137:116::-;3199:7;3225:14;:21;3240:5;3225:21;;;;;;;;;;;;;;;;3218:28;;3137:116;;;:::o;3608:159::-;3672:7;3745:15;3754:5;3745:8;:15::i;:::-;3698:44;3711:5;3725:15;3698:12;:44::i;:::-;:62;;;;:::i;:::-;3691:69;;3608:159;;;:::o;2510:85::-;2556:7;2582:6;2575:13;;;;2510:85;:::o;2817:97::-;2861:7;2897:10;:8;:10::i;:::-;2887:7;:5;:7::i;:::-;:20;;;;:::i;:::-;2880:27;;2817:97;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3328:134:3:-;3379:7;3445:10;:8;:10::i;:::-;3405:37;3425:15;3405:12;:37::i;:::-;:50;;;;:::i;:::-;3398:57;;3328:134;:::o;1617:240:29:-;1748:7;1786;:5;:7::i;:::-;1774:9;:19;;;:76;;1800:50;1823:15;1840:9;1800:22;:50::i;:::-;1774:76;;;1796:1;1774:76;1767:83;;1617:240;;;;:::o;1303:160:11:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1531:331:12:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;5316:352:3:-;5416:7;5451;:5;:7::i;:::-;5439:9;:19;;;5435:227;;;5481:1;5474:8;;;;5435:227;5516:5;:3;:5::i;:::-;5503:9;:18;;;5499:163;;5544:15;5537:22;;;;5499:163;5641:10;:8;:10::i;:::-;5629:7;:5;:7::i;:::-;5617:9;:19;;;;;;:::i;:::-;5598:15;:39;;;;:::i;:::-;5597:54;;;;:::i;:::-;5590:61;;5316:352;;;;;:::o;4059:629:11:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;2705:151:12:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:30;197:1;194;187:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:77::-;1080:7;1109:5;1098:16;;1043:77;;;:::o;1126:118::-;1213:24;1231:5;1213:24;:::i;:::-;1208:3;1201:37;1126:118;;:::o;1250:222::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:71;1462:1;1451:9;1447:17;1438:6;1394:71;:::i;:::-;1250:222;;;;:::o;1478:126::-;1515:7;1555:42;1548:5;1544:54;1533:65;;1478:126;;;:::o;1610:96::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1610:96;;;:::o;1712:122::-;1785:24;1803:5;1785:24;:::i;:::-;1778:5;1775:35;1765:63;;1824:1;1821;1814:12;1765:63;1712:122;:::o;1840:139::-;1886:5;1924:6;1911:20;1902:29;;1940:33;1967:5;1940:33;:::i;:::-;1840:139;;;;:::o;1985:329::-;2044:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:119;;;2099:79;;:::i;:::-;2061:119;2219:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2190:117;1985:329;;;;:::o;2320:472::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2697:2;2723:52;2767:7;2758:6;2747:9;2743:22;2723:52;:::i;:::-;2713:62;;2668:117;2320:472;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:222::-;3015:4;3053:2;3042:9;3038:18;3030:26;;3066:71;3134:1;3123:9;3119:17;3110:6;3066:71;:::i;:::-;2922:222;;;;:::o;3150:180::-;3198:77;3195:1;3188:88;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15;3336:191;3376:3;3395:20;3413:1;3395:20;:::i;:::-;3390:25;;3429:20;3447:1;3429:20;:::i;:::-;3424:25;;3472:1;3469;3465:9;3458:16;;3493:3;3490:1;3487:10;3484:36;;;3500:18;;:::i;:::-;3484:36;3336:191;;;;:::o;3533:122::-;3606:24;3624:5;3606:24;:::i;:::-;3599:5;3596:35;3586:63;;3645:1;3642;3635:12;3586:63;3533:122;:::o;3661:143::-;3718:5;3749:6;3743:13;3734:22;;3765:33;3792:5;3765:33;:::i;:::-;3661:143;;;;:::o;3810:351::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:64;4136:7;4127:6;4116:9;4112:22;4080:64;:::i;:::-;4070:74;;4026:128;3810:351;;;;:::o;4167:194::-;4207:4;4227:20;4245:1;4227:20;:::i;:::-;4222:25;;4261:20;4279:1;4261:20;:::i;:::-;4256:25;;4305:1;4302;4298:9;4290:17;;4329:1;4323:4;4320:11;4317:37;;;4334:18;;:::i;:::-;4317:37;4167:194;;;;:::o;4367:332::-;4488:4;4526:2;4515:9;4511:18;4503:26;;4539:71;4607:1;4596:9;4592:17;4583:6;4539:71;:::i;:::-;4620:72;4688:2;4677:9;4673:18;4664:6;4620:72;:::i;:::-;4367:332;;;;;:::o;4705:147::-;4806:11;4843:3;4828:18;;4705:147;;;;:::o;4858:114::-;;:::o;4978:398::-;5137:3;5158:83;5239:1;5234:3;5158:83;:::i;:::-;5151:90;;5250:93;5339:3;5250:93;:::i;:::-;5368:1;5363:3;5359:11;5352:18;;4978:398;;;:::o;5382:379::-;5566:3;5588:147;5731:3;5588:147;:::i;:::-;5581:154;;5752:3;5745:10;;5382:379;;;:::o;5767:410::-;5807:7;5830:20;5848:1;5830:20;:::i;:::-;5825:25;;5864:20;5882:1;5864:20;:::i;:::-;5859:25;;5919:1;5916;5912:9;5941:30;5959:11;5941:30;:::i;:::-;5930:41;;6120:1;6111:7;6107:15;6104:1;6101:22;6081:1;6074:9;6054:83;6031:139;;6150:18;;:::i;:::-;6031:139;5815:362;5767:410;;;;:::o;6183:180::-;6231:77;6228:1;6221:88;6328:4;6325:1;6318:15;6352:4;6349:1;6342:15;6369:185;6409:1;6426:20;6444:1;6426:20;:::i;:::-;6421:25;;6460:20;6478:1;6460:20;:::i;:::-;6455:25;;6499:1;6489:35;;6504:18;;:::i;:::-;6489:35;6546:1;6543;6539:9;6534:14;;6369:185;;;;:::o;6560:90::-;6594:7;6637:5;6630:13;6623:21;6612:32;;6560:90;;;:::o;6656:116::-;6726:21;6741:5;6726:21;:::i;:::-;6719:5;6716:32;6706:60;;6762:1;6759;6752:12;6706:60;6656:116;:::o;6778:137::-;6832:5;6863:6;6857:13;6848:22;;6879:30;6903:5;6879:30;:::i;:::-;6778:137;;;;:::o;6921:345::-;6988:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:119;;;7043:79;;:::i;:::-;7005:119;7163:1;7188:61;7241:7;7232:6;7221:9;7217:22;7188:61;:::i;:::-;7178:71;;7134:125;6921:345;;;;:::o;7272:98::-;7323:6;7357:5;7351:12;7341:22;;7272:98;;;:::o;7376:246::-;7457:1;7467:113;7481:6;7478:1;7475:13;7467:113;;;7566:1;7561:3;7557:11;7551:18;7547:1;7542:3;7538:11;7531:39;7503:2;7500:1;7496:10;7491:15;;7467:113;;;7614:1;7605:6;7600:3;7596:16;7589:27;7438:184;7376:246;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:271::-;8150:3;8172:93;8261:3;8252:6;8172:93;:::i;:::-;8165:100;;8282:3;8275:10;;8020:271;;;;:::o"},"methodIdentifiers":{"cliff()":"13d033c0","duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"name\":\"InvalidCliffDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidCliffDuration(uint64,uint64)\":[{\"details\":\"The specified cliff duration is larger than the vesting duration.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"cliff()\":{\"details\":\"Getter for the cliff timestamp.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVestingWallet.sol\":\"MyVestingWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/MyVestingWallet.sol\":{\"keccak256\":\"0xd5bf61ac77fe45fe834465c85d246816eb82afbc33146cd96bb706729aad5d2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7aa9e7d74eae8d301f95c8ceb1f4986bb7d87269298ab6fc37df93420ce54d3\",\"dweb:/ipfs/QmVNieKo1p1jsz1fg5TCX5UFhkWQdGYycg2TNJw49XMj7c\"]},\"contracts/abstract/VestingWalletCliff.sol\":{\"keccak256\":\"0x731eb8a72b7ba86cb93f3b740d8cf973a90e764b11f09228b3bfd845bbab334a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f0162e4026c26e407283c01fe99e3b22612f196cf9007a9e6513baa5a731d2\",\"dweb:/ipfs/QmWr9NExvA8Y1eCgvWmMHHQiBkoWSRFLd4aHeN4unv253q\"]}},\"version\":1}"}},"contracts/abstract/VestingWalletCliff.sol":{"VestingWalletCliff":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"uint64","name":"cliffSeconds","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"name":"InvalidCliffDuration","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"cliff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"cliff()":"13d033c0","duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"name\":\"InvalidCliffDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {VestingWallet} that adds a cliff to the vesting schedule.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidCliffDuration(uint64,uint64)\":[{\"details\":\"The specified cliff duration is larger than the vesting duration.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"cliff()\":{\"details\":\"Getter for the cliff timestamp.\"},\"constructor\":{\"details\":\"Set the start timestamp of the vesting wallet cliff.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstract/VestingWalletCliff.sol\":\"VestingWalletCliff\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/abstract/VestingWalletCliff.sol\":{\"keccak256\":\"0x731eb8a72b7ba86cb93f3b740d8cf973a90e764b11f09228b3bfd845bbab334a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f0162e4026c26e407283c01fe99e3b22612f196cf9007a9e6513baa5a731d2\",\"dweb:/ipfs/QmWr9NExvA8Y1eCgvWmMHHQiBkoWSRFLd4aHeN4unv253q\"]}},\"version\":1}"}}}}}